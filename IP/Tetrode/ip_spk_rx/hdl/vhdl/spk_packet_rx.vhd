-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.1
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity spk_packet_rx is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    pre_in_TUSER : IN STD_LOGIC_VECTOR (4 downto 0);
    pre_in_TVALID : IN STD_LOGIC;
    pre_in_TREADY : OUT STD_LOGIC;
    pre_in_TLAST : IN STD_LOGIC;
    pre_in_TID : IN STD_LOGIC_VECTOR (11 downto 0);
    pre_in_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    pre_in_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    post_in_TUSER : IN STD_LOGIC_VECTOR (4 downto 0);
    post_in_TVALID : IN STD_LOGIC;
    post_in_TREADY : OUT STD_LOGIC;
    post_in_TLAST : IN STD_LOGIC;
    post_in_TID : IN STD_LOGIC_VECTOR (11 downto 0);
    post_in_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    post_in_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    time_stamp_V_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    time_stamp_V_TVALID : IN STD_LOGIC;
    time_stamp_V_TREADY : OUT STD_LOGIC;
    spk_out_stream_V_data_V_TDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
    spk_out_stream_V_data_V_TVALID : OUT STD_LOGIC;
    spk_out_stream_V_data_V_TREADY : IN STD_LOGIC );
end;


architecture behav of spk_packet_rx is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "spk_packet_rx,hls_ip_2016_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k325tffg900-2,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.410000,HLS_SYN_LAT=11,HLS_SYN_TPT=none,HLS_SYN_MEM=60,HLS_SYN_DSP=2,HLS_SYN_FF=1082,HLS_SYN_LUT=911}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (15 downto 0) := "0000010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (15 downto 0) := "0000100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (15 downto 0) := "0001000000000000";
    constant ap_ST_pp0_stg0_fsm_13 : STD_LOGIC_VECTOR (15 downto 0) := "0010000000000000";
    constant ap_ST_pp1_stg0_fsm_14 : STD_LOGIC_VECTOR (15 downto 0) := "0100000000000000";
    constant ap_ST_st20_fsm_15 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_true : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv13_13 : STD_LOGIC_VECTOR (12 downto 0) := "0000000010011";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_33 : BOOLEAN;
    signal pre_in_V_user_V_0_data_out : STD_LOGIC_VECTOR (4 downto 0);
    signal pre_in_V_user_V_0_vld_in : STD_LOGIC;
    signal pre_in_V_user_V_0_vld_out : STD_LOGIC;
    signal pre_in_V_user_V_0_ack_out : STD_LOGIC;
    signal pre_in_V_user_V_0_data_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal pre_in_V_user_V_0_areset_d : STD_LOGIC;
    signal pre_in_V_user_V_0_in_rdy : STD_LOGIC := '0';
    signal pre_in_V_user_V_0_has_vld_data_reg_i : STD_LOGIC;
    signal pre_in_V_user_V_0_has_vld_data_reg : STD_LOGIC := '0';
    signal pre_in_V_last_0_vld_in : STD_LOGIC;
    signal pre_in_V_last_0_vld_out : STD_LOGIC;
    signal pre_in_V_last_0_ack_out : STD_LOGIC;
    signal pre_in_V_last_0_areset_d : STD_LOGIC;
    signal pre_in_V_last_0_in_rdy : STD_LOGIC := '0';
    signal pre_in_V_last_0_has_vld_data_reg_i : STD_LOGIC;
    signal pre_in_V_last_0_has_vld_data_reg : STD_LOGIC := '0';
    signal pre_in_V_id_V_0_data_out : STD_LOGIC_VECTOR (11 downto 0);
    signal pre_in_V_id_V_0_vld_in : STD_LOGIC;
    signal pre_in_V_id_V_0_vld_out : STD_LOGIC;
    signal pre_in_V_id_V_0_ack_out : STD_LOGIC;
    signal pre_in_V_id_V_0_data_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal pre_in_V_id_V_0_areset_d : STD_LOGIC;
    signal pre_in_V_id_V_0_in_rdy : STD_LOGIC := '0';
    signal pre_in_V_id_V_0_has_vld_data_reg_i : STD_LOGIC;
    signal pre_in_V_id_V_0_has_vld_data_reg : STD_LOGIC := '0';
    signal pre_in_V_data_V_0_data_out : STD_LOGIC_VECTOR (127 downto 0);
    signal pre_in_V_data_V_0_vld_in : STD_LOGIC;
    signal pre_in_V_data_V_0_vld_out : STD_LOGIC;
    signal pre_in_V_data_V_0_ack_out : STD_LOGIC;
    signal pre_in_V_data_V_0_data_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal pre_in_V_data_V_0_areset_d : STD_LOGIC;
    signal pre_in_V_data_V_0_in_rdy : STD_LOGIC := '0';
    signal pre_in_V_data_V_0_has_vld_data_reg_i : STD_LOGIC;
    signal pre_in_V_data_V_0_has_vld_data_reg : STD_LOGIC := '0';
    signal pre_in_V_dest_V_0_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal pre_in_V_dest_V_0_vld_in : STD_LOGIC;
    signal pre_in_V_dest_V_0_vld_out : STD_LOGIC;
    signal pre_in_V_dest_V_0_ack_out : STD_LOGIC;
    signal pre_in_V_dest_V_0_data_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal pre_in_V_dest_V_0_areset_d : STD_LOGIC;
    signal pre_in_V_dest_V_0_in_rdy : STD_LOGIC := '0';
    signal pre_in_V_dest_V_0_has_vld_data_reg_i : STD_LOGIC;
    signal pre_in_V_dest_V_0_has_vld_data_reg : STD_LOGIC := '0';
    signal post_in_V_user_V_0_data_out : STD_LOGIC_VECTOR (4 downto 0);
    signal post_in_V_user_V_0_vld_in : STD_LOGIC;
    signal post_in_V_user_V_0_vld_out : STD_LOGIC;
    signal post_in_V_user_V_0_ack_out : STD_LOGIC;
    signal post_in_V_user_V_0_data_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal post_in_V_user_V_0_areset_d : STD_LOGIC;
    signal post_in_V_user_V_0_in_rdy : STD_LOGIC := '0';
    signal post_in_V_user_V_0_has_vld_data_reg_i : STD_LOGIC;
    signal post_in_V_user_V_0_has_vld_data_reg : STD_LOGIC := '0';
    signal post_in_V_last_0_data_out : STD_LOGIC;
    signal post_in_V_last_0_vld_in : STD_LOGIC;
    signal post_in_V_last_0_vld_out : STD_LOGIC;
    signal post_in_V_last_0_ack_out : STD_LOGIC;
    signal post_in_V_last_0_data_reg : STD_LOGIC;
    signal post_in_V_last_0_areset_d : STD_LOGIC;
    signal post_in_V_last_0_in_rdy : STD_LOGIC := '0';
    signal post_in_V_last_0_has_vld_data_reg_i : STD_LOGIC;
    signal post_in_V_last_0_has_vld_data_reg : STD_LOGIC := '0';
    signal post_in_V_id_V_0_data_out : STD_LOGIC_VECTOR (11 downto 0);
    signal post_in_V_id_V_0_vld_in : STD_LOGIC;
    signal post_in_V_id_V_0_vld_out : STD_LOGIC;
    signal post_in_V_id_V_0_ack_out : STD_LOGIC;
    signal post_in_V_id_V_0_data_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal post_in_V_id_V_0_areset_d : STD_LOGIC;
    signal post_in_V_id_V_0_in_rdy : STD_LOGIC := '0';
    signal post_in_V_id_V_0_has_vld_data_reg_i : STD_LOGIC;
    signal post_in_V_id_V_0_has_vld_data_reg : STD_LOGIC := '0';
    signal post_in_V_data_V_0_data_out : STD_LOGIC_VECTOR (127 downto 0);
    signal post_in_V_data_V_0_vld_in : STD_LOGIC;
    signal post_in_V_data_V_0_vld_out : STD_LOGIC;
    signal post_in_V_data_V_0_ack_out : STD_LOGIC;
    signal post_in_V_data_V_0_data_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal post_in_V_data_V_0_areset_d : STD_LOGIC;
    signal post_in_V_data_V_0_in_rdy : STD_LOGIC := '0';
    signal post_in_V_data_V_0_has_vld_data_reg_i : STD_LOGIC;
    signal post_in_V_data_V_0_has_vld_data_reg : STD_LOGIC := '0';
    signal post_in_V_dest_V_0_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal post_in_V_dest_V_0_vld_in : STD_LOGIC;
    signal post_in_V_dest_V_0_vld_out : STD_LOGIC;
    signal post_in_V_dest_V_0_ack_out : STD_LOGIC;
    signal post_in_V_dest_V_0_data_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal post_in_V_dest_V_0_areset_d : STD_LOGIC;
    signal post_in_V_dest_V_0_in_rdy : STD_LOGIC := '0';
    signal post_in_V_dest_V_0_has_vld_data_reg_i : STD_LOGIC;
    signal post_in_V_dest_V_0_has_vld_data_reg : STD_LOGIC := '0';
    signal time_stamp_V_0_data_out : STD_LOGIC_VECTOR (31 downto 0);
    signal time_stamp_V_0_vld_in : STD_LOGIC;
    signal time_stamp_V_0_vld_out : STD_LOGIC;
    signal time_stamp_V_0_ack_out : STD_LOGIC;
    signal time_stamp_V_0_data_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal time_stamp_V_0_areset_d : STD_LOGIC;
    signal time_stamp_V_0_in_rdy : STD_LOGIC := '0';
    signal time_stamp_V_0_has_vld_data_reg_i : STD_LOGIC;
    signal time_stamp_V_0_has_vld_data_reg : STD_LOGIC := '0';
    signal spk_out_stream_V_data_V_1_data_in : STD_LOGIC_VECTOR (127 downto 0);
    signal spk_out_stream_V_data_V_1_vld_in : STD_LOGIC;
    signal spk_out_stream_V_data_V_1_ack_in : STD_LOGIC;
    signal spk_out_stream_V_data_V_1_ack_out : STD_LOGIC;
    signal spk_out_stream_V_data_V_1_data_reg : STD_LOGIC_VECTOR (127 downto 0);
    signal spk_out_stream_V_data_V_1_sRdy : STD_LOGIC;
    signal spk_out_stream_V_data_V_1_mVld : STD_LOGIC := '0';
    signal spk_out_stream_V_data_V_1_areset_d : STD_LOGIC;
    signal spk_A_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal spk_A_V_ce0 : STD_LOGIC;
    signal spk_A_V_we0 : STD_LOGIC;
    signal spk_A_V_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal spk_A_V_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal spk_B_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal spk_B_V_ce0 : STD_LOGIC;
    signal spk_B_V_we0 : STD_LOGIC;
    signal spk_B_V_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal spk_B_V_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal pre_in_TDATA_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_446 : BOOLEAN;
    signal grp_nbreadreq_fu_84_p7 : STD_LOGIC_VECTOR (0 downto 0);
    signal post_in_TDATA_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_459 : BOOLEAN;
    signal grp_nbreadreq_fu_114_p7 : STD_LOGIC_VECTOR (0 downto 0);
    signal time_stamp_V_TDATA_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_st11_fsm_10 : STD_LOGIC;
    signal ap_sig_471 : BOOLEAN;
    signal spk_out_stream_V_data_V_TDATA_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_st12_fsm_11 : STD_LOGIC;
    signal ap_sig_483 : BOOLEAN;
    signal tmp_s_fu_306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st13_fsm_12 : STD_LOGIC;
    signal ap_sig_494 : BOOLEAN;
    signal ap_sig_cseq_ST_pp0_stg0_fsm_13 : STD_LOGIC;
    signal ap_sig_502 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_pp1_stg0_fsm_14 : STD_LOGIC;
    signal ap_sig_518 : BOOLEAN;
    signal ap_reg_ppiten_pp1_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp1_it2 : STD_LOGIC := '0';
    signal j3_reg_215 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_reg_226 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_reg_387 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_536 : BOOLEAN;
    signal empty_reg_391_0 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_reg_391_2 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_reg_391_3 : STD_LOGIC_VECTOR (127 downto 0);
    signal empty_reg_391_4 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_user_V_reg_399 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_559 : BOOLEAN;
    signal tmp_data_V_reg_404 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_dest_V_reg_410 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_cast_fu_256_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_cast_reg_419 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_574 : BOOLEAN;
    signal ap_sig_579 : BOOLEAN;
    signal empty_2_reg_429_0 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_2_reg_429_1 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_2_reg_429_2 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_2_reg_429_3 : STD_LOGIC_VECTOR (127 downto 0);
    signal empty_2_reg_429_4 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_id_V_1_reg_438 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_602 : BOOLEAN;
    signal grp_fu_266_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_6_reg_448 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_sig_cseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_613 : BOOLEAN;
    signal ap_sig_618 : BOOLEAN;
    signal tmp_dest_V_1_fu_283_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_dest_V_1_reg_459 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_463 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_V_5_fu_315_p4 : STD_LOGIC_VECTOR (127 downto 0);
    signal j_2_fu_340_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_2_reg_482 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond1_fu_346_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond1_reg_487 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_1_fu_366_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_1_reg_501 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond_fu_372_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_506 : STD_LOGIC_VECTOR (0 downto 0);
    signal j3_phi_fu_219_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_phi_fu_230_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_695 : BOOLEAN;
    signal tmp_12_cast_fu_295_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_cast_fu_335_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_14_cast_fu_361_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_378_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_266_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_266_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_8_cast_fu_286_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_2_fu_290_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal t_fu_301_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_V_5_trunc_fu_312_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_cast_fu_326_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_10_fu_330_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_11_cast_fu_352_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_8_fu_356_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_378_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_378_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_378_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_cseq_ST_st20_fsm_15 : STD_LOGIC;
    signal ap_sig_892 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_266_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_378_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_378_p20 : STD_LOGIC_VECTOR (12 downto 0);

    component spk_packet_rx_mul_12ns_6ns_13_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component spk_packet_rx_mac_muladd_12ns_6ns_5ns_13_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component spk_packet_rx_spk_A_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (127 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (127 downto 0) );
    end component;



begin
    spk_A_V_U : component spk_packet_rx_spk_A_V
    generic map (
        DataWidth => 128,
        AddressRange => 3040,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => spk_A_V_address0,
        ce0 => spk_A_V_ce0,
        we0 => spk_A_V_we0,
        d0 => spk_A_V_d0,
        q0 => spk_A_V_q0);

    spk_B_V_U : component spk_packet_rx_spk_A_V
    generic map (
        DataWidth => 128,
        AddressRange => 3040,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => spk_B_V_address0,
        ce0 => spk_B_V_ce0,
        we0 => spk_B_V_we0,
        d0 => spk_B_V_d0,
        q0 => spk_B_V_q0);

    spk_packet_rx_mul_12ns_6ns_13_3_U0 : component spk_packet_rx_mul_12ns_6ns_13_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 12,
        din1_WIDTH => 6,
        dout_WIDTH => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_266_p0,
        din1 => grp_fu_266_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_266_p2);

    spk_packet_rx_mac_muladd_12ns_6ns_5ns_13_3_U1 : component spk_packet_rx_mac_muladd_12ns_6ns_5ns_13_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 12,
        din1_WIDTH => 6,
        din2_WIDTH => 5,
        dout_WIDTH => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_378_p0,
        din1 => grp_fu_378_p1,
        din2 => grp_fu_378_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_378_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_13) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)))) and not((ap_const_lv1_0 = exitcond1_fu_346_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and not((ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)) and (ap_const_lv1_0 = tmp_dest_V_1_reg_459))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_13) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and not((ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)) and (ap_const_lv1_0 = tmp_dest_V_1_reg_459))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in))))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and not((ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)) and (ap_const_lv1_0 = tmp_dest_V_1_reg_459))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp1_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_14) and not((((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)))) and not((ap_const_lv1_0 = exitcond_fu_372_p2)))) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and not((ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)) and not((ap_const_lv1_0 = tmp_dest_V_1_reg_459)))) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp1_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_14) and not((((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)))))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_reg_ppiten_pp1_it0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and not((ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)) and not((ap_const_lv1_0 = tmp_dest_V_1_reg_459)))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp1_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp1_it2 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in))))) then 
                    ap_reg_ppiten_pp1_it2 <= ap_reg_ppiten_pp1_it1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and not((ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)) and not((ap_const_lv1_0 = tmp_dest_V_1_reg_459)))) then 
                    ap_reg_ppiten_pp1_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    post_in_V_data_V_0_has_vld_data_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                post_in_V_data_V_0_has_vld_data_reg <= ap_const_logic_0;
            else
                post_in_V_data_V_0_has_vld_data_reg <= post_in_V_data_V_0_has_vld_data_reg_i;
            end if;
        end if;
    end process;


    post_in_V_data_V_0_in_rdy_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                post_in_V_data_V_0_in_rdy <= ap_const_logic_0;
            else
                post_in_V_data_V_0_in_rdy <= (post_in_V_data_V_0_ack_out or not(post_in_V_data_V_0_has_vld_data_reg_i));
            end if;
        end if;
    end process;


    post_in_V_dest_V_0_has_vld_data_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                post_in_V_dest_V_0_has_vld_data_reg <= ap_const_logic_0;
            else
                post_in_V_dest_V_0_has_vld_data_reg <= post_in_V_dest_V_0_has_vld_data_reg_i;
            end if;
        end if;
    end process;


    post_in_V_dest_V_0_in_rdy_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                post_in_V_dest_V_0_in_rdy <= ap_const_logic_0;
            else
                post_in_V_dest_V_0_in_rdy <= (post_in_V_dest_V_0_ack_out or not(post_in_V_dest_V_0_has_vld_data_reg_i));
            end if;
        end if;
    end process;


    post_in_V_id_V_0_has_vld_data_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                post_in_V_id_V_0_has_vld_data_reg <= ap_const_logic_0;
            else
                post_in_V_id_V_0_has_vld_data_reg <= post_in_V_id_V_0_has_vld_data_reg_i;
            end if;
        end if;
    end process;


    post_in_V_id_V_0_in_rdy_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                post_in_V_id_V_0_in_rdy <= ap_const_logic_0;
            else
                post_in_V_id_V_0_in_rdy <= (post_in_V_id_V_0_ack_out or not(post_in_V_id_V_0_has_vld_data_reg_i));
            end if;
        end if;
    end process;


    post_in_V_last_0_has_vld_data_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                post_in_V_last_0_has_vld_data_reg <= ap_const_logic_0;
            else
                post_in_V_last_0_has_vld_data_reg <= post_in_V_last_0_has_vld_data_reg_i;
            end if;
        end if;
    end process;


    post_in_V_last_0_in_rdy_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                post_in_V_last_0_in_rdy <= ap_const_logic_0;
            else
                post_in_V_last_0_in_rdy <= (post_in_V_last_0_ack_out or not(post_in_V_last_0_has_vld_data_reg_i));
            end if;
        end if;
    end process;


    post_in_V_user_V_0_has_vld_data_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                post_in_V_user_V_0_has_vld_data_reg <= ap_const_logic_0;
            else
                post_in_V_user_V_0_has_vld_data_reg <= post_in_V_user_V_0_has_vld_data_reg_i;
            end if;
        end if;
    end process;


    post_in_V_user_V_0_in_rdy_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                post_in_V_user_V_0_in_rdy <= ap_const_logic_0;
            else
                post_in_V_user_V_0_in_rdy <= (post_in_V_user_V_0_ack_out or not(post_in_V_user_V_0_has_vld_data_reg_i));
            end if;
        end if;
    end process;


    pre_in_V_data_V_0_has_vld_data_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                pre_in_V_data_V_0_has_vld_data_reg <= ap_const_logic_0;
            else
                pre_in_V_data_V_0_has_vld_data_reg <= pre_in_V_data_V_0_has_vld_data_reg_i;
            end if;
        end if;
    end process;


    pre_in_V_data_V_0_in_rdy_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                pre_in_V_data_V_0_in_rdy <= ap_const_logic_0;
            else
                pre_in_V_data_V_0_in_rdy <= (pre_in_V_data_V_0_ack_out or not(pre_in_V_data_V_0_has_vld_data_reg_i));
            end if;
        end if;
    end process;


    pre_in_V_dest_V_0_has_vld_data_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                pre_in_V_dest_V_0_has_vld_data_reg <= ap_const_logic_0;
            else
                pre_in_V_dest_V_0_has_vld_data_reg <= pre_in_V_dest_V_0_has_vld_data_reg_i;
            end if;
        end if;
    end process;


    pre_in_V_dest_V_0_in_rdy_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                pre_in_V_dest_V_0_in_rdy <= ap_const_logic_0;
            else
                pre_in_V_dest_V_0_in_rdy <= (pre_in_V_dest_V_0_ack_out or not(pre_in_V_dest_V_0_has_vld_data_reg_i));
            end if;
        end if;
    end process;


    pre_in_V_id_V_0_has_vld_data_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                pre_in_V_id_V_0_has_vld_data_reg <= ap_const_logic_0;
            else
                pre_in_V_id_V_0_has_vld_data_reg <= pre_in_V_id_V_0_has_vld_data_reg_i;
            end if;
        end if;
    end process;


    pre_in_V_id_V_0_in_rdy_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                pre_in_V_id_V_0_in_rdy <= ap_const_logic_0;
            else
                pre_in_V_id_V_0_in_rdy <= (pre_in_V_id_V_0_ack_out or not(pre_in_V_id_V_0_has_vld_data_reg_i));
            end if;
        end if;
    end process;


    pre_in_V_last_0_has_vld_data_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                pre_in_V_last_0_has_vld_data_reg <= ap_const_logic_0;
            else
                pre_in_V_last_0_has_vld_data_reg <= pre_in_V_last_0_has_vld_data_reg_i;
            end if;
        end if;
    end process;


    pre_in_V_last_0_in_rdy_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                pre_in_V_last_0_in_rdy <= ap_const_logic_0;
            else
                pre_in_V_last_0_in_rdy <= (pre_in_V_last_0_ack_out or not(pre_in_V_last_0_has_vld_data_reg_i));
            end if;
        end if;
    end process;


    pre_in_V_user_V_0_has_vld_data_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                pre_in_V_user_V_0_has_vld_data_reg <= ap_const_logic_0;
            else
                pre_in_V_user_V_0_has_vld_data_reg <= pre_in_V_user_V_0_has_vld_data_reg_i;
            end if;
        end if;
    end process;


    pre_in_V_user_V_0_in_rdy_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                pre_in_V_user_V_0_in_rdy <= ap_const_logic_0;
            else
                pre_in_V_user_V_0_in_rdy <= (pre_in_V_user_V_0_ack_out or not(pre_in_V_user_V_0_has_vld_data_reg_i));
            end if;
        end if;
    end process;


    spk_out_stream_V_data_V_1_mVld_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                spk_out_stream_V_data_V_1_mVld <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = spk_out_stream_V_data_V_1_vld_in)) then 
                    spk_out_stream_V_data_V_1_mVld <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = spk_out_stream_V_data_V_1_ack_out)) then 
                    spk_out_stream_V_data_V_1_mVld <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    time_stamp_V_0_has_vld_data_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                time_stamp_V_0_has_vld_data_reg <= ap_const_logic_0;
            else
                time_stamp_V_0_has_vld_data_reg <= time_stamp_V_0_has_vld_data_reg_i;
            end if;
        end if;
    end process;


    time_stamp_V_0_in_rdy_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                time_stamp_V_0_in_rdy <= ap_const_logic_0;
            else
                time_stamp_V_0_in_rdy <= (time_stamp_V_0_ack_out or not(time_stamp_V_0_has_vld_data_reg_i));
            end if;
        end if;
    end process;


    j3_reg_215_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and not((ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)) and (ap_const_lv1_0 = tmp_dest_V_1_reg_459))) then 
                j3_reg_215 <= ap_const_lv5_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_13) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)))) and (ap_const_lv1_0 = exitcond1_reg_487))) then 
                j3_reg_215 <= j_2_reg_482;
            end if; 
        end if;
    end process;

    j_reg_226_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and not((ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)) and not((ap_const_lv1_0 = tmp_dest_V_1_reg_459)))) then 
                j_reg_226 <= ap_const_lv5_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_14) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)))) and (ap_const_lv1_0 = exitcond_reg_506))) then 
                j_reg_226 <= j_1_reg_501;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = grp_nbreadreq_fu_114_p7)) and not(ap_sig_579))) then
                empty_2_reg_429_0 <= post_in_V_user_V_0_data_out;
                empty_2_reg_429_1 <= (0=>post_in_V_last_0_data_out, others=>'-');
                empty_2_reg_429_2 <= post_in_V_id_V_0_data_out;
                empty_2_reg_429_3 <= post_in_V_data_V_0_data_out;
                empty_2_reg_429_4 <= post_in_V_dest_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((grp_nbreadreq_fu_84_p7 = ap_const_lv1_0)) and not(ap_sig_536))) then
                empty_reg_391_0 <= pre_in_V_user_V_0_data_out;
                empty_reg_391_2 <= pre_in_V_id_V_0_data_out;
                empty_reg_391_3 <= pre_in_V_data_V_0_data_out;
                empty_reg_391_4 <= pre_in_V_dest_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_13) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)))))) then
                exitcond1_reg_487 <= exitcond1_fu_346_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_14) and not((((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)))))) then
                exitcond_reg_506 <= exitcond_fu_372_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_14) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)))))) then
                j_1_reg_501 <= j_1_fu_366_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_13) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)))))) then
                j_2_reg_482 <= j_2_fu_340_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_const_logic_1)) then
                post_in_V_data_V_0_areset_d <= ap_rst_n_inv;
                post_in_V_dest_V_0_areset_d <= ap_rst_n_inv;
                post_in_V_id_V_0_areset_d <= ap_rst_n_inv;
                post_in_V_last_0_areset_d <= ap_rst_n_inv;
                post_in_V_user_V_0_areset_d <= ap_rst_n_inv;
                pre_in_V_data_V_0_areset_d <= ap_rst_n_inv;
                pre_in_V_dest_V_0_areset_d <= ap_rst_n_inv;
                pre_in_V_id_V_0_areset_d <= ap_rst_n_inv;
                pre_in_V_last_0_areset_d <= ap_rst_n_inv;
                pre_in_V_user_V_0_areset_d <= ap_rst_n_inv;
                spk_out_stream_V_data_V_1_areset_d <= ap_rst_n_inv;
                time_stamp_V_0_areset_d <= ap_rst_n_inv;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = post_in_V_data_V_0_vld_in) and (ap_const_logic_1 = post_in_V_data_V_0_in_rdy))) then
                post_in_V_data_V_0_data_reg <= post_in_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = post_in_V_dest_V_0_vld_in) and (ap_const_logic_1 = post_in_V_dest_V_0_in_rdy))) then
                post_in_V_dest_V_0_data_reg <= post_in_TDEST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = post_in_V_id_V_0_vld_in) and (ap_const_logic_1 = post_in_V_id_V_0_in_rdy))) then
                post_in_V_id_V_0_data_reg <= post_in_TID;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = post_in_V_last_0_vld_in) and (ap_const_logic_1 = post_in_V_last_0_in_rdy))) then
                post_in_V_last_0_data_reg <= post_in_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = post_in_V_user_V_0_vld_in) and (ap_const_logic_1 = post_in_V_user_V_0_in_rdy))) then
                post_in_V_user_V_0_data_reg <= post_in_TUSER;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = pre_in_V_data_V_0_vld_in) and (ap_const_logic_1 = pre_in_V_data_V_0_in_rdy))) then
                pre_in_V_data_V_0_data_reg <= pre_in_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = pre_in_V_dest_V_0_vld_in) and (ap_const_logic_1 = pre_in_V_dest_V_0_in_rdy))) then
                pre_in_V_dest_V_0_data_reg <= pre_in_TDEST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = pre_in_V_id_V_0_vld_in) and (ap_const_logic_1 = pre_in_V_id_V_0_in_rdy))) then
                pre_in_V_id_V_0_data_reg <= pre_in_TID;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = pre_in_V_user_V_0_vld_in) and (ap_const_logic_1 = pre_in_V_user_V_0_in_rdy))) then
                pre_in_V_user_V_0_data_reg <= pre_in_TUSER;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = spk_out_stream_V_data_V_1_vld_in) and (ap_const_logic_1 = spk_out_stream_V_data_V_1_sRdy))) then
                spk_out_stream_V_data_V_1_data_reg <= spk_out_stream_V_data_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = time_stamp_V_0_vld_in) and (ap_const_logic_1 = time_stamp_V_0_in_rdy))) then
                time_stamp_V_0_data_reg <= time_stamp_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not((ap_const_lv1_0 = empty_2_reg_429_1)) and not(ap_sig_618))) then
                tmp_3_reg_463 <= time_stamp_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then
                tmp_5_cast_reg_419 <= tmp_5_cast_fu_256_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then
                tmp_6_reg_448 <= grp_fu_266_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then
                tmp_data_V_reg_404 <= empty_reg_391_3;
                tmp_dest_V_reg_410 <= empty_reg_391_4;
                tmp_user_V_reg_399 <= empty_reg_391_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not(ap_sig_618))) then
                tmp_dest_V_1_reg_459 <= empty_2_reg_429_4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then
                tmp_id_V_1_reg_438 <= empty_2_reg_429_2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(ap_sig_536))) then
                tmp_reg_387 <= grp_nbreadreq_fu_84_p7;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, spk_out_stream_V_data_V_1_ack_in, grp_nbreadreq_fu_84_p7, grp_nbreadreq_fu_114_p7, tmp_s_fu_306_p2, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_reg_ppiten_pp1_it1, ap_reg_ppiten_pp1_it2, ap_sig_536, ap_sig_579, empty_2_reg_429_1, ap_sig_618, tmp_dest_V_1_reg_459)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (((grp_nbreadreq_fu_84_p7 = ap_const_lv1_0) and not(ap_sig_536))) then
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                elsif ((not((grp_nbreadreq_fu_84_p7 = ap_const_lv1_0)) and not(ap_sig_536))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when ap_ST_st7_fsm_6 => 
                if (((ap_const_lv1_0 = grp_nbreadreq_fu_114_p7) and not(ap_sig_579))) then
                    ap_NS_fsm <= ap_ST_st20_fsm_15;
                elsif ((not((ap_const_lv1_0 = grp_nbreadreq_fu_114_p7)) and not(ap_sig_579))) then
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                else
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                end if;
            when ap_ST_st8_fsm_7 => 
                ap_NS_fsm <= ap_ST_st9_fsm_8;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st11_fsm_10 => 
                if (((ap_const_lv1_0 = empty_2_reg_429_1) and not(ap_sig_618))) then
                    ap_NS_fsm <= ap_ST_st20_fsm_15;
                elsif ((not((ap_const_lv1_0 = empty_2_reg_429_1)) and not(ap_sig_618))) then
                    ap_NS_fsm <= ap_ST_st12_fsm_11;
                else
                    ap_NS_fsm <= ap_ST_st11_fsm_10;
                end if;
            when ap_ST_st12_fsm_11 => 
                if (((ap_const_lv1_0 = tmp_s_fu_306_p2) and not((not((ap_const_lv1_0 = tmp_s_fu_306_p2)) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in))))) then
                    ap_NS_fsm <= ap_ST_st20_fsm_15;
                elsif ((not((ap_const_lv1_0 = tmp_s_fu_306_p2)) and not((not((ap_const_lv1_0 = tmp_s_fu_306_p2)) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in))))) then
                    ap_NS_fsm <= ap_ST_st13_fsm_12;
                else
                    ap_NS_fsm <= ap_ST_st12_fsm_11;
                end if;
            when ap_ST_st13_fsm_12 => 
                if ((not((ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)) and not((ap_const_lv1_0 = tmp_dest_V_1_reg_459)))) then
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_14;
                elsif ((not((ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)) and (ap_const_lv1_0 = tmp_dest_V_1_reg_459))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_13;
                else
                    ap_NS_fsm <= ap_ST_st13_fsm_12;
                end if;
            when ap_ST_pp0_stg0_fsm_13 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_13;
                elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) then
                    ap_NS_fsm <= ap_ST_st20_fsm_15;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_13;
                end if;
            when ap_ST_pp1_stg0_fsm_14 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it1))))) then
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_14;
                elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))) then
                    ap_NS_fsm <= ap_ST_st20_fsm_15;
                else
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_14;
                end if;
            when ap_ST_st20_fsm_15 => 
                if (not((spk_out_stream_V_data_V_1_ack_in = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st20_fsm_15;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXX";
        end case;
    end process;

    ap_done_assign_proc : process(spk_out_stream_V_data_V_1_ack_in, ap_sig_cseq_ST_st20_fsm_15)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_15) and not((spk_out_stream_V_data_V_1_ack_in = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(spk_out_stream_V_data_V_1_ack_in, ap_sig_cseq_ST_st20_fsm_15)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_15) and not((spk_out_stream_V_data_V_1_ack_in = ap_const_logic_0)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_33_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_33 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_446_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_446 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_459_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_459 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_471_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_471 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    ap_sig_483_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_483 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    ap_sig_494_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_494 <= (ap_const_lv1_1 = ap_CS_fsm(12 downto 12));
    end process;


    ap_sig_502_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_502 <= (ap_const_lv1_1 = ap_CS_fsm(13 downto 13));
    end process;


    ap_sig_518_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_518 <= (ap_const_lv1_1 = ap_CS_fsm(14 downto 14));
    end process;


    ap_sig_536_assign_proc : process(pre_in_V_user_V_0_vld_out, grp_nbreadreq_fu_84_p7)
    begin
                ap_sig_536 <= (not((grp_nbreadreq_fu_84_p7 = ap_const_lv1_0)) and (pre_in_V_user_V_0_vld_out = ap_const_logic_0));
    end process;


    ap_sig_559_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_559 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_574_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_574 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_579_assign_proc : process(post_in_V_user_V_0_vld_out, grp_nbreadreq_fu_114_p7)
    begin
                ap_sig_579 <= (not((ap_const_lv1_0 = grp_nbreadreq_fu_114_p7)) and (post_in_V_user_V_0_vld_out = ap_const_logic_0));
    end process;


    ap_sig_602_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_602 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_613_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_613 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    ap_sig_618_assign_proc : process(time_stamp_V_0_vld_out, empty_2_reg_429_1)
    begin
                ap_sig_618 <= (not((ap_const_lv1_0 = empty_2_reg_429_1)) and (time_stamp_V_0_vld_out = ap_const_logic_0));
    end process;


    ap_sig_695_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_695 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_892_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_892 <= (ap_const_lv1_1 = ap_CS_fsm(15 downto 15));
    end process;


    ap_sig_cseq_ST_pp0_stg0_fsm_13_assign_proc : process(ap_sig_502)
    begin
        if (ap_sig_502) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_13 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp1_stg0_fsm_14_assign_proc : process(ap_sig_518)
    begin
        if (ap_sig_518) then 
            ap_sig_cseq_ST_pp1_stg0_fsm_14 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg0_fsm_14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st10_fsm_9_assign_proc : process(ap_sig_613)
    begin
        if (ap_sig_613) then 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st11_fsm_10_assign_proc : process(ap_sig_471)
    begin
        if (ap_sig_471) then 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st12_fsm_11_assign_proc : process(ap_sig_483)
    begin
        if (ap_sig_483) then 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st13_fsm_12_assign_proc : process(ap_sig_494)
    begin
        if (ap_sig_494) then 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_33)
    begin
        if (ap_sig_33) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st20_fsm_15_assign_proc : process(ap_sig_892)
    begin
        if (ap_sig_892) then 
            ap_sig_cseq_ST_st20_fsm_15 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st20_fsm_15 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_446)
    begin
        if (ap_sig_446) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_559)
    begin
        if (ap_sig_559) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_574)
    begin
        if (ap_sig_574) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_695)
    begin
        if (ap_sig_695) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_459)
    begin
        if (ap_sig_459) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_602)
    begin
        if (ap_sig_602) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_fu_346_p2 <= "1" when (j3_phi_fu_219_p4 = ap_const_lv5_12) else "0";
    exitcond_fu_372_p2 <= "1" when (j_phi_fu_230_p4 = ap_const_lv5_12) else "0";
    grp_fu_266_p0 <= grp_fu_266_p00(12 - 1 downto 0);
    grp_fu_266_p00 <= std_logic_vector(resize(unsigned(empty_2_reg_429_2),13));
    grp_fu_266_p1 <= ap_const_lv13_13(6 - 1 downto 0);
    grp_fu_378_p0 <= grp_fu_378_p00(12 - 1 downto 0);
    grp_fu_378_p00 <= std_logic_vector(resize(unsigned(empty_reg_391_2),13));
    grp_fu_378_p1 <= ap_const_lv13_13(6 - 1 downto 0);
    grp_fu_378_p2 <= grp_fu_378_p20(5 - 1 downto 0);
    grp_fu_378_p20 <= std_logic_vector(resize(unsigned(tmp_user_V_reg_399),13));
    grp_nbreadreq_fu_114_p7 <= (0=>(post_in_V_user_V_0_vld_out and post_in_V_last_0_vld_out and post_in_V_id_V_0_vld_out and post_in_V_data_V_0_vld_out and post_in_V_dest_V_0_vld_out), others=>'-');
    grp_nbreadreq_fu_84_p7 <= (0=>(pre_in_V_user_V_0_vld_out and pre_in_V_last_0_vld_out and pre_in_V_id_V_0_vld_out and pre_in_V_data_V_0_vld_out and pre_in_V_dest_V_0_vld_out), others=>'-');

    j3_phi_fu_219_p4_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_13, ap_reg_ppiten_pp0_it1, j3_reg_215, j_2_reg_482, exitcond1_reg_487)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_13) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_lv1_0 = exitcond1_reg_487))) then 
            j3_phi_fu_219_p4 <= j_2_reg_482;
        else 
            j3_phi_fu_219_p4 <= j3_reg_215;
        end if; 
    end process;

    j_1_fu_366_p2 <= std_logic_vector(unsigned(j_phi_fu_230_p4) + unsigned(ap_const_lv5_1));
    j_2_fu_340_p2 <= std_logic_vector(unsigned(j3_phi_fu_219_p4) + unsigned(ap_const_lv5_1));

    j_phi_fu_230_p4_assign_proc : process(ap_sig_cseq_ST_pp1_stg0_fsm_14, ap_reg_ppiten_pp1_it1, j_reg_226, j_1_reg_501, exitcond_reg_506)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_14) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_lv1_0 = exitcond_reg_506))) then 
            j_phi_fu_230_p4 <= j_1_reg_501;
        else 
            j_phi_fu_230_p4 <= j_reg_226;
        end if; 
    end process;

    loc_V_5_trunc_fu_312_p1 <= std_logic_vector(resize(unsigned(tmp_id_V_1_reg_438),32));

    post_in_TDATA_blk_n_assign_proc : process(post_in_V_data_V_0_vld_out, ap_sig_cseq_ST_st7_fsm_6, grp_nbreadreq_fu_114_p7)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = grp_nbreadreq_fu_114_p7)))) then 
            post_in_TDATA_blk_n <= post_in_V_data_V_0_vld_out;
        else 
            post_in_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    post_in_TREADY <= post_in_V_dest_V_0_in_rdy;

    post_in_V_data_V_0_ack_out_assign_proc : process(ap_sig_cseq_ST_st7_fsm_6, grp_nbreadreq_fu_114_p7, ap_sig_579)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = grp_nbreadreq_fu_114_p7)) and not(ap_sig_579))) then 
            post_in_V_data_V_0_ack_out <= ap_const_logic_1;
        else 
            post_in_V_data_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    post_in_V_data_V_0_data_out_assign_proc : process(post_in_TDATA, post_in_V_data_V_0_data_reg, post_in_V_data_V_0_has_vld_data_reg)
    begin
        if ((ap_const_logic_1 = post_in_V_data_V_0_has_vld_data_reg)) then 
            post_in_V_data_V_0_data_out <= post_in_V_data_V_0_data_reg;
        else 
            post_in_V_data_V_0_data_out <= post_in_TDATA;
        end if; 
    end process;


    post_in_V_data_V_0_has_vld_data_reg_i_assign_proc : process(post_in_V_data_V_0_vld_in, post_in_V_data_V_0_ack_out, post_in_V_data_V_0_in_rdy, post_in_V_data_V_0_has_vld_data_reg)
    begin
        if (((ap_const_logic_1 = post_in_V_data_V_0_vld_in) and (ap_const_logic_0 = post_in_V_data_V_0_ack_out) and (ap_const_logic_1 = post_in_V_data_V_0_in_rdy))) then 
            post_in_V_data_V_0_has_vld_data_reg_i <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = post_in_V_data_V_0_ack_out) and (ap_const_logic_1 = post_in_V_data_V_0_has_vld_data_reg) and ((ap_const_logic_0 = post_in_V_data_V_0_vld_in) or (ap_const_logic_0 = post_in_V_data_V_0_in_rdy)))) then 
            post_in_V_data_V_0_has_vld_data_reg_i <= ap_const_logic_0;
        else 
            post_in_V_data_V_0_has_vld_data_reg_i <= post_in_V_data_V_0_has_vld_data_reg;
        end if; 
    end process;

    post_in_V_data_V_0_vld_in <= post_in_TVALID;
    post_in_V_data_V_0_vld_out <= ((post_in_TVALID or post_in_V_data_V_0_has_vld_data_reg) and not(post_in_V_data_V_0_areset_d));

    post_in_V_dest_V_0_ack_out_assign_proc : process(ap_sig_cseq_ST_st7_fsm_6, grp_nbreadreq_fu_114_p7, ap_sig_579)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = grp_nbreadreq_fu_114_p7)) and not(ap_sig_579))) then 
            post_in_V_dest_V_0_ack_out <= ap_const_logic_1;
        else 
            post_in_V_dest_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    post_in_V_dest_V_0_data_out_assign_proc : process(post_in_TDEST, post_in_V_dest_V_0_data_reg, post_in_V_dest_V_0_has_vld_data_reg)
    begin
        if ((ap_const_logic_1 = post_in_V_dest_V_0_has_vld_data_reg)) then 
            post_in_V_dest_V_0_data_out <= post_in_V_dest_V_0_data_reg;
        else 
            post_in_V_dest_V_0_data_out <= post_in_TDEST;
        end if; 
    end process;


    post_in_V_dest_V_0_has_vld_data_reg_i_assign_proc : process(post_in_V_dest_V_0_vld_in, post_in_V_dest_V_0_ack_out, post_in_V_dest_V_0_in_rdy, post_in_V_dest_V_0_has_vld_data_reg)
    begin
        if (((ap_const_logic_1 = post_in_V_dest_V_0_vld_in) and (ap_const_logic_0 = post_in_V_dest_V_0_ack_out) and (ap_const_logic_1 = post_in_V_dest_V_0_in_rdy))) then 
            post_in_V_dest_V_0_has_vld_data_reg_i <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = post_in_V_dest_V_0_ack_out) and (ap_const_logic_1 = post_in_V_dest_V_0_has_vld_data_reg) and ((ap_const_logic_0 = post_in_V_dest_V_0_vld_in) or (ap_const_logic_0 = post_in_V_dest_V_0_in_rdy)))) then 
            post_in_V_dest_V_0_has_vld_data_reg_i <= ap_const_logic_0;
        else 
            post_in_V_dest_V_0_has_vld_data_reg_i <= post_in_V_dest_V_0_has_vld_data_reg;
        end if; 
    end process;

    post_in_V_dest_V_0_vld_in <= post_in_TVALID;
    post_in_V_dest_V_0_vld_out <= ((post_in_TVALID or post_in_V_dest_V_0_has_vld_data_reg) and not(post_in_V_dest_V_0_areset_d));

    post_in_V_id_V_0_ack_out_assign_proc : process(ap_sig_cseq_ST_st7_fsm_6, grp_nbreadreq_fu_114_p7, ap_sig_579)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = grp_nbreadreq_fu_114_p7)) and not(ap_sig_579))) then 
            post_in_V_id_V_0_ack_out <= ap_const_logic_1;
        else 
            post_in_V_id_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    post_in_V_id_V_0_data_out_assign_proc : process(post_in_TID, post_in_V_id_V_0_data_reg, post_in_V_id_V_0_has_vld_data_reg)
    begin
        if ((ap_const_logic_1 = post_in_V_id_V_0_has_vld_data_reg)) then 
            post_in_V_id_V_0_data_out <= post_in_V_id_V_0_data_reg;
        else 
            post_in_V_id_V_0_data_out <= post_in_TID;
        end if; 
    end process;


    post_in_V_id_V_0_has_vld_data_reg_i_assign_proc : process(post_in_V_id_V_0_vld_in, post_in_V_id_V_0_ack_out, post_in_V_id_V_0_in_rdy, post_in_V_id_V_0_has_vld_data_reg)
    begin
        if (((ap_const_logic_1 = post_in_V_id_V_0_vld_in) and (ap_const_logic_0 = post_in_V_id_V_0_ack_out) and (ap_const_logic_1 = post_in_V_id_V_0_in_rdy))) then 
            post_in_V_id_V_0_has_vld_data_reg_i <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = post_in_V_id_V_0_ack_out) and (ap_const_logic_1 = post_in_V_id_V_0_has_vld_data_reg) and ((ap_const_logic_0 = post_in_V_id_V_0_vld_in) or (ap_const_logic_0 = post_in_V_id_V_0_in_rdy)))) then 
            post_in_V_id_V_0_has_vld_data_reg_i <= ap_const_logic_0;
        else 
            post_in_V_id_V_0_has_vld_data_reg_i <= post_in_V_id_V_0_has_vld_data_reg;
        end if; 
    end process;

    post_in_V_id_V_0_vld_in <= post_in_TVALID;
    post_in_V_id_V_0_vld_out <= ((post_in_TVALID or post_in_V_id_V_0_has_vld_data_reg) and not(post_in_V_id_V_0_areset_d));

    post_in_V_last_0_ack_out_assign_proc : process(ap_sig_cseq_ST_st7_fsm_6, grp_nbreadreq_fu_114_p7, ap_sig_579)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = grp_nbreadreq_fu_114_p7)) and not(ap_sig_579))) then 
            post_in_V_last_0_ack_out <= ap_const_logic_1;
        else 
            post_in_V_last_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    post_in_V_last_0_data_out_assign_proc : process(post_in_TLAST, post_in_V_last_0_data_reg, post_in_V_last_0_has_vld_data_reg)
    begin
        if ((ap_const_logic_1 = post_in_V_last_0_has_vld_data_reg)) then 
            post_in_V_last_0_data_out <= post_in_V_last_0_data_reg;
        else 
            post_in_V_last_0_data_out <= post_in_TLAST;
        end if; 
    end process;


    post_in_V_last_0_has_vld_data_reg_i_assign_proc : process(post_in_V_last_0_vld_in, post_in_V_last_0_ack_out, post_in_V_last_0_in_rdy, post_in_V_last_0_has_vld_data_reg)
    begin
        if (((ap_const_logic_1 = post_in_V_last_0_vld_in) and (ap_const_logic_0 = post_in_V_last_0_ack_out) and (ap_const_logic_1 = post_in_V_last_0_in_rdy))) then 
            post_in_V_last_0_has_vld_data_reg_i <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = post_in_V_last_0_ack_out) and (ap_const_logic_1 = post_in_V_last_0_has_vld_data_reg) and ((ap_const_logic_0 = post_in_V_last_0_vld_in) or (ap_const_logic_0 = post_in_V_last_0_in_rdy)))) then 
            post_in_V_last_0_has_vld_data_reg_i <= ap_const_logic_0;
        else 
            post_in_V_last_0_has_vld_data_reg_i <= post_in_V_last_0_has_vld_data_reg;
        end if; 
    end process;

    post_in_V_last_0_vld_in <= post_in_TVALID;
    post_in_V_last_0_vld_out <= ((post_in_TVALID or post_in_V_last_0_has_vld_data_reg) and not(post_in_V_last_0_areset_d));

    post_in_V_user_V_0_ack_out_assign_proc : process(ap_sig_cseq_ST_st7_fsm_6, grp_nbreadreq_fu_114_p7, ap_sig_579)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = grp_nbreadreq_fu_114_p7)) and not(ap_sig_579))) then 
            post_in_V_user_V_0_ack_out <= ap_const_logic_1;
        else 
            post_in_V_user_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    post_in_V_user_V_0_data_out_assign_proc : process(post_in_TUSER, post_in_V_user_V_0_data_reg, post_in_V_user_V_0_has_vld_data_reg)
    begin
        if ((ap_const_logic_1 = post_in_V_user_V_0_has_vld_data_reg)) then 
            post_in_V_user_V_0_data_out <= post_in_V_user_V_0_data_reg;
        else 
            post_in_V_user_V_0_data_out <= post_in_TUSER;
        end if; 
    end process;


    post_in_V_user_V_0_has_vld_data_reg_i_assign_proc : process(post_in_V_user_V_0_vld_in, post_in_V_user_V_0_ack_out, post_in_V_user_V_0_in_rdy, post_in_V_user_V_0_has_vld_data_reg)
    begin
        if (((ap_const_logic_1 = post_in_V_user_V_0_vld_in) and (ap_const_logic_0 = post_in_V_user_V_0_ack_out) and (ap_const_logic_1 = post_in_V_user_V_0_in_rdy))) then 
            post_in_V_user_V_0_has_vld_data_reg_i <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = post_in_V_user_V_0_ack_out) and (ap_const_logic_1 = post_in_V_user_V_0_has_vld_data_reg) and ((ap_const_logic_0 = post_in_V_user_V_0_vld_in) or (ap_const_logic_0 = post_in_V_user_V_0_in_rdy)))) then 
            post_in_V_user_V_0_has_vld_data_reg_i <= ap_const_logic_0;
        else 
            post_in_V_user_V_0_has_vld_data_reg_i <= post_in_V_user_V_0_has_vld_data_reg;
        end if; 
    end process;

    post_in_V_user_V_0_vld_in <= post_in_TVALID;
    post_in_V_user_V_0_vld_out <= ((post_in_TVALID or post_in_V_user_V_0_has_vld_data_reg) and not(post_in_V_user_V_0_areset_d));

    pre_in_TDATA_blk_n_assign_proc : process(pre_in_V_data_V_0_vld_out, ap_sig_cseq_ST_st2_fsm_1, grp_nbreadreq_fu_84_p7)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((grp_nbreadreq_fu_84_p7 = ap_const_lv1_0)))) then 
            pre_in_TDATA_blk_n <= pre_in_V_data_V_0_vld_out;
        else 
            pre_in_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    pre_in_TREADY <= pre_in_V_dest_V_0_in_rdy;

    pre_in_V_data_V_0_ack_out_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, grp_nbreadreq_fu_84_p7, ap_sig_536)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((grp_nbreadreq_fu_84_p7 = ap_const_lv1_0)) and not(ap_sig_536))) then 
            pre_in_V_data_V_0_ack_out <= ap_const_logic_1;
        else 
            pre_in_V_data_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    pre_in_V_data_V_0_data_out_assign_proc : process(pre_in_TDATA, pre_in_V_data_V_0_data_reg, pre_in_V_data_V_0_has_vld_data_reg)
    begin
        if ((ap_const_logic_1 = pre_in_V_data_V_0_has_vld_data_reg)) then 
            pre_in_V_data_V_0_data_out <= pre_in_V_data_V_0_data_reg;
        else 
            pre_in_V_data_V_0_data_out <= pre_in_TDATA;
        end if; 
    end process;


    pre_in_V_data_V_0_has_vld_data_reg_i_assign_proc : process(pre_in_V_data_V_0_vld_in, pre_in_V_data_V_0_ack_out, pre_in_V_data_V_0_in_rdy, pre_in_V_data_V_0_has_vld_data_reg)
    begin
        if (((ap_const_logic_1 = pre_in_V_data_V_0_vld_in) and (ap_const_logic_0 = pre_in_V_data_V_0_ack_out) and (ap_const_logic_1 = pre_in_V_data_V_0_in_rdy))) then 
            pre_in_V_data_V_0_has_vld_data_reg_i <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = pre_in_V_data_V_0_ack_out) and (ap_const_logic_1 = pre_in_V_data_V_0_has_vld_data_reg) and ((ap_const_logic_0 = pre_in_V_data_V_0_vld_in) or (ap_const_logic_0 = pre_in_V_data_V_0_in_rdy)))) then 
            pre_in_V_data_V_0_has_vld_data_reg_i <= ap_const_logic_0;
        else 
            pre_in_V_data_V_0_has_vld_data_reg_i <= pre_in_V_data_V_0_has_vld_data_reg;
        end if; 
    end process;

    pre_in_V_data_V_0_vld_in <= pre_in_TVALID;
    pre_in_V_data_V_0_vld_out <= ((pre_in_TVALID or pre_in_V_data_V_0_has_vld_data_reg) and not(pre_in_V_data_V_0_areset_d));

    pre_in_V_dest_V_0_ack_out_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, grp_nbreadreq_fu_84_p7, ap_sig_536)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((grp_nbreadreq_fu_84_p7 = ap_const_lv1_0)) and not(ap_sig_536))) then 
            pre_in_V_dest_V_0_ack_out <= ap_const_logic_1;
        else 
            pre_in_V_dest_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    pre_in_V_dest_V_0_data_out_assign_proc : process(pre_in_TDEST, pre_in_V_dest_V_0_data_reg, pre_in_V_dest_V_0_has_vld_data_reg)
    begin
        if ((ap_const_logic_1 = pre_in_V_dest_V_0_has_vld_data_reg)) then 
            pre_in_V_dest_V_0_data_out <= pre_in_V_dest_V_0_data_reg;
        else 
            pre_in_V_dest_V_0_data_out <= pre_in_TDEST;
        end if; 
    end process;


    pre_in_V_dest_V_0_has_vld_data_reg_i_assign_proc : process(pre_in_V_dest_V_0_vld_in, pre_in_V_dest_V_0_ack_out, pre_in_V_dest_V_0_in_rdy, pre_in_V_dest_V_0_has_vld_data_reg)
    begin
        if (((ap_const_logic_1 = pre_in_V_dest_V_0_vld_in) and (ap_const_logic_0 = pre_in_V_dest_V_0_ack_out) and (ap_const_logic_1 = pre_in_V_dest_V_0_in_rdy))) then 
            pre_in_V_dest_V_0_has_vld_data_reg_i <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = pre_in_V_dest_V_0_ack_out) and (ap_const_logic_1 = pre_in_V_dest_V_0_has_vld_data_reg) and ((ap_const_logic_0 = pre_in_V_dest_V_0_vld_in) or (ap_const_logic_0 = pre_in_V_dest_V_0_in_rdy)))) then 
            pre_in_V_dest_V_0_has_vld_data_reg_i <= ap_const_logic_0;
        else 
            pre_in_V_dest_V_0_has_vld_data_reg_i <= pre_in_V_dest_V_0_has_vld_data_reg;
        end if; 
    end process;

    pre_in_V_dest_V_0_vld_in <= pre_in_TVALID;
    pre_in_V_dest_V_0_vld_out <= ((pre_in_TVALID or pre_in_V_dest_V_0_has_vld_data_reg) and not(pre_in_V_dest_V_0_areset_d));

    pre_in_V_id_V_0_ack_out_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, grp_nbreadreq_fu_84_p7, ap_sig_536)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((grp_nbreadreq_fu_84_p7 = ap_const_lv1_0)) and not(ap_sig_536))) then 
            pre_in_V_id_V_0_ack_out <= ap_const_logic_1;
        else 
            pre_in_V_id_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    pre_in_V_id_V_0_data_out_assign_proc : process(pre_in_TID, pre_in_V_id_V_0_data_reg, pre_in_V_id_V_0_has_vld_data_reg)
    begin
        if ((ap_const_logic_1 = pre_in_V_id_V_0_has_vld_data_reg)) then 
            pre_in_V_id_V_0_data_out <= pre_in_V_id_V_0_data_reg;
        else 
            pre_in_V_id_V_0_data_out <= pre_in_TID;
        end if; 
    end process;


    pre_in_V_id_V_0_has_vld_data_reg_i_assign_proc : process(pre_in_V_id_V_0_vld_in, pre_in_V_id_V_0_ack_out, pre_in_V_id_V_0_in_rdy, pre_in_V_id_V_0_has_vld_data_reg)
    begin
        if (((ap_const_logic_1 = pre_in_V_id_V_0_vld_in) and (ap_const_logic_0 = pre_in_V_id_V_0_ack_out) and (ap_const_logic_1 = pre_in_V_id_V_0_in_rdy))) then 
            pre_in_V_id_V_0_has_vld_data_reg_i <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = pre_in_V_id_V_0_ack_out) and (ap_const_logic_1 = pre_in_V_id_V_0_has_vld_data_reg) and ((ap_const_logic_0 = pre_in_V_id_V_0_vld_in) or (ap_const_logic_0 = pre_in_V_id_V_0_in_rdy)))) then 
            pre_in_V_id_V_0_has_vld_data_reg_i <= ap_const_logic_0;
        else 
            pre_in_V_id_V_0_has_vld_data_reg_i <= pre_in_V_id_V_0_has_vld_data_reg;
        end if; 
    end process;

    pre_in_V_id_V_0_vld_in <= pre_in_TVALID;
    pre_in_V_id_V_0_vld_out <= ((pre_in_TVALID or pre_in_V_id_V_0_has_vld_data_reg) and not(pre_in_V_id_V_0_areset_d));

    pre_in_V_last_0_ack_out_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, grp_nbreadreq_fu_84_p7, ap_sig_536)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((grp_nbreadreq_fu_84_p7 = ap_const_lv1_0)) and not(ap_sig_536))) then 
            pre_in_V_last_0_ack_out <= ap_const_logic_1;
        else 
            pre_in_V_last_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    pre_in_V_last_0_has_vld_data_reg_i_assign_proc : process(pre_in_V_last_0_vld_in, pre_in_V_last_0_ack_out, pre_in_V_last_0_in_rdy, pre_in_V_last_0_has_vld_data_reg)
    begin
        if (((ap_const_logic_1 = pre_in_V_last_0_vld_in) and (ap_const_logic_0 = pre_in_V_last_0_ack_out) and (ap_const_logic_1 = pre_in_V_last_0_in_rdy))) then 
            pre_in_V_last_0_has_vld_data_reg_i <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = pre_in_V_last_0_ack_out) and (ap_const_logic_1 = pre_in_V_last_0_has_vld_data_reg) and ((ap_const_logic_0 = pre_in_V_last_0_vld_in) or (ap_const_logic_0 = pre_in_V_last_0_in_rdy)))) then 
            pre_in_V_last_0_has_vld_data_reg_i <= ap_const_logic_0;
        else 
            pre_in_V_last_0_has_vld_data_reg_i <= pre_in_V_last_0_has_vld_data_reg;
        end if; 
    end process;

    pre_in_V_last_0_vld_in <= pre_in_TVALID;
    pre_in_V_last_0_vld_out <= ((pre_in_TVALID or pre_in_V_last_0_has_vld_data_reg) and not(pre_in_V_last_0_areset_d));

    pre_in_V_user_V_0_ack_out_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, grp_nbreadreq_fu_84_p7, ap_sig_536)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((grp_nbreadreq_fu_84_p7 = ap_const_lv1_0)) and not(ap_sig_536))) then 
            pre_in_V_user_V_0_ack_out <= ap_const_logic_1;
        else 
            pre_in_V_user_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    pre_in_V_user_V_0_data_out_assign_proc : process(pre_in_TUSER, pre_in_V_user_V_0_data_reg, pre_in_V_user_V_0_has_vld_data_reg)
    begin
        if ((ap_const_logic_1 = pre_in_V_user_V_0_has_vld_data_reg)) then 
            pre_in_V_user_V_0_data_out <= pre_in_V_user_V_0_data_reg;
        else 
            pre_in_V_user_V_0_data_out <= pre_in_TUSER;
        end if; 
    end process;


    pre_in_V_user_V_0_has_vld_data_reg_i_assign_proc : process(pre_in_V_user_V_0_vld_in, pre_in_V_user_V_0_ack_out, pre_in_V_user_V_0_in_rdy, pre_in_V_user_V_0_has_vld_data_reg)
    begin
        if (((ap_const_logic_1 = pre_in_V_user_V_0_vld_in) and (ap_const_logic_0 = pre_in_V_user_V_0_ack_out) and (ap_const_logic_1 = pre_in_V_user_V_0_in_rdy))) then 
            pre_in_V_user_V_0_has_vld_data_reg_i <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = pre_in_V_user_V_0_ack_out) and (ap_const_logic_1 = pre_in_V_user_V_0_has_vld_data_reg) and ((ap_const_logic_0 = pre_in_V_user_V_0_vld_in) or (ap_const_logic_0 = pre_in_V_user_V_0_in_rdy)))) then 
            pre_in_V_user_V_0_has_vld_data_reg_i <= ap_const_logic_0;
        else 
            pre_in_V_user_V_0_has_vld_data_reg_i <= pre_in_V_user_V_0_has_vld_data_reg;
        end if; 
    end process;

    pre_in_V_user_V_0_vld_in <= pre_in_TVALID;
    pre_in_V_user_V_0_vld_out <= ((pre_in_TVALID or pre_in_V_user_V_0_has_vld_data_reg) and not(pre_in_V_user_V_0_areset_d));

    spk_A_V_address0_assign_proc : process(ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_pp0_stg0_fsm_13, ap_reg_ppiten_pp0_it0, tmp_5_cast_reg_419, ap_sig_cseq_ST_st6_fsm_5, tmp_12_cast_fu_295_p1, tmp_16_cast_fu_335_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
            spk_A_V_address0 <= tmp_12_cast_fu_295_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            spk_A_V_address0 <= tmp_5_cast_reg_419(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_13) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0))) then 
            spk_A_V_address0 <= tmp_16_cast_fu_335_p1(12 - 1 downto 0);
        else 
            spk_A_V_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    spk_A_V_ce0_assign_proc : process(spk_out_stream_V_data_V_1_ack_in, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_pp0_stg0_fsm_13, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it2, ap_sig_618, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not(ap_sig_618)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_13) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in))))) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5))) then 
            spk_A_V_ce0 <= ap_const_logic_1;
        else 
            spk_A_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    spk_A_V_d0_assign_proc : process(ap_sig_cseq_ST_st11_fsm_10, tmp_data_V_reg_404, empty_2_reg_429_3, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
            spk_A_V_d0 <= empty_2_reg_429_3;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            spk_A_V_d0 <= tmp_data_V_reg_404;
        else 
            spk_A_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    spk_A_V_we0_assign_proc : process(ap_sig_cseq_ST_st11_fsm_10, tmp_reg_387, tmp_dest_V_reg_410, ap_sig_618, tmp_dest_V_1_fu_283_p1, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not((ap_const_lv1_0 = tmp_reg_387)) and (ap_const_lv1_0 = tmp_dest_V_reg_410)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not(ap_sig_618) and (ap_const_lv1_0 = tmp_dest_V_1_fu_283_p1)))) then 
            spk_A_V_we0 <= ap_const_logic_1;
        else 
            spk_A_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    spk_B_V_address0_assign_proc : process(ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_pp1_stg0_fsm_14, ap_reg_ppiten_pp1_it0, tmp_5_cast_reg_419, ap_sig_cseq_ST_st6_fsm_5, tmp_12_cast_fu_295_p1, tmp_14_cast_fu_361_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
            spk_B_V_address0 <= tmp_12_cast_fu_295_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            spk_B_V_address0 <= tmp_5_cast_reg_419(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_14) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0))) then 
            spk_B_V_address0 <= tmp_14_cast_fu_361_p1(12 - 1 downto 0);
        else 
            spk_B_V_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    spk_B_V_ce0_assign_proc : process(spk_out_stream_V_data_V_1_ack_in, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_pp1_stg0_fsm_14, ap_reg_ppiten_pp1_it1, ap_reg_ppiten_pp1_it0, ap_reg_ppiten_pp1_it2, ap_sig_618, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not(ap_sig_618)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_14) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in))))) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5))) then 
            spk_B_V_ce0 <= ap_const_logic_1;
        else 
            spk_B_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    spk_B_V_d0_assign_proc : process(ap_sig_cseq_ST_st11_fsm_10, tmp_data_V_reg_404, empty_2_reg_429_3, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
            spk_B_V_d0 <= empty_2_reg_429_3;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            spk_B_V_d0 <= tmp_data_V_reg_404;
        else 
            spk_B_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    spk_B_V_we0_assign_proc : process(ap_sig_cseq_ST_st11_fsm_10, tmp_reg_387, tmp_dest_V_reg_410, ap_sig_618, tmp_dest_V_1_fu_283_p1, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not((ap_const_lv1_0 = tmp_reg_387)) and not((ap_const_lv1_0 = tmp_dest_V_reg_410))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not(ap_sig_618) and not((ap_const_lv1_0 = tmp_dest_V_1_fu_283_p1))))) then 
            spk_B_V_we0 <= ap_const_logic_1;
        else 
            spk_B_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    spk_out_stream_V_data_V_1_ack_in_assign_proc : process(spk_out_stream_V_data_V_TREADY, spk_out_stream_V_data_V_1_mVld, spk_out_stream_V_data_V_1_areset_d)
    begin
        spk_out_stream_V_data_V_1_ack_in <= (not(spk_out_stream_V_data_V_1_areset_d) and (spk_out_stream_V_data_V_TREADY or not(spk_out_stream_V_data_V_1_mVld)));
    end process;

    spk_out_stream_V_data_V_1_ack_out <= spk_out_stream_V_data_V_TREADY;

    spk_out_stream_V_data_V_1_data_in_assign_proc : process(spk_A_V_q0, spk_B_V_q0, ap_sig_cseq_ST_st12_fsm_11, tmp_s_fu_306_p2, ap_sig_cseq_ST_pp0_stg0_fsm_13, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_pp1_stg0_fsm_14, ap_reg_ppiten_pp1_it1, tmp_data_V_5_fu_315_p4)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_14) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) then 
            spk_out_stream_V_data_V_1_data_in <= spk_B_V_q0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_13) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            spk_out_stream_V_data_V_1_data_in <= spk_A_V_q0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and not((ap_const_lv1_0 = tmp_s_fu_306_p2)))) then 
            spk_out_stream_V_data_V_1_data_in <= tmp_data_V_5_fu_315_p4;
        else 
            spk_out_stream_V_data_V_1_data_in <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    spk_out_stream_V_data_V_1_sRdy_assign_proc : process(spk_out_stream_V_data_V_TREADY, spk_out_stream_V_data_V_1_mVld, spk_out_stream_V_data_V_1_areset_d)
    begin
        spk_out_stream_V_data_V_1_sRdy <= (not(spk_out_stream_V_data_V_1_areset_d) and (spk_out_stream_V_data_V_TREADY or not(spk_out_stream_V_data_V_1_mVld)));
    end process;


    spk_out_stream_V_data_V_1_vld_in_assign_proc : process(spk_out_stream_V_data_V_1_ack_in, ap_sig_cseq_ST_st12_fsm_11, tmp_s_fu_306_p2, ap_sig_cseq_ST_pp0_stg0_fsm_13, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_sig_cseq_ST_pp1_stg0_fsm_14, ap_reg_ppiten_pp1_it1, ap_reg_ppiten_pp1_it2)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and not((ap_const_lv1_0 = tmp_s_fu_306_p2)) and not((not((ap_const_lv1_0 = tmp_s_fu_306_p2)) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_13) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_14) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_reg_ppiten_pp1_it2) and (ap_const_logic_0 = spk_out_stream_V_data_V_1_ack_in))))))) then 
            spk_out_stream_V_data_V_1_vld_in <= ap_const_logic_1;
        else 
            spk_out_stream_V_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    spk_out_stream_V_data_V_TDATA <= spk_out_stream_V_data_V_1_data_reg;

    spk_out_stream_V_data_V_TDATA_blk_n_assign_proc : process(spk_out_stream_V_data_V_1_sRdy, ap_sig_cseq_ST_st12_fsm_11, tmp_s_fu_306_p2, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_pp0_stg0_fsm_13, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_sig_cseq_ST_pp1_stg0_fsm_14, ap_reg_ppiten_pp1_it1, ap_reg_ppiten_pp1_it2)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and not((ap_const_lv1_0 = tmp_s_fu_306_p2))) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_13) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)) or (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_14) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)) or (ap_const_logic_1 = ap_reg_ppiten_pp1_it2))) then 
            spk_out_stream_V_data_V_TDATA_blk_n <= spk_out_stream_V_data_V_1_sRdy;
        else 
            spk_out_stream_V_data_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    spk_out_stream_V_data_V_TVALID <= spk_out_stream_V_data_V_1_mVld;
    t_fu_301_p2 <= std_logic_vector(unsigned(tmp_3_reg_463) + unsigned(ap_const_lv32_FFFFFFFF));

    time_stamp_V_0_ack_out_assign_proc : process(ap_sig_cseq_ST_st11_fsm_10, empty_2_reg_429_1, ap_sig_618)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not((ap_const_lv1_0 = empty_2_reg_429_1)) and not(ap_sig_618))) then 
            time_stamp_V_0_ack_out <= ap_const_logic_1;
        else 
            time_stamp_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    time_stamp_V_0_data_out_assign_proc : process(time_stamp_V_TDATA, time_stamp_V_0_data_reg, time_stamp_V_0_has_vld_data_reg)
    begin
        if ((ap_const_logic_1 = time_stamp_V_0_has_vld_data_reg)) then 
            time_stamp_V_0_data_out <= time_stamp_V_0_data_reg;
        else 
            time_stamp_V_0_data_out <= time_stamp_V_TDATA;
        end if; 
    end process;


    time_stamp_V_0_has_vld_data_reg_i_assign_proc : process(time_stamp_V_0_vld_in, time_stamp_V_0_ack_out, time_stamp_V_0_in_rdy, time_stamp_V_0_has_vld_data_reg)
    begin
        if (((ap_const_logic_1 = time_stamp_V_0_vld_in) and (ap_const_logic_0 = time_stamp_V_0_ack_out) and (ap_const_logic_1 = time_stamp_V_0_in_rdy))) then 
            time_stamp_V_0_has_vld_data_reg_i <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = time_stamp_V_0_ack_out) and (ap_const_logic_1 = time_stamp_V_0_has_vld_data_reg) and ((ap_const_logic_0 = time_stamp_V_0_vld_in) or (ap_const_logic_0 = time_stamp_V_0_in_rdy)))) then 
            time_stamp_V_0_has_vld_data_reg_i <= ap_const_logic_0;
        else 
            time_stamp_V_0_has_vld_data_reg_i <= time_stamp_V_0_has_vld_data_reg;
        end if; 
    end process;

    time_stamp_V_0_vld_in <= time_stamp_V_TVALID;
    time_stamp_V_0_vld_out <= ((time_stamp_V_TVALID or time_stamp_V_0_has_vld_data_reg) and not(time_stamp_V_0_areset_d));

    time_stamp_V_TDATA_blk_n_assign_proc : process(time_stamp_V_0_vld_out, ap_sig_cseq_ST_st11_fsm_10, empty_2_reg_429_1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not((ap_const_lv1_0 = empty_2_reg_429_1)))) then 
            time_stamp_V_TDATA_blk_n <= time_stamp_V_0_vld_out;
        else 
            time_stamp_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    time_stamp_V_TREADY <= time_stamp_V_0_in_rdy;
    tmp_10_fu_330_p2 <= std_logic_vector(unsigned(tmp_6_reg_448) + unsigned(tmp_13_cast_fu_326_p1));
    tmp_11_cast_fu_352_p1 <= std_logic_vector(resize(unsigned(j_phi_fu_230_p4),13));
        tmp_12_cast_fu_295_p1 <= std_logic_vector(resize(signed(tmp_2_fu_290_p2),64));

    tmp_13_cast_fu_326_p1 <= std_logic_vector(resize(unsigned(j3_phi_fu_219_p4),13));
        tmp_14_cast_fu_361_p1 <= std_logic_vector(resize(signed(tmp_8_fu_356_p2),64));

        tmp_16_cast_fu_335_p1 <= std_logic_vector(resize(signed(tmp_10_fu_330_p2),64));

    tmp_2_fu_290_p2 <= std_logic_vector(unsigned(tmp_6_reg_448) + unsigned(tmp_8_cast_fu_286_p1));
        tmp_5_cast_fu_256_p1 <= std_logic_vector(resize(signed(grp_fu_378_p3),64));

    tmp_8_cast_fu_286_p1 <= std_logic_vector(resize(unsigned(empty_2_reg_429_0),13));
    tmp_8_fu_356_p2 <= std_logic_vector(unsigned(tmp_6_reg_448) + unsigned(tmp_11_cast_fu_352_p1));
    tmp_data_V_5_fu_315_p4 <= ((ap_const_lv64_0 & t_fu_301_p2) & loc_V_5_trunc_fu_312_p1);
    tmp_dest_V_1_fu_283_p1 <= empty_2_reg_429_4;
    tmp_s_fu_306_p2 <= "1" when (signed(t_fu_301_p2) > signed(ap_const_lv32_9)) else "0";
end behav;
