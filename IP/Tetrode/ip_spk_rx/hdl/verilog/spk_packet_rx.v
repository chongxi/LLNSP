// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="spk_packet_rx,hls_ip_2016_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k325tffg900-2,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.410000,HLS_SYN_LAT=11,HLS_SYN_TPT=none,HLS_SYN_MEM=60,HLS_SYN_DSP=2,HLS_SYN_FF=1102,HLS_SYN_LUT=918}" *)

module spk_packet_rx (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        pre_in_TUSER,
        pre_in_TVALID,
        pre_in_TREADY,
        pre_in_TLAST,
        pre_in_TID,
        pre_in_TDATA,
        pre_in_TDEST,
        post_in_TUSER,
        post_in_TVALID,
        post_in_TREADY,
        post_in_TLAST,
        post_in_TID,
        post_in_TDATA,
        post_in_TDEST,
        time_stamp_V_TDATA,
        time_stamp_V_TVALID,
        time_stamp_V_TREADY,
        spk_out_stream_V_data_V_TDATA,
        spk_out_stream_V_data_V_TVALID,
        spk_out_stream_V_data_V_TREADY
);

parameter    ap_ST_st1_fsm_0 = 16'b1;
parameter    ap_ST_st2_fsm_1 = 16'b10;
parameter    ap_ST_st3_fsm_2 = 16'b100;
parameter    ap_ST_st4_fsm_3 = 16'b1000;
parameter    ap_ST_st5_fsm_4 = 16'b10000;
parameter    ap_ST_st6_fsm_5 = 16'b100000;
parameter    ap_ST_st7_fsm_6 = 16'b1000000;
parameter    ap_ST_st8_fsm_7 = 16'b10000000;
parameter    ap_ST_st9_fsm_8 = 16'b100000000;
parameter    ap_ST_st10_fsm_9 = 16'b1000000000;
parameter    ap_ST_st11_fsm_10 = 16'b10000000000;
parameter    ap_ST_st12_fsm_11 = 16'b100000000000;
parameter    ap_ST_st13_fsm_12 = 16'b1000000000000;
parameter    ap_ST_pp0_stg0_fsm_13 = 16'b10000000000000;
parameter    ap_ST_pp1_stg0_fsm_14 = 16'b100000000000000;
parameter    ap_ST_st20_fsm_15 = 16'b1000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv13_13 = 13'b10011;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv29_0 = 29'b00000000000000000000000000000;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv5_12 = 5'b10010;

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [4:0] pre_in_TUSER;
input   pre_in_TVALID;
output   pre_in_TREADY;
input   pre_in_TLAST;
input  [15:0] pre_in_TID;
input  [127:0] pre_in_TDATA;
input  [0:0] pre_in_TDEST;
input  [4:0] post_in_TUSER;
input   post_in_TVALID;
output   post_in_TREADY;
input   post_in_TLAST;
input  [15:0] post_in_TID;
input  [127:0] post_in_TDATA;
input  [0:0] post_in_TDEST;
input  [31:0] time_stamp_V_TDATA;
input   time_stamp_V_TVALID;
output   time_stamp_V_TREADY;
output  [127:0] spk_out_stream_V_data_V_TDATA;
output   spk_out_stream_V_data_V_TVALID;
input   spk_out_stream_V_data_V_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;

reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_33;
reg   [4:0] pre_in_V_user_V_0_data_out;
wire    pre_in_V_user_V_0_vld_in;
wire    pre_in_V_user_V_0_vld_out;
reg    pre_in_V_user_V_0_ack_out;
reg   [4:0] pre_in_V_user_V_0_data_reg;
reg    pre_in_V_user_V_0_areset_d;
reg    pre_in_V_user_V_0_in_rdy;
reg    pre_in_V_user_V_0_has_vld_data_reg_i;
reg    pre_in_V_user_V_0_has_vld_data_reg;
wire    pre_in_V_last_0_vld_in;
wire    pre_in_V_last_0_vld_out;
reg    pre_in_V_last_0_ack_out;
reg    pre_in_V_last_0_areset_d;
reg    pre_in_V_last_0_in_rdy;
reg    pre_in_V_last_0_has_vld_data_reg_i;
reg    pre_in_V_last_0_has_vld_data_reg;
reg   [15:0] pre_in_V_id_V_0_data_out;
wire    pre_in_V_id_V_0_vld_in;
wire    pre_in_V_id_V_0_vld_out;
reg    pre_in_V_id_V_0_ack_out;
reg   [15:0] pre_in_V_id_V_0_data_reg;
reg    pre_in_V_id_V_0_areset_d;
reg    pre_in_V_id_V_0_in_rdy;
reg    pre_in_V_id_V_0_has_vld_data_reg_i;
reg    pre_in_V_id_V_0_has_vld_data_reg;
reg   [127:0] pre_in_V_data_V_0_data_out;
wire    pre_in_V_data_V_0_vld_in;
wire    pre_in_V_data_V_0_vld_out;
reg    pre_in_V_data_V_0_ack_out;
reg   [127:0] pre_in_V_data_V_0_data_reg;
reg    pre_in_V_data_V_0_areset_d;
reg    pre_in_V_data_V_0_in_rdy;
reg    pre_in_V_data_V_0_has_vld_data_reg_i;
reg    pre_in_V_data_V_0_has_vld_data_reg;
reg   [0:0] pre_in_V_dest_V_0_data_out;
wire    pre_in_V_dest_V_0_vld_in;
wire    pre_in_V_dest_V_0_vld_out;
reg    pre_in_V_dest_V_0_ack_out;
reg   [0:0] pre_in_V_dest_V_0_data_reg;
reg    pre_in_V_dest_V_0_areset_d;
reg    pre_in_V_dest_V_0_in_rdy;
reg    pre_in_V_dest_V_0_has_vld_data_reg_i;
reg    pre_in_V_dest_V_0_has_vld_data_reg;
reg   [4:0] post_in_V_user_V_0_data_out;
wire    post_in_V_user_V_0_vld_in;
wire    post_in_V_user_V_0_vld_out;
reg    post_in_V_user_V_0_ack_out;
reg   [4:0] post_in_V_user_V_0_data_reg;
reg    post_in_V_user_V_0_areset_d;
reg    post_in_V_user_V_0_in_rdy;
reg    post_in_V_user_V_0_has_vld_data_reg_i;
reg    post_in_V_user_V_0_has_vld_data_reg;
reg    post_in_V_last_0_data_out;
wire    post_in_V_last_0_vld_in;
wire    post_in_V_last_0_vld_out;
reg    post_in_V_last_0_ack_out;
reg    post_in_V_last_0_data_reg;
reg    post_in_V_last_0_areset_d;
reg    post_in_V_last_0_in_rdy;
reg    post_in_V_last_0_has_vld_data_reg_i;
reg    post_in_V_last_0_has_vld_data_reg;
reg   [15:0] post_in_V_id_V_0_data_out;
wire    post_in_V_id_V_0_vld_in;
wire    post_in_V_id_V_0_vld_out;
reg    post_in_V_id_V_0_ack_out;
reg   [15:0] post_in_V_id_V_0_data_reg;
reg    post_in_V_id_V_0_areset_d;
reg    post_in_V_id_V_0_in_rdy;
reg    post_in_V_id_V_0_has_vld_data_reg_i;
reg    post_in_V_id_V_0_has_vld_data_reg;
reg   [127:0] post_in_V_data_V_0_data_out;
wire    post_in_V_data_V_0_vld_in;
wire    post_in_V_data_V_0_vld_out;
reg    post_in_V_data_V_0_ack_out;
reg   [127:0] post_in_V_data_V_0_data_reg;
reg    post_in_V_data_V_0_areset_d;
reg    post_in_V_data_V_0_in_rdy;
reg    post_in_V_data_V_0_has_vld_data_reg_i;
reg    post_in_V_data_V_0_has_vld_data_reg;
reg   [0:0] post_in_V_dest_V_0_data_out;
wire    post_in_V_dest_V_0_vld_in;
wire    post_in_V_dest_V_0_vld_out;
reg    post_in_V_dest_V_0_ack_out;
reg   [0:0] post_in_V_dest_V_0_data_reg;
reg    post_in_V_dest_V_0_areset_d;
reg    post_in_V_dest_V_0_in_rdy;
reg    post_in_V_dest_V_0_has_vld_data_reg_i;
reg    post_in_V_dest_V_0_has_vld_data_reg;
reg   [31:0] time_stamp_V_0_data_out;
wire    time_stamp_V_0_vld_in;
wire    time_stamp_V_0_vld_out;
reg    time_stamp_V_0_ack_out;
reg   [31:0] time_stamp_V_0_data_reg;
reg    time_stamp_V_0_areset_d;
reg    time_stamp_V_0_in_rdy;
reg    time_stamp_V_0_has_vld_data_reg_i;
reg    time_stamp_V_0_has_vld_data_reg;
reg   [127:0] spk_out_stream_V_data_V_1_data_in;
reg    spk_out_stream_V_data_V_1_vld_in;
reg    spk_out_stream_V_data_V_1_ack_in;
wire    spk_out_stream_V_data_V_1_ack_out;
reg   [127:0] spk_out_stream_V_data_V_1_data_reg;
reg    spk_out_stream_V_data_V_1_sRdy;
reg    spk_out_stream_V_data_V_1_mVld;
reg    spk_out_stream_V_data_V_1_areset_d;
reg   [11:0] spk_A_V_address0;
reg    spk_A_V_ce0;
reg    spk_A_V_we0;
reg   [127:0] spk_A_V_d0;
wire   [127:0] spk_A_V_q0;
reg   [11:0] spk_B_V_address0;
reg    spk_B_V_ce0;
reg    spk_B_V_we0;
reg   [127:0] spk_B_V_d0;
wire   [127:0] spk_B_V_q0;
reg    pre_in_TDATA_blk_n;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_446;
wire   [0:0] grp_nbreadreq_fu_96_p7;
reg    post_in_TDATA_blk_n;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_459;
wire   [0:0] grp_nbreadreq_fu_126_p7;
reg    time_stamp_V_TDATA_blk_n;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_471;
reg    spk_out_stream_V_data_V_TDATA_blk_n;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_483;
wire   [0:0] icmp_fu_346_p2;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_494;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_13;
reg    ap_sig_502;
reg    ap_reg_ppiten_pp0_it1;
reg    ap_reg_ppiten_pp0_it0;
reg    ap_reg_ppiten_pp0_it2;
reg    ap_sig_cseq_ST_pp1_stg0_fsm_14;
reg    ap_sig_518;
reg    ap_reg_ppiten_pp1_it1;
reg    ap_reg_ppiten_pp1_it0;
reg    ap_reg_ppiten_pp1_it2;
reg   [4:0] j3_reg_227;
reg   [4:0] j_reg_238;
reg   [0:0] tmp_reg_432;
reg    ap_sig_536;
reg   [4:0] empty_reg_436_0;
reg   [15:0] empty_reg_436_2;
reg   [127:0] empty_reg_436_3;
reg   [0:0] empty_reg_436_4;
reg   [4:0] tmp_user_V_reg_444;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_559;
reg   [127:0] tmp_data_V_reg_449;
reg   [0:0] tmp_dest_V_reg_455;
wire  signed [63:0] tmp_5_cast_fu_272_p1;
reg  signed [63:0] tmp_5_cast_reg_464;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_574;
reg    ap_sig_579;
reg   [4:0] empty_6_reg_474_0;
reg   [0:0] empty_6_reg_474_1;
reg   [15:0] empty_6_reg_474_2;
reg   [127:0] empty_6_reg_474_3;
reg   [0:0] empty_6_reg_474_4;
wire   [7:0] ch_V_fu_278_p1;
reg   [7:0] ch_V_reg_483;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_602;
reg   [7:0] ch_groupNo_V_reg_488;
wire   [12:0] grp_fu_296_p2;
reg   [12:0] tmp_6_reg_498;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_615;
reg    ap_sig_620;
wire   [0:0] tmp_dest_V_1_fu_313_p1;
reg   [0:0] tmp_dest_V_1_reg_509;
reg   [31:0] tmp_7_reg_513;
wire   [127:0] tmp_data_V_5_fu_358_p5;
wire   [4:0] j_2_fu_385_p2;
reg   [4:0] j_2_reg_532;
wire   [0:0] exitcond1_fu_391_p2;
reg   [0:0] exitcond1_reg_537;
wire   [4:0] j_1_fu_411_p2;
reg   [4:0] j_1_reg_551;
wire   [0:0] exitcond_fu_417_p2;
reg   [0:0] exitcond_reg_556;
reg   [4:0] j3_phi_fu_231_p4;
reg   [4:0] j_phi_fu_242_p4;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_697;
wire  signed [63:0] tmp_12_cast_fu_325_p1;
wire  signed [63:0] tmp_16_cast_fu_380_p1;
wire  signed [63:0] tmp_14_cast_fu_406_p1;
wire   [7:0] tmp_2_fu_261_p1;
wire   [12:0] grp_fu_423_p3;
wire   [5:0] grp_fu_296_p0;
wire   [7:0] grp_fu_296_p1;
wire   [12:0] tmp_8_cast_fu_316_p1;
wire   [12:0] tmp_s_fu_320_p2;
wire   [31:0] t_fu_331_p2;
wire   [28:0] tmp_8_fu_336_p4;
wire   [31:0] loc_V_10_trunc_fu_355_p1;
wire   [31:0] loc_V_8_trunc_fu_352_p1;
wire   [12:0] tmp_13_cast_fu_371_p1;
wire   [12:0] tmp_11_fu_375_p2;
wire   [12:0] tmp_11_cast_fu_397_p1;
wire   [12:0] tmp_9_fu_401_p2;
wire   [5:0] grp_fu_423_p0;
wire   [7:0] grp_fu_423_p1;
wire   [4:0] grp_fu_423_p2;
reg    ap_sig_cseq_ST_st20_fsm_15;
reg    ap_sig_917;
reg   [15:0] ap_NS_fsm;
wire   [12:0] grp_fu_296_p10;
wire   [12:0] grp_fu_423_p10;
wire   [12:0] grp_fu_423_p20;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'b1;
#0 pre_in_V_user_V_0_in_rdy = 1'b0;
#0 pre_in_V_user_V_0_has_vld_data_reg = 1'b0;
#0 pre_in_V_last_0_in_rdy = 1'b0;
#0 pre_in_V_last_0_has_vld_data_reg = 1'b0;
#0 pre_in_V_id_V_0_in_rdy = 1'b0;
#0 pre_in_V_id_V_0_has_vld_data_reg = 1'b0;
#0 pre_in_V_data_V_0_in_rdy = 1'b0;
#0 pre_in_V_data_V_0_has_vld_data_reg = 1'b0;
#0 pre_in_V_dest_V_0_in_rdy = 1'b0;
#0 pre_in_V_dest_V_0_has_vld_data_reg = 1'b0;
#0 post_in_V_user_V_0_in_rdy = 1'b0;
#0 post_in_V_user_V_0_has_vld_data_reg = 1'b0;
#0 post_in_V_last_0_in_rdy = 1'b0;
#0 post_in_V_last_0_has_vld_data_reg = 1'b0;
#0 post_in_V_id_V_0_in_rdy = 1'b0;
#0 post_in_V_id_V_0_has_vld_data_reg = 1'b0;
#0 post_in_V_data_V_0_in_rdy = 1'b0;
#0 post_in_V_data_V_0_has_vld_data_reg = 1'b0;
#0 post_in_V_dest_V_0_in_rdy = 1'b0;
#0 post_in_V_dest_V_0_has_vld_data_reg = 1'b0;
#0 time_stamp_V_0_in_rdy = 1'b0;
#0 time_stamp_V_0_has_vld_data_reg = 1'b0;
#0 spk_out_stream_V_data_V_1_mVld = 1'b0;
#0 ap_reg_ppiten_pp0_it1 = 1'b0;
#0 ap_reg_ppiten_pp0_it0 = 1'b0;
#0 ap_reg_ppiten_pp0_it2 = 1'b0;
#0 ap_reg_ppiten_pp1_it1 = 1'b0;
#0 ap_reg_ppiten_pp1_it0 = 1'b0;
#0 ap_reg_ppiten_pp1_it2 = 1'b0;
end

spk_packet_rx_spk_A_V #(
    .DataWidth( 128 ),
    .AddressRange( 3040 ),
    .AddressWidth( 12 ))
spk_A_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(spk_A_V_address0),
    .ce0(spk_A_V_ce0),
    .we0(spk_A_V_we0),
    .d0(spk_A_V_d0),
    .q0(spk_A_V_q0)
);

spk_packet_rx_spk_A_V #(
    .DataWidth( 128 ),
    .AddressRange( 3040 ),
    .AddressWidth( 12 ))
spk_B_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(spk_B_V_address0),
    .ce0(spk_B_V_ce0),
    .we0(spk_B_V_we0),
    .d0(spk_B_V_d0),
    .q0(spk_B_V_q0)
);

spk_packet_rx_mul_6ns_8ns_13_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 13 ))
spk_packet_rx_mul_6ns_8ns_13_3_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_296_p0),
    .din1(grp_fu_296_p1),
    .ce(1'b1),
    .dout(grp_fu_296_p2)
);

spk_packet_rx_mac_muladd_6ns_8ns_5ns_13_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 5 ),
    .dout_WIDTH( 13 ))
spk_packet_rx_mac_muladd_6ns_8ns_5ns_13_3_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_423_p0),
    .din1(grp_fu_423_p1),
    .din2(grp_fu_423_p2),
    .ce(1'b1),
    .dout(grp_fu_423_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_13) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == spk_out_stream_V_data_V_1_ack_in)) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == spk_out_stream_V_data_V_1_ack_in))) & ~(1'b0 == exitcond1_fu_391_p2))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & ~(1'b0 == spk_out_stream_V_data_V_1_ack_in) & (1'b0 == tmp_dest_V_1_reg_509))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_13) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == spk_out_stream_V_data_V_1_ack_in)) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == spk_out_stream_V_data_V_1_ack_in))))) begin
            ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
        end else if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & ~(1'b0 == spk_out_stream_V_data_V_1_ack_in) & (1'b0 == tmp_dest_V_1_reg_509))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == spk_out_stream_V_data_V_1_ack_in)) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == spk_out_stream_V_data_V_1_ack_in)))) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end else if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & ~(1'b0 == spk_out_stream_V_data_V_1_ack_in) & (1'b0 == tmp_dest_V_1_reg_509))) begin
            ap_reg_ppiten_pp0_it2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp1_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_14) & ~(((1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == spk_out_stream_V_data_V_1_ack_in)) | ((1'b1 == ap_reg_ppiten_pp1_it2) & (1'b0 == spk_out_stream_V_data_V_1_ack_in))) & ~(1'b0 == exitcond_fu_417_p2))) begin
            ap_reg_ppiten_pp1_it0 <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & ~(1'b0 == spk_out_stream_V_data_V_1_ack_in) & ~(1'b0 == tmp_dest_V_1_reg_509))) begin
            ap_reg_ppiten_pp1_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp1_it1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_14) & ~(((1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == spk_out_stream_V_data_V_1_ack_in)) | ((1'b1 == ap_reg_ppiten_pp1_it2) & (1'b0 == spk_out_stream_V_data_V_1_ack_in))))) begin
            ap_reg_ppiten_pp1_it1 <= ap_reg_ppiten_pp1_it0;
        end else if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & ~(1'b0 == spk_out_stream_V_data_V_1_ack_in) & ~(1'b0 == tmp_dest_V_1_reg_509))) begin
            ap_reg_ppiten_pp1_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp1_it2 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == spk_out_stream_V_data_V_1_ack_in)) | ((1'b1 == ap_reg_ppiten_pp1_it2) & (1'b0 == spk_out_stream_V_data_V_1_ack_in)))) begin
            ap_reg_ppiten_pp1_it2 <= ap_reg_ppiten_pp1_it1;
        end else if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & ~(1'b0 == spk_out_stream_V_data_V_1_ack_in) & ~(1'b0 == tmp_dest_V_1_reg_509))) begin
            ap_reg_ppiten_pp1_it2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        post_in_V_data_V_0_has_vld_data_reg <= 1'b0;
    end else begin
        post_in_V_data_V_0_has_vld_data_reg <= post_in_V_data_V_0_has_vld_data_reg_i;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        post_in_V_data_V_0_in_rdy <= 1'b0;
    end else begin
        post_in_V_data_V_0_in_rdy <= (post_in_V_data_V_0_ack_out | ~post_in_V_data_V_0_has_vld_data_reg_i);
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        post_in_V_dest_V_0_has_vld_data_reg <= 1'b0;
    end else begin
        post_in_V_dest_V_0_has_vld_data_reg <= post_in_V_dest_V_0_has_vld_data_reg_i;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        post_in_V_dest_V_0_in_rdy <= 1'b0;
    end else begin
        post_in_V_dest_V_0_in_rdy <= (post_in_V_dest_V_0_ack_out | ~post_in_V_dest_V_0_has_vld_data_reg_i);
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        post_in_V_id_V_0_has_vld_data_reg <= 1'b0;
    end else begin
        post_in_V_id_V_0_has_vld_data_reg <= post_in_V_id_V_0_has_vld_data_reg_i;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        post_in_V_id_V_0_in_rdy <= 1'b0;
    end else begin
        post_in_V_id_V_0_in_rdy <= (post_in_V_id_V_0_ack_out | ~post_in_V_id_V_0_has_vld_data_reg_i);
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        post_in_V_last_0_has_vld_data_reg <= 1'b0;
    end else begin
        post_in_V_last_0_has_vld_data_reg <= post_in_V_last_0_has_vld_data_reg_i;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        post_in_V_last_0_in_rdy <= 1'b0;
    end else begin
        post_in_V_last_0_in_rdy <= (post_in_V_last_0_ack_out | ~post_in_V_last_0_has_vld_data_reg_i);
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        post_in_V_user_V_0_has_vld_data_reg <= 1'b0;
    end else begin
        post_in_V_user_V_0_has_vld_data_reg <= post_in_V_user_V_0_has_vld_data_reg_i;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        post_in_V_user_V_0_in_rdy <= 1'b0;
    end else begin
        post_in_V_user_V_0_in_rdy <= (post_in_V_user_V_0_ack_out | ~post_in_V_user_V_0_has_vld_data_reg_i);
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        pre_in_V_data_V_0_has_vld_data_reg <= 1'b0;
    end else begin
        pre_in_V_data_V_0_has_vld_data_reg <= pre_in_V_data_V_0_has_vld_data_reg_i;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        pre_in_V_data_V_0_in_rdy <= 1'b0;
    end else begin
        pre_in_V_data_V_0_in_rdy <= (pre_in_V_data_V_0_ack_out | ~pre_in_V_data_V_0_has_vld_data_reg_i);
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        pre_in_V_dest_V_0_has_vld_data_reg <= 1'b0;
    end else begin
        pre_in_V_dest_V_0_has_vld_data_reg <= pre_in_V_dest_V_0_has_vld_data_reg_i;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        pre_in_V_dest_V_0_in_rdy <= 1'b0;
    end else begin
        pre_in_V_dest_V_0_in_rdy <= (pre_in_V_dest_V_0_ack_out | ~pre_in_V_dest_V_0_has_vld_data_reg_i);
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        pre_in_V_id_V_0_has_vld_data_reg <= 1'b0;
    end else begin
        pre_in_V_id_V_0_has_vld_data_reg <= pre_in_V_id_V_0_has_vld_data_reg_i;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        pre_in_V_id_V_0_in_rdy <= 1'b0;
    end else begin
        pre_in_V_id_V_0_in_rdy <= (pre_in_V_id_V_0_ack_out | ~pre_in_V_id_V_0_has_vld_data_reg_i);
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        pre_in_V_last_0_has_vld_data_reg <= 1'b0;
    end else begin
        pre_in_V_last_0_has_vld_data_reg <= pre_in_V_last_0_has_vld_data_reg_i;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        pre_in_V_last_0_in_rdy <= 1'b0;
    end else begin
        pre_in_V_last_0_in_rdy <= (pre_in_V_last_0_ack_out | ~pre_in_V_last_0_has_vld_data_reg_i);
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        pre_in_V_user_V_0_has_vld_data_reg <= 1'b0;
    end else begin
        pre_in_V_user_V_0_has_vld_data_reg <= pre_in_V_user_V_0_has_vld_data_reg_i;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        pre_in_V_user_V_0_in_rdy <= 1'b0;
    end else begin
        pre_in_V_user_V_0_in_rdy <= (pre_in_V_user_V_0_ack_out | ~pre_in_V_user_V_0_has_vld_data_reg_i);
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        spk_out_stream_V_data_V_1_mVld <= 1'b0;
    end else begin
        if ((1'b1 == spk_out_stream_V_data_V_1_vld_in)) begin
            spk_out_stream_V_data_V_1_mVld <= 1'b1;
        end else if ((1'b1 == spk_out_stream_V_data_V_1_ack_out)) begin
            spk_out_stream_V_data_V_1_mVld <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        time_stamp_V_0_has_vld_data_reg <= 1'b0;
    end else begin
        time_stamp_V_0_has_vld_data_reg <= time_stamp_V_0_has_vld_data_reg_i;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        time_stamp_V_0_in_rdy <= 1'b0;
    end else begin
        time_stamp_V_0_in_rdy <= (time_stamp_V_0_ack_out | ~time_stamp_V_0_has_vld_data_reg_i);
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & ~(1'b0 == spk_out_stream_V_data_V_1_ack_in) & (1'b0 == tmp_dest_V_1_reg_509))) begin
        j3_reg_227 <= ap_const_lv5_0;
    end else if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_13) & (1'b1 == ap_reg_ppiten_pp0_it1) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == spk_out_stream_V_data_V_1_ack_in)) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == spk_out_stream_V_data_V_1_ack_in))) & (1'b0 == exitcond1_reg_537))) begin
        j3_reg_227 <= j_2_reg_532;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & ~(1'b0 == spk_out_stream_V_data_V_1_ack_in) & ~(1'b0 == tmp_dest_V_1_reg_509))) begin
        j_reg_238 <= ap_const_lv5_0;
    end else if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_14) & (1'b1 == ap_reg_ppiten_pp1_it1) & ~(((1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == spk_out_stream_V_data_V_1_ack_in)) | ((1'b1 == ap_reg_ppiten_pp1_it2) & (1'b0 == spk_out_stream_V_data_V_1_ack_in))) & (1'b0 == exitcond_reg_556))) begin
        j_reg_238 <= j_1_reg_551;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        ch_V_reg_483 <= ch_V_fu_278_p1;
        ch_groupNo_V_reg_488 <= {{empty_6_reg_474_2[ap_const_lv32_F : ap_const_lv32_8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(1'b0 == grp_nbreadreq_fu_126_p7) & ~ap_sig_579)) begin
        empty_6_reg_474_0 <= post_in_V_user_V_0_data_out;
        empty_6_reg_474_1 <= post_in_V_last_0_data_out;
        empty_6_reg_474_2 <= post_in_V_id_V_0_data_out;
        empty_6_reg_474_3 <= post_in_V_data_V_0_data_out;
        empty_6_reg_474_4 <= post_in_V_dest_V_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(grp_nbreadreq_fu_96_p7 == 1'b0) & ~ap_sig_536)) begin
        empty_reg_436_0 <= pre_in_V_user_V_0_data_out;
        empty_reg_436_2 <= pre_in_V_id_V_0_data_out;
        empty_reg_436_3 <= pre_in_V_data_V_0_data_out;
        empty_reg_436_4 <= pre_in_V_dest_V_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_13) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == spk_out_stream_V_data_V_1_ack_in)) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == spk_out_stream_V_data_V_1_ack_in))))) begin
        exitcond1_reg_537 <= exitcond1_fu_391_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_14) & ~(((1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == spk_out_stream_V_data_V_1_ack_in)) | ((1'b1 == ap_reg_ppiten_pp1_it2) & (1'b0 == spk_out_stream_V_data_V_1_ack_in))))) begin
        exitcond_reg_556 <= exitcond_fu_417_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_14) & (1'b1 == ap_reg_ppiten_pp1_it0) & ~(((1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == spk_out_stream_V_data_V_1_ack_in)) | ((1'b1 == ap_reg_ppiten_pp1_it2) & (1'b0 == spk_out_stream_V_data_V_1_ack_in))))) begin
        j_1_reg_551 <= j_1_fu_411_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_13) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == spk_out_stream_V_data_V_1_ack_in)) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == spk_out_stream_V_data_V_1_ack_in))))) begin
        j_2_reg_532 <= j_2_fu_385_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == 1'b1)) begin
        post_in_V_data_V_0_areset_d <= ap_rst_n_inv;
        post_in_V_dest_V_0_areset_d <= ap_rst_n_inv;
        post_in_V_id_V_0_areset_d <= ap_rst_n_inv;
        post_in_V_last_0_areset_d <= ap_rst_n_inv;
        post_in_V_user_V_0_areset_d <= ap_rst_n_inv;
        pre_in_V_data_V_0_areset_d <= ap_rst_n_inv;
        pre_in_V_dest_V_0_areset_d <= ap_rst_n_inv;
        pre_in_V_id_V_0_areset_d <= ap_rst_n_inv;
        pre_in_V_last_0_areset_d <= ap_rst_n_inv;
        pre_in_V_user_V_0_areset_d <= ap_rst_n_inv;
        spk_out_stream_V_data_V_1_areset_d <= ap_rst_n_inv;
        time_stamp_V_0_areset_d <= ap_rst_n_inv;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == post_in_V_data_V_0_vld_in) & (1'b1 == post_in_V_data_V_0_in_rdy))) begin
        post_in_V_data_V_0_data_reg <= post_in_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == post_in_V_dest_V_0_vld_in) & (1'b1 == post_in_V_dest_V_0_in_rdy))) begin
        post_in_V_dest_V_0_data_reg <= post_in_TDEST;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == post_in_V_id_V_0_vld_in) & (1'b1 == post_in_V_id_V_0_in_rdy))) begin
        post_in_V_id_V_0_data_reg <= post_in_TID;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == post_in_V_last_0_vld_in) & (1'b1 == post_in_V_last_0_in_rdy))) begin
        post_in_V_last_0_data_reg <= post_in_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == post_in_V_user_V_0_vld_in) & (1'b1 == post_in_V_user_V_0_in_rdy))) begin
        post_in_V_user_V_0_data_reg <= post_in_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == pre_in_V_data_V_0_vld_in) & (1'b1 == pre_in_V_data_V_0_in_rdy))) begin
        pre_in_V_data_V_0_data_reg <= pre_in_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == pre_in_V_dest_V_0_vld_in) & (1'b1 == pre_in_V_dest_V_0_in_rdy))) begin
        pre_in_V_dest_V_0_data_reg <= pre_in_TDEST;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == pre_in_V_id_V_0_vld_in) & (1'b1 == pre_in_V_id_V_0_in_rdy))) begin
        pre_in_V_id_V_0_data_reg <= pre_in_TID;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == pre_in_V_user_V_0_vld_in) & (1'b1 == pre_in_V_user_V_0_in_rdy))) begin
        pre_in_V_user_V_0_data_reg <= pre_in_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == spk_out_stream_V_data_V_1_vld_in) & (1'b1 == spk_out_stream_V_data_V_1_sRdy))) begin
        spk_out_stream_V_data_V_1_data_reg <= spk_out_stream_V_data_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == time_stamp_V_0_vld_in) & (1'b1 == time_stamp_V_0_in_rdy))) begin
        time_stamp_V_0_data_reg <= time_stamp_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        tmp_5_cast_reg_464 <= tmp_5_cast_fu_272_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        tmp_6_reg_498 <= grp_fu_296_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st11_fsm_10) & ~(1'b0 == empty_6_reg_474_1) & ~ap_sig_620)) begin
        tmp_7_reg_513 <= time_stamp_V_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        tmp_data_V_reg_449 <= empty_reg_436_3;
        tmp_dest_V_reg_455 <= empty_reg_436_4;
        tmp_user_V_reg_444 <= empty_reg_436_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st11_fsm_10) & ~ap_sig_620)) begin
        tmp_dest_V_1_reg_509 <= empty_6_reg_474_4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~ap_sig_536)) begin
        tmp_reg_432 <= grp_nbreadreq_fu_96_p7;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st20_fsm_15) & ~(spk_out_stream_V_data_V_1_ack_in == 1'b0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st20_fsm_15) & ~(spk_out_stream_V_data_V_1_ack_in == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_502) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_13 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_13 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_518) begin
        ap_sig_cseq_ST_pp1_stg0_fsm_14 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp1_stg0_fsm_14 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_615) begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_471) begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_483) begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_494) begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_33) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_917) begin
        ap_sig_cseq_ST_st20_fsm_15 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_15 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_446) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_559) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_574) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_697) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_459) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_602) begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_13) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond1_reg_537))) begin
        j3_phi_fu_231_p4 = j_2_reg_532;
    end else begin
        j3_phi_fu_231_p4 = j3_reg_227;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_14) & (1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == exitcond_reg_556))) begin
        j_phi_fu_242_p4 = j_1_reg_551;
    end else begin
        j_phi_fu_242_p4 = j_reg_238;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(1'b0 == grp_nbreadreq_fu_126_p7))) begin
        post_in_TDATA_blk_n = post_in_V_data_V_0_vld_out;
    end else begin
        post_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(1'b0 == grp_nbreadreq_fu_126_p7) & ~ap_sig_579)) begin
        post_in_V_data_V_0_ack_out = 1'b1;
    end else begin
        post_in_V_data_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == post_in_V_data_V_0_has_vld_data_reg)) begin
        post_in_V_data_V_0_data_out = post_in_V_data_V_0_data_reg;
    end else begin
        post_in_V_data_V_0_data_out = post_in_TDATA;
    end
end

always @ (*) begin
    if (((1'b1 == post_in_V_data_V_0_vld_in) & (1'b0 == post_in_V_data_V_0_ack_out) & (1'b1 == post_in_V_data_V_0_in_rdy))) begin
        post_in_V_data_V_0_has_vld_data_reg_i = 1'b1;
    end else if (((1'b1 == post_in_V_data_V_0_ack_out) & (1'b1 == post_in_V_data_V_0_has_vld_data_reg) & ((1'b0 == post_in_V_data_V_0_vld_in) | (1'b0 == post_in_V_data_V_0_in_rdy)))) begin
        post_in_V_data_V_0_has_vld_data_reg_i = 1'b0;
    end else begin
        post_in_V_data_V_0_has_vld_data_reg_i = post_in_V_data_V_0_has_vld_data_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(1'b0 == grp_nbreadreq_fu_126_p7) & ~ap_sig_579)) begin
        post_in_V_dest_V_0_ack_out = 1'b1;
    end else begin
        post_in_V_dest_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == post_in_V_dest_V_0_has_vld_data_reg)) begin
        post_in_V_dest_V_0_data_out = post_in_V_dest_V_0_data_reg;
    end else begin
        post_in_V_dest_V_0_data_out = post_in_TDEST;
    end
end

always @ (*) begin
    if (((1'b1 == post_in_V_dest_V_0_vld_in) & (1'b0 == post_in_V_dest_V_0_ack_out) & (1'b1 == post_in_V_dest_V_0_in_rdy))) begin
        post_in_V_dest_V_0_has_vld_data_reg_i = 1'b1;
    end else if (((1'b1 == post_in_V_dest_V_0_ack_out) & (1'b1 == post_in_V_dest_V_0_has_vld_data_reg) & ((1'b0 == post_in_V_dest_V_0_vld_in) | (1'b0 == post_in_V_dest_V_0_in_rdy)))) begin
        post_in_V_dest_V_0_has_vld_data_reg_i = 1'b0;
    end else begin
        post_in_V_dest_V_0_has_vld_data_reg_i = post_in_V_dest_V_0_has_vld_data_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(1'b0 == grp_nbreadreq_fu_126_p7) & ~ap_sig_579)) begin
        post_in_V_id_V_0_ack_out = 1'b1;
    end else begin
        post_in_V_id_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == post_in_V_id_V_0_has_vld_data_reg)) begin
        post_in_V_id_V_0_data_out = post_in_V_id_V_0_data_reg;
    end else begin
        post_in_V_id_V_0_data_out = post_in_TID;
    end
end

always @ (*) begin
    if (((1'b1 == post_in_V_id_V_0_vld_in) & (1'b0 == post_in_V_id_V_0_ack_out) & (1'b1 == post_in_V_id_V_0_in_rdy))) begin
        post_in_V_id_V_0_has_vld_data_reg_i = 1'b1;
    end else if (((1'b1 == post_in_V_id_V_0_ack_out) & (1'b1 == post_in_V_id_V_0_has_vld_data_reg) & ((1'b0 == post_in_V_id_V_0_vld_in) | (1'b0 == post_in_V_id_V_0_in_rdy)))) begin
        post_in_V_id_V_0_has_vld_data_reg_i = 1'b0;
    end else begin
        post_in_V_id_V_0_has_vld_data_reg_i = post_in_V_id_V_0_has_vld_data_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(1'b0 == grp_nbreadreq_fu_126_p7) & ~ap_sig_579)) begin
        post_in_V_last_0_ack_out = 1'b1;
    end else begin
        post_in_V_last_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == post_in_V_last_0_has_vld_data_reg)) begin
        post_in_V_last_0_data_out = post_in_V_last_0_data_reg;
    end else begin
        post_in_V_last_0_data_out = post_in_TLAST;
    end
end

always @ (*) begin
    if (((1'b1 == post_in_V_last_0_vld_in) & (1'b0 == post_in_V_last_0_ack_out) & (1'b1 == post_in_V_last_0_in_rdy))) begin
        post_in_V_last_0_has_vld_data_reg_i = 1'b1;
    end else if (((1'b1 == post_in_V_last_0_ack_out) & (1'b1 == post_in_V_last_0_has_vld_data_reg) & ((1'b0 == post_in_V_last_0_vld_in) | (1'b0 == post_in_V_last_0_in_rdy)))) begin
        post_in_V_last_0_has_vld_data_reg_i = 1'b0;
    end else begin
        post_in_V_last_0_has_vld_data_reg_i = post_in_V_last_0_has_vld_data_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(1'b0 == grp_nbreadreq_fu_126_p7) & ~ap_sig_579)) begin
        post_in_V_user_V_0_ack_out = 1'b1;
    end else begin
        post_in_V_user_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == post_in_V_user_V_0_has_vld_data_reg)) begin
        post_in_V_user_V_0_data_out = post_in_V_user_V_0_data_reg;
    end else begin
        post_in_V_user_V_0_data_out = post_in_TUSER;
    end
end

always @ (*) begin
    if (((1'b1 == post_in_V_user_V_0_vld_in) & (1'b0 == post_in_V_user_V_0_ack_out) & (1'b1 == post_in_V_user_V_0_in_rdy))) begin
        post_in_V_user_V_0_has_vld_data_reg_i = 1'b1;
    end else if (((1'b1 == post_in_V_user_V_0_ack_out) & (1'b1 == post_in_V_user_V_0_has_vld_data_reg) & ((1'b0 == post_in_V_user_V_0_vld_in) | (1'b0 == post_in_V_user_V_0_in_rdy)))) begin
        post_in_V_user_V_0_has_vld_data_reg_i = 1'b0;
    end else begin
        post_in_V_user_V_0_has_vld_data_reg_i = post_in_V_user_V_0_has_vld_data_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(grp_nbreadreq_fu_96_p7 == 1'b0))) begin
        pre_in_TDATA_blk_n = pre_in_V_data_V_0_vld_out;
    end else begin
        pre_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(grp_nbreadreq_fu_96_p7 == 1'b0) & ~ap_sig_536)) begin
        pre_in_V_data_V_0_ack_out = 1'b1;
    end else begin
        pre_in_V_data_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == pre_in_V_data_V_0_has_vld_data_reg)) begin
        pre_in_V_data_V_0_data_out = pre_in_V_data_V_0_data_reg;
    end else begin
        pre_in_V_data_V_0_data_out = pre_in_TDATA;
    end
end

always @ (*) begin
    if (((1'b1 == pre_in_V_data_V_0_vld_in) & (1'b0 == pre_in_V_data_V_0_ack_out) & (1'b1 == pre_in_V_data_V_0_in_rdy))) begin
        pre_in_V_data_V_0_has_vld_data_reg_i = 1'b1;
    end else if (((1'b1 == pre_in_V_data_V_0_ack_out) & (1'b1 == pre_in_V_data_V_0_has_vld_data_reg) & ((1'b0 == pre_in_V_data_V_0_vld_in) | (1'b0 == pre_in_V_data_V_0_in_rdy)))) begin
        pre_in_V_data_V_0_has_vld_data_reg_i = 1'b0;
    end else begin
        pre_in_V_data_V_0_has_vld_data_reg_i = pre_in_V_data_V_0_has_vld_data_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(grp_nbreadreq_fu_96_p7 == 1'b0) & ~ap_sig_536)) begin
        pre_in_V_dest_V_0_ack_out = 1'b1;
    end else begin
        pre_in_V_dest_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == pre_in_V_dest_V_0_has_vld_data_reg)) begin
        pre_in_V_dest_V_0_data_out = pre_in_V_dest_V_0_data_reg;
    end else begin
        pre_in_V_dest_V_0_data_out = pre_in_TDEST;
    end
end

always @ (*) begin
    if (((1'b1 == pre_in_V_dest_V_0_vld_in) & (1'b0 == pre_in_V_dest_V_0_ack_out) & (1'b1 == pre_in_V_dest_V_0_in_rdy))) begin
        pre_in_V_dest_V_0_has_vld_data_reg_i = 1'b1;
    end else if (((1'b1 == pre_in_V_dest_V_0_ack_out) & (1'b1 == pre_in_V_dest_V_0_has_vld_data_reg) & ((1'b0 == pre_in_V_dest_V_0_vld_in) | (1'b0 == pre_in_V_dest_V_0_in_rdy)))) begin
        pre_in_V_dest_V_0_has_vld_data_reg_i = 1'b0;
    end else begin
        pre_in_V_dest_V_0_has_vld_data_reg_i = pre_in_V_dest_V_0_has_vld_data_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(grp_nbreadreq_fu_96_p7 == 1'b0) & ~ap_sig_536)) begin
        pre_in_V_id_V_0_ack_out = 1'b1;
    end else begin
        pre_in_V_id_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == pre_in_V_id_V_0_has_vld_data_reg)) begin
        pre_in_V_id_V_0_data_out = pre_in_V_id_V_0_data_reg;
    end else begin
        pre_in_V_id_V_0_data_out = pre_in_TID;
    end
end

always @ (*) begin
    if (((1'b1 == pre_in_V_id_V_0_vld_in) & (1'b0 == pre_in_V_id_V_0_ack_out) & (1'b1 == pre_in_V_id_V_0_in_rdy))) begin
        pre_in_V_id_V_0_has_vld_data_reg_i = 1'b1;
    end else if (((1'b1 == pre_in_V_id_V_0_ack_out) & (1'b1 == pre_in_V_id_V_0_has_vld_data_reg) & ((1'b0 == pre_in_V_id_V_0_vld_in) | (1'b0 == pre_in_V_id_V_0_in_rdy)))) begin
        pre_in_V_id_V_0_has_vld_data_reg_i = 1'b0;
    end else begin
        pre_in_V_id_V_0_has_vld_data_reg_i = pre_in_V_id_V_0_has_vld_data_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(grp_nbreadreq_fu_96_p7 == 1'b0) & ~ap_sig_536)) begin
        pre_in_V_last_0_ack_out = 1'b1;
    end else begin
        pre_in_V_last_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == pre_in_V_last_0_vld_in) & (1'b0 == pre_in_V_last_0_ack_out) & (1'b1 == pre_in_V_last_0_in_rdy))) begin
        pre_in_V_last_0_has_vld_data_reg_i = 1'b1;
    end else if (((1'b1 == pre_in_V_last_0_ack_out) & (1'b1 == pre_in_V_last_0_has_vld_data_reg) & ((1'b0 == pre_in_V_last_0_vld_in) | (1'b0 == pre_in_V_last_0_in_rdy)))) begin
        pre_in_V_last_0_has_vld_data_reg_i = 1'b0;
    end else begin
        pre_in_V_last_0_has_vld_data_reg_i = pre_in_V_last_0_has_vld_data_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(grp_nbreadreq_fu_96_p7 == 1'b0) & ~ap_sig_536)) begin
        pre_in_V_user_V_0_ack_out = 1'b1;
    end else begin
        pre_in_V_user_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == pre_in_V_user_V_0_has_vld_data_reg)) begin
        pre_in_V_user_V_0_data_out = pre_in_V_user_V_0_data_reg;
    end else begin
        pre_in_V_user_V_0_data_out = pre_in_TUSER;
    end
end

always @ (*) begin
    if (((1'b1 == pre_in_V_user_V_0_vld_in) & (1'b0 == pre_in_V_user_V_0_ack_out) & (1'b1 == pre_in_V_user_V_0_in_rdy))) begin
        pre_in_V_user_V_0_has_vld_data_reg_i = 1'b1;
    end else if (((1'b1 == pre_in_V_user_V_0_ack_out) & (1'b1 == pre_in_V_user_V_0_has_vld_data_reg) & ((1'b0 == pre_in_V_user_V_0_vld_in) | (1'b0 == pre_in_V_user_V_0_in_rdy)))) begin
        pre_in_V_user_V_0_has_vld_data_reg_i = 1'b0;
    end else begin
        pre_in_V_user_V_0_has_vld_data_reg_i = pre_in_V_user_V_0_has_vld_data_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        spk_A_V_address0 = tmp_12_cast_fu_325_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        spk_A_V_address0 = tmp_5_cast_reg_464;
    end else if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_13) & (1'b1 == ap_reg_ppiten_pp0_it0))) begin
        spk_A_V_address0 = tmp_16_cast_fu_380_p1;
    end else begin
        spk_A_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st11_fsm_10) & ~ap_sig_620) | ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_13) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == spk_out_stream_V_data_V_1_ack_in)) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == spk_out_stream_V_data_V_1_ack_in)))) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5))) begin
        spk_A_V_ce0 = 1'b1;
    end else begin
        spk_A_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        spk_A_V_d0 = empty_6_reg_474_3;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        spk_A_V_d0 = tmp_data_V_reg_449;
    end else begin
        spk_A_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~(1'b0 == tmp_reg_432) & (1'b0 == tmp_dest_V_reg_455)) | ((1'b1 == ap_sig_cseq_ST_st11_fsm_10) & ~ap_sig_620 & (1'b0 == tmp_dest_V_1_fu_313_p1)))) begin
        spk_A_V_we0 = 1'b1;
    end else begin
        spk_A_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        spk_B_V_address0 = tmp_12_cast_fu_325_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        spk_B_V_address0 = tmp_5_cast_reg_464;
    end else if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_14) & (1'b1 == ap_reg_ppiten_pp1_it0))) begin
        spk_B_V_address0 = tmp_14_cast_fu_406_p1;
    end else begin
        spk_B_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st11_fsm_10) & ~ap_sig_620) | ((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_14) & (1'b1 == ap_reg_ppiten_pp1_it0) & ~(((1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == spk_out_stream_V_data_V_1_ack_in)) | ((1'b1 == ap_reg_ppiten_pp1_it2) & (1'b0 == spk_out_stream_V_data_V_1_ack_in)))) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5))) begin
        spk_B_V_ce0 = 1'b1;
    end else begin
        spk_B_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        spk_B_V_d0 = empty_6_reg_474_3;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        spk_B_V_d0 = tmp_data_V_reg_449;
    end else begin
        spk_B_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~(1'b0 == tmp_reg_432) & ~(1'b0 == tmp_dest_V_reg_455)) | ((1'b1 == ap_sig_cseq_ST_st11_fsm_10) & ~ap_sig_620 & ~(1'b0 == tmp_dest_V_1_fu_313_p1)))) begin
        spk_B_V_we0 = 1'b1;
    end else begin
        spk_B_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_14) & (1'b1 == ap_reg_ppiten_pp1_it1))) begin
        spk_out_stream_V_data_V_1_data_in = spk_B_V_q0;
    end else if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_13) & (1'b1 == ap_reg_ppiten_pp0_it1))) begin
        spk_out_stream_V_data_V_1_data_in = spk_A_V_q0;
    end else if (((1'b1 == ap_sig_cseq_ST_st12_fsm_11) & ~(1'b0 == icmp_fu_346_p2))) begin
        spk_out_stream_V_data_V_1_data_in = tmp_data_V_5_fu_358_p5;
    end else begin
        spk_out_stream_V_data_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st12_fsm_11) & ~(1'b0 == icmp_fu_346_p2) & ~(~(1'b0 == icmp_fu_346_p2) & (1'b0 == spk_out_stream_V_data_V_1_ack_in))) | ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_13) & (1'b1 == ap_reg_ppiten_pp0_it1) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == spk_out_stream_V_data_V_1_ack_in)) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == spk_out_stream_V_data_V_1_ack_in)))) | ((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_14) & (1'b1 == ap_reg_ppiten_pp1_it1) & ~(((1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == spk_out_stream_V_data_V_1_ack_in)) | ((1'b1 == ap_reg_ppiten_pp1_it2) & (1'b0 == spk_out_stream_V_data_V_1_ack_in)))))) begin
        spk_out_stream_V_data_V_1_vld_in = 1'b1;
    end else begin
        spk_out_stream_V_data_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st12_fsm_11) & ~(1'b0 == icmp_fu_346_p2)) | (1'b1 == ap_sig_cseq_ST_st13_fsm_12) | ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_13) & (1'b1 == ap_reg_ppiten_pp0_it1)) | (1'b1 == ap_reg_ppiten_pp0_it2) | ((1'b1 == ap_sig_cseq_ST_pp1_stg0_fsm_14) & (1'b1 == ap_reg_ppiten_pp1_it1)) | (1'b1 == ap_reg_ppiten_pp1_it2))) begin
        spk_out_stream_V_data_V_TDATA_blk_n = spk_out_stream_V_data_V_1_sRdy;
    end else begin
        spk_out_stream_V_data_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st11_fsm_10) & ~(1'b0 == empty_6_reg_474_1) & ~ap_sig_620)) begin
        time_stamp_V_0_ack_out = 1'b1;
    end else begin
        time_stamp_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == time_stamp_V_0_has_vld_data_reg)) begin
        time_stamp_V_0_data_out = time_stamp_V_0_data_reg;
    end else begin
        time_stamp_V_0_data_out = time_stamp_V_TDATA;
    end
end

always @ (*) begin
    if (((1'b1 == time_stamp_V_0_vld_in) & (1'b0 == time_stamp_V_0_ack_out) & (1'b1 == time_stamp_V_0_in_rdy))) begin
        time_stamp_V_0_has_vld_data_reg_i = 1'b1;
    end else if (((1'b1 == time_stamp_V_0_ack_out) & (1'b1 == time_stamp_V_0_has_vld_data_reg) & ((1'b0 == time_stamp_V_0_vld_in) | (1'b0 == time_stamp_V_0_in_rdy)))) begin
        time_stamp_V_0_has_vld_data_reg_i = 1'b0;
    end else begin
        time_stamp_V_0_has_vld_data_reg_i = time_stamp_V_0_has_vld_data_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st11_fsm_10) & ~(1'b0 == empty_6_reg_474_1))) begin
        time_stamp_V_TDATA_blk_n = time_stamp_V_0_vld_out;
    end else begin
        time_stamp_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (((grp_nbreadreq_fu_96_p7 == 1'b0) & ~ap_sig_536)) begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end else if ((~(grp_nbreadreq_fu_96_p7 == 1'b0) & ~ap_sig_536)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : begin
            if (((1'b0 == grp_nbreadreq_fu_126_p7) & ~ap_sig_579)) begin
                ap_NS_fsm = ap_ST_st20_fsm_15;
            end else if ((~(1'b0 == grp_nbreadreq_fu_126_p7) & ~ap_sig_579)) begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            if (((1'b0 == empty_6_reg_474_1) & ~ap_sig_620)) begin
                ap_NS_fsm = ap_ST_st20_fsm_15;
            end else if ((~(1'b0 == empty_6_reg_474_1) & ~ap_sig_620)) begin
                ap_NS_fsm = ap_ST_st12_fsm_11;
            end else begin
                ap_NS_fsm = ap_ST_st11_fsm_10;
            end
        end
        ap_ST_st12_fsm_11 : begin
            if (((1'b0 == icmp_fu_346_p2) & ~(~(1'b0 == icmp_fu_346_p2) & (1'b0 == spk_out_stream_V_data_V_1_ack_in)))) begin
                ap_NS_fsm = ap_ST_st20_fsm_15;
            end else if ((~(1'b0 == icmp_fu_346_p2) & ~(~(1'b0 == icmp_fu_346_p2) & (1'b0 == spk_out_stream_V_data_V_1_ack_in)))) begin
                ap_NS_fsm = ap_ST_st13_fsm_12;
            end else begin
                ap_NS_fsm = ap_ST_st12_fsm_11;
            end
        end
        ap_ST_st13_fsm_12 : begin
            if ((~(1'b0 == spk_out_stream_V_data_V_1_ack_in) & ~(1'b0 == tmp_dest_V_1_reg_509))) begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_14;
            end else if ((~(1'b0 == spk_out_stream_V_data_V_1_ack_in) & (1'b0 == tmp_dest_V_1_reg_509))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_13;
            end else begin
                ap_NS_fsm = ap_ST_st13_fsm_12;
            end
        end
        ap_ST_pp0_stg0_fsm_13 : begin
            if (~((1'b1 == ap_reg_ppiten_pp0_it2) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == spk_out_stream_V_data_V_1_ack_in)) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == spk_out_stream_V_data_V_1_ack_in))) & ~(1'b1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_13;
            end else if (((1'b1 == ap_reg_ppiten_pp0_it2) & ~(((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == spk_out_stream_V_data_V_1_ack_in)) | ((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == spk_out_stream_V_data_V_1_ack_in))) & ~(1'b1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_st20_fsm_15;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_13;
            end
        end
        ap_ST_pp1_stg0_fsm_14 : begin
            if (~((1'b1 == ap_reg_ppiten_pp1_it2) & ~(((1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == spk_out_stream_V_data_V_1_ack_in)) | ((1'b1 == ap_reg_ppiten_pp1_it2) & (1'b0 == spk_out_stream_V_data_V_1_ack_in))) & ~(1'b1 == ap_reg_ppiten_pp1_it1))) begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_14;
            end else if (((1'b1 == ap_reg_ppiten_pp1_it2) & ~(((1'b1 == ap_reg_ppiten_pp1_it1) & (1'b0 == spk_out_stream_V_data_V_1_ack_in)) | ((1'b1 == ap_reg_ppiten_pp1_it2) & (1'b0 == spk_out_stream_V_data_V_1_ack_in))) & ~(1'b1 == ap_reg_ppiten_pp1_it1))) begin
                ap_NS_fsm = ap_ST_st20_fsm_15;
            end else begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_14;
            end
        end
        ap_ST_st20_fsm_15 : begin
            if (~(spk_out_stream_V_data_V_1_ack_in == 1'b0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st20_fsm_15;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

always @ (*) begin
    ap_sig_33 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_446 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_459 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_471 = (1'b1 == ap_CS_fsm[ap_const_lv32_A]);
end

always @ (*) begin
    ap_sig_483 = (1'b1 == ap_CS_fsm[ap_const_lv32_B]);
end

always @ (*) begin
    ap_sig_494 = (1'b1 == ap_CS_fsm[ap_const_lv32_C]);
end

always @ (*) begin
    ap_sig_502 = (1'b1 == ap_CS_fsm[ap_const_lv32_D]);
end

always @ (*) begin
    ap_sig_518 = (1'b1 == ap_CS_fsm[ap_const_lv32_E]);
end

always @ (*) begin
    ap_sig_536 = (~(grp_nbreadreq_fu_96_p7 == 1'b0) & (pre_in_V_user_V_0_vld_out == 1'b0));
end

always @ (*) begin
    ap_sig_559 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_574 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_579 = (~(1'b0 == grp_nbreadreq_fu_126_p7) & (post_in_V_user_V_0_vld_out == 1'b0));
end

always @ (*) begin
    ap_sig_602 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_615 = (1'b1 == ap_CS_fsm[ap_const_lv32_9]);
end

always @ (*) begin
    ap_sig_620 = (~(1'b0 == empty_6_reg_474_1) & (time_stamp_V_0_vld_out == 1'b0));
end

always @ (*) begin
    ap_sig_697 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_917 = (1'b1 == ap_CS_fsm[ap_const_lv32_F]);
end

assign ch_V_fu_278_p1 = empty_6_reg_474_2[7:0];

assign exitcond1_fu_391_p2 = ((j3_phi_fu_231_p4 == ap_const_lv5_12) ? 1'b1 : 1'b0);

assign exitcond_fu_417_p2 = ((j_phi_fu_242_p4 == ap_const_lv5_12) ? 1'b1 : 1'b0);

assign grp_fu_296_p0 = ap_const_lv13_13;

assign grp_fu_296_p1 = grp_fu_296_p10;

assign grp_fu_296_p10 = ch_V_fu_278_p1;

assign grp_fu_423_p0 = ap_const_lv13_13;

assign grp_fu_423_p1 = grp_fu_423_p10;

assign grp_fu_423_p10 = tmp_2_fu_261_p1;

assign grp_fu_423_p2 = grp_fu_423_p20;

assign grp_fu_423_p20 = tmp_user_V_reg_444;

assign grp_nbreadreq_fu_126_p7 = (post_in_V_user_V_0_vld_out & post_in_V_last_0_vld_out & post_in_V_id_V_0_vld_out & post_in_V_data_V_0_vld_out & post_in_V_dest_V_0_vld_out);

assign grp_nbreadreq_fu_96_p7 = (pre_in_V_user_V_0_vld_out & pre_in_V_last_0_vld_out & pre_in_V_id_V_0_vld_out & pre_in_V_data_V_0_vld_out & pre_in_V_dest_V_0_vld_out);

assign icmp_fu_346_p2 = (($signed(tmp_8_fu_336_p4) > $signed(29'b00000000000000000000000000000)) ? 1'b1 : 1'b0);

assign j_1_fu_411_p2 = (j_phi_fu_242_p4 + ap_const_lv5_1);

assign j_2_fu_385_p2 = (j3_phi_fu_231_p4 + ap_const_lv5_1);

assign loc_V_10_trunc_fu_355_p1 = ch_V_reg_483;

assign loc_V_8_trunc_fu_352_p1 = ch_groupNo_V_reg_488;

assign post_in_TREADY = post_in_V_dest_V_0_in_rdy;

assign post_in_V_data_V_0_vld_in = post_in_TVALID;

assign post_in_V_data_V_0_vld_out = ((post_in_TVALID | post_in_V_data_V_0_has_vld_data_reg) & ~post_in_V_data_V_0_areset_d);

assign post_in_V_dest_V_0_vld_in = post_in_TVALID;

assign post_in_V_dest_V_0_vld_out = ((post_in_TVALID | post_in_V_dest_V_0_has_vld_data_reg) & ~post_in_V_dest_V_0_areset_d);

assign post_in_V_id_V_0_vld_in = post_in_TVALID;

assign post_in_V_id_V_0_vld_out = ((post_in_TVALID | post_in_V_id_V_0_has_vld_data_reg) & ~post_in_V_id_V_0_areset_d);

assign post_in_V_last_0_vld_in = post_in_TVALID;

assign post_in_V_last_0_vld_out = ((post_in_TVALID | post_in_V_last_0_has_vld_data_reg) & ~post_in_V_last_0_areset_d);

assign post_in_V_user_V_0_vld_in = post_in_TVALID;

assign post_in_V_user_V_0_vld_out = ((post_in_TVALID | post_in_V_user_V_0_has_vld_data_reg) & ~post_in_V_user_V_0_areset_d);

assign pre_in_TREADY = pre_in_V_dest_V_0_in_rdy;

assign pre_in_V_data_V_0_vld_in = pre_in_TVALID;

assign pre_in_V_data_V_0_vld_out = ((pre_in_TVALID | pre_in_V_data_V_0_has_vld_data_reg) & ~pre_in_V_data_V_0_areset_d);

assign pre_in_V_dest_V_0_vld_in = pre_in_TVALID;

assign pre_in_V_dest_V_0_vld_out = ((pre_in_TVALID | pre_in_V_dest_V_0_has_vld_data_reg) & ~pre_in_V_dest_V_0_areset_d);

assign pre_in_V_id_V_0_vld_in = pre_in_TVALID;

assign pre_in_V_id_V_0_vld_out = ((pre_in_TVALID | pre_in_V_id_V_0_has_vld_data_reg) & ~pre_in_V_id_V_0_areset_d);

assign pre_in_V_last_0_vld_in = pre_in_TVALID;

assign pre_in_V_last_0_vld_out = ((pre_in_TVALID | pre_in_V_last_0_has_vld_data_reg) & ~pre_in_V_last_0_areset_d);

assign pre_in_V_user_V_0_vld_in = pre_in_TVALID;

assign pre_in_V_user_V_0_vld_out = ((pre_in_TVALID | pre_in_V_user_V_0_has_vld_data_reg) & ~pre_in_V_user_V_0_areset_d);

always @ (*) begin
    spk_out_stream_V_data_V_1_ack_in = (~spk_out_stream_V_data_V_1_areset_d & (spk_out_stream_V_data_V_TREADY | ~spk_out_stream_V_data_V_1_mVld));
end

assign spk_out_stream_V_data_V_1_ack_out = spk_out_stream_V_data_V_TREADY;

always @ (*) begin
    spk_out_stream_V_data_V_1_sRdy = (~spk_out_stream_V_data_V_1_areset_d & (spk_out_stream_V_data_V_TREADY | ~spk_out_stream_V_data_V_1_mVld));
end

assign spk_out_stream_V_data_V_TDATA = spk_out_stream_V_data_V_1_data_reg;

assign spk_out_stream_V_data_V_TVALID = spk_out_stream_V_data_V_1_mVld;

assign t_fu_331_p2 = ($signed(tmp_7_reg_513) + $signed(ap_const_lv32_FFFFFFFF));

assign time_stamp_V_0_vld_in = time_stamp_V_TVALID;

assign time_stamp_V_0_vld_out = ((time_stamp_V_TVALID | time_stamp_V_0_has_vld_data_reg) & ~time_stamp_V_0_areset_d);

assign time_stamp_V_TREADY = time_stamp_V_0_in_rdy;

assign tmp_11_cast_fu_397_p1 = j_phi_fu_242_p4;

assign tmp_11_fu_375_p2 = (tmp_6_reg_498 + tmp_13_cast_fu_371_p1);

assign tmp_12_cast_fu_325_p1 = $signed(tmp_s_fu_320_p2);

assign tmp_13_cast_fu_371_p1 = j3_phi_fu_231_p4;

assign tmp_14_cast_fu_406_p1 = $signed(tmp_9_fu_401_p2);

assign tmp_16_cast_fu_380_p1 = $signed(tmp_11_fu_375_p2);

assign tmp_2_fu_261_p1 = empty_reg_436_2[7:0];

assign tmp_5_cast_fu_272_p1 = $signed(grp_fu_423_p3);

assign tmp_8_cast_fu_316_p1 = empty_6_reg_474_0;

assign tmp_8_fu_336_p4 = {{t_fu_331_p2[ap_const_lv32_1F : ap_const_lv32_3]}};

assign tmp_9_fu_401_p2 = (tmp_6_reg_498 + tmp_11_cast_fu_397_p1);

assign tmp_data_V_5_fu_358_p5 = {{{{{{ap_const_lv32_0}, {loc_V_10_trunc_fu_355_p1}}}, {t_fu_331_p2}}}, {loc_V_8_trunc_fu_352_p1}};

assign tmp_dest_V_1_fu_313_p1 = empty_6_reg_474_4;

assign tmp_s_fu_320_p2 = (tmp_8_cast_fu_316_p1 + tmp_6_reg_498);

endmodule //spk_packet_rx
