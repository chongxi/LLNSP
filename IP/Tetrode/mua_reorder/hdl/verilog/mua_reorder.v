// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="mua_reorder,hls_ip_2016_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k325tffg900-2,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.386560,HLS_SYN_LAT=120,HLS_SYN_TPT=none,HLS_SYN_MEM=1,HLS_SYN_DSP=0,HLS_SYN_FF=444,HLS_SYN_LUT=577}" *)

module mua_reorder (
        ap_clk,
        ap_rst_n,
        muar_stream_V_data_V_dout,
        muar_stream_V_data_V_empty_n,
        muar_stream_V_data_V_read,
        muao_stream_V_data_V_TDATA,
        muao_stream_V_data_V_TVALID,
        muao_stream_V_data_V_TREADY
);

parameter    ap_ST_st1_fsm_0 = 7'b1;
parameter    ap_ST_st2_fsm_1 = 7'b10;
parameter    ap_ST_st3_fsm_2 = 7'b100;
parameter    ap_ST_st4_fsm_3 = 7'b1000;
parameter    ap_ST_st5_fsm_4 = 7'b10000;
parameter    ap_ST_pp0_stg0_fsm_5 = 7'b100000;
parameter    ap_ST_st8_fsm_6 = 7'b1000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_A0 = 32'b10100000;
parameter    ap_const_lv8_A0 = 8'b10100000;
parameter    ap_const_lv8_1 = 8'b1;

input   ap_clk;
input   ap_rst_n;
input  [31:0] muar_stream_V_data_V_dout;
input   muar_stream_V_data_V_empty_n;
output   muar_stream_V_data_V_read;
output  [31:0] muao_stream_V_data_V_TDATA;
output   muao_stream_V_data_V_TVALID;
input   muao_stream_V_data_V_TREADY;

reg muar_stream_V_data_V_read;
reg muao_stream_V_data_V_TVALID;

reg    ap_rst_n_inv;
reg   [31:0] ch_cnt;
reg   [31:0] ch_cycle;
reg   [31:0] ch_No;
reg   [7:0] buf_V_address0;
reg    buf_V_ce0;
reg    buf_V_we0;
wire   [31:0] buf_V_q0;
reg   [0:0] output_r;
reg    muar_stream_V_data_V_blk_n;
(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_47;
reg    muao_stream_V_data_V_TDATA_blk_n;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_5;
reg    ap_sig_55;
reg    ap_reg_ppiten_pp0_it1;
reg    ap_reg_ppiten_pp0_it0;
reg   [0:0] exitcond_reg_341;
reg   [7:0] k_reg_113;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_73;
wire   [3:0] grp_fu_152_p2;
reg   [3:0] tmp_2_reg_288;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_82;
wire    grp_fu_152_ap_done;
wire   [0:0] tmp_3_fu_161_p2;
reg   [0:0] tmp_3_reg_293;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_95;
wire   [31:0] tmp_5_fu_171_p2;
reg   [31:0] tmp_5_reg_299;
wire   [31:0] tmp_8_fu_177_p2;
reg   [31:0] tmp_8_reg_304;
wire   [0:0] tmp_9_fu_197_p2;
reg   [0:0] tmp_9_reg_325;
wire   [0:0] p_output_load_fu_242_p2;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_119;
wire   [0:0] exitcond_fu_259_p2;
reg    ap_sig_ioackin_muao_stream_V_data_V_TREADY;
wire   [7:0] k_1_fu_265_p2;
wire   [0:0] output_flag_1_phi_fu_128_p4;
reg   [0:0] output_flag_1_reg_124;
reg   [0:0] output_new_1_reg_135;
wire  signed [63:0] tmp_7_fu_192_p1;
wire   [63:0] tmp_s_fu_271_p1;
wire   [31:0] p_tmp_8_fu_225_p3;
wire   [31:0] p_ch_cycle_new_fu_235_p3;
wire   [0:0] p_ch_cycle_flag_fu_231_p2;
wire   [31:0] p_ch_No_new_fu_202_p3;
reg    ap_sig_cseq_ST_st8_fsm_6;
reg    ap_sig_171;
reg    ap_reg_ioackin_muao_stream_V_data_V_TREADY;
wire   [3:0] grp_fu_152_p1;
wire   [3:0] tmp_1_fu_158_p1;
wire   [31:0] ch_No_new_fu_186_p3;
wire   [31:0] tmp_4_fu_216_p2;
reg    grp_fu_152_ap_start;
reg   [6:0] ap_NS_fsm;
reg    ap_sig_65;

// power-on initialization
initial begin
#0 ch_cnt = 32'b00000000000000000000000000000000;
#0 ch_cycle = 32'b00000000000000000000000000000000;
#0 ch_No = 32'b00000000000000000000000000000000;
#0 output_r = 1'b0;
#0 ap_CS_fsm = 7'b1;
#0 ap_reg_ppiten_pp0_it1 = 1'b0;
#0 ap_reg_ppiten_pp0_it0 = 1'b0;
#0 ap_reg_ioackin_muao_stream_V_data_V_TREADY = 1'b0;
end

mua_reorder_buf_V #(
    .DataWidth( 32 ),
    .AddressRange( 160 ),
    .AddressWidth( 8 ))
buf_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(buf_V_address0),
    .ce0(buf_V_ce0),
    .we0(buf_V_we0),
    .d0(muar_stream_V_data_V_dout),
    .q0(buf_V_q0)
);

mua_reorder_srem_32ns_4ns_4_36_seq #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 4 ))
mua_reorder_srem_32ns_4ns_4_36_seq_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_152_ap_start),
    .done(grp_fu_152_ap_done),
    .din0(ch_cnt),
    .din1(grp_fu_152_p1),
    .ce(1'b1),
    .dout(grp_fu_152_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_muao_stream_V_data_V_TREADY <= 1'b0;
    end else begin
        if (ap_sig_65) begin
            if (~((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond_reg_341) & (1'b0 == ap_sig_ioackin_muao_stream_V_data_V_TREADY))) begin
                ap_reg_ioackin_muao_stream_V_data_V_TREADY <= 1'b0;
            end else if ((1'b1 == muao_stream_V_data_V_TREADY)) begin
                ap_reg_ioackin_muao_stream_V_data_V_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond_reg_341) & (1'b0 == ap_sig_ioackin_muao_stream_V_data_V_TREADY)) & ~(1'b0 == exitcond_fu_259_p2))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~(1'b0 == p_output_load_fu_242_p2))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond_reg_341) & (1'b0 == ap_sig_ioackin_muao_stream_V_data_V_TREADY)) & (1'b0 == exitcond_fu_259_p2))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b1;
        end else if ((((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~(1'b0 == p_output_load_fu_242_p2)) | ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond_reg_341) & (1'b0 == ap_sig_ioackin_muao_stream_V_data_V_TREADY)) & ~(1'b0 == exitcond_fu_259_p2)))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ch_No <= ap_const_lv32_0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(muar_stream_V_data_V_empty_n == 1'b0))) begin
            ch_No <= p_ch_No_new_fu_202_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ch_cnt <= ap_const_lv32_0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
            ch_cnt <= p_tmp_8_fu_225_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ch_cycle <= ap_const_lv32_0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~(1'b0 == p_ch_cycle_flag_fu_231_p2))) begin
            ch_cycle <= p_ch_cycle_new_fu_235_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        output_r <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st8_fsm_6) & ~(1'b0 == output_flag_1_phi_fu_128_p4))) begin
            output_r <= output_new_1_reg_135;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~(1'b0 == p_output_load_fu_242_p2))) begin
        k_reg_113 <= ap_const_lv8_0;
    end else if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond_reg_341) & (1'b0 == ap_sig_ioackin_muao_stream_V_data_V_TREADY)) & (1'b0 == exitcond_fu_259_p2))) begin
        k_reg_113 <= k_1_fu_265_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond_reg_341) & (1'b0 == ap_sig_ioackin_muao_stream_V_data_V_TREADY)) & ~(1'b0 == exitcond_fu_259_p2))) begin
        output_flag_1_reg_124 <= 1'b1;
    end else if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & (1'b0 == p_output_load_fu_242_p2))) begin
        output_flag_1_reg_124 <= tmp_9_reg_325;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond_reg_341) & (1'b0 == ap_sig_ioackin_muao_stream_V_data_V_TREADY)) & ~(1'b0 == exitcond_fu_259_p2))) begin
        output_new_1_reg_135 <= 1'b0;
    end else if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & (1'b0 == p_output_load_fu_242_p2))) begin
        output_new_1_reg_135 <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond_reg_341) & (1'b0 == ap_sig_ioackin_muao_stream_V_data_V_TREADY)))) begin
        exitcond_reg_341 <= exitcond_fu_259_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == grp_fu_152_ap_done))) begin
        tmp_2_reg_288 <= grp_fu_152_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        tmp_3_reg_293 <= tmp_3_fu_161_p2;
        tmp_5_reg_299 <= tmp_5_fu_171_p2;
        tmp_8_reg_304 <= tmp_8_fu_177_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(muar_stream_V_data_V_empty_n == 1'b0))) begin
        tmp_9_reg_325 <= tmp_9_fu_197_p2;
    end
end

always @ (*) begin
    if (ap_sig_55) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_73) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_82) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_95) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_47) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_119) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_171) begin
        ap_sig_cseq_ST_st8_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_muao_stream_V_data_V_TREADY)) begin
        ap_sig_ioackin_muao_stream_V_data_V_TREADY = muao_stream_V_data_V_TREADY;
    end else begin
        ap_sig_ioackin_muao_stream_V_data_V_TREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        buf_V_address0 = tmp_7_fu_192_p1;
    end else if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp0_it0))) begin
        buf_V_address0 = tmp_s_fu_271_p1;
    end else begin
        buf_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(muar_stream_V_data_V_empty_n == 1'b0)) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4) | ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond_reg_341) & (1'b0 == ap_sig_ioackin_muao_stream_V_data_V_TREADY))))) begin
        buf_V_ce0 = 1'b1;
    end else begin
        buf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(muar_stream_V_data_V_empty_n == 1'b0))) begin
        buf_V_we0 = 1'b1;
    end else begin
        buf_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        grp_fu_152_ap_start = 1'b1;
    end else begin
        grp_fu_152_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond_reg_341))) begin
        muao_stream_V_data_V_TDATA_blk_n = muao_stream_V_data_V_TREADY;
    end else begin
        muao_stream_V_data_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond_reg_341) & (1'b0 == ap_reg_ioackin_muao_stream_V_data_V_TREADY))) begin
        muao_stream_V_data_V_TVALID = 1'b1;
    end else begin
        muao_stream_V_data_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        muar_stream_V_data_V_blk_n = muar_stream_V_data_V_empty_n;
    end else begin
        muar_stream_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(muar_stream_V_data_V_empty_n == 1'b0))) begin
        muar_stream_V_data_V_read = 1'b1;
    end else begin
        muar_stream_V_data_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        ap_ST_st2_fsm_1 : begin
            if (~(1'b0 == grp_fu_152_ap_done)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : begin
            if (~(muar_stream_V_data_V_empty_n == 1'b0)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st5_fsm_4 : begin
            if ((1'b0 == p_output_load_fu_242_p2)) begin
                ap_NS_fsm = ap_ST_st8_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_5;
            end
        end
        ap_ST_pp0_stg0_fsm_5 : begin
            if (~((1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond_reg_341) & (1'b0 == ap_sig_ioackin_muao_stream_V_data_V_TREADY)) & ~(1'b0 == exitcond_fu_259_p2))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_5;
            end else if (((1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond_reg_341) & (1'b0 == ap_sig_ioackin_muao_stream_V_data_V_TREADY)) & ~(1'b0 == exitcond_fu_259_p2))) begin
                ap_NS_fsm = ap_ST_st8_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_5;
            end
        end
        ap_ST_st8_fsm_6 : begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

always @ (*) begin
    ap_sig_119 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_171 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_47 = (ap_CS_fsm[ap_const_lv32_3] == 1'b1);
end

always @ (*) begin
    ap_sig_55 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_65 = ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_5) & (1'b1 == ap_reg_ppiten_pp0_it1) & (1'b0 == exitcond_reg_341));
end

always @ (*) begin
    ap_sig_73 = (1'b1 == ap_CS_fsm[ap_const_lv32_0]);
end

always @ (*) begin
    ap_sig_82 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_95 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

assign ch_No_new_fu_186_p3 = ((tmp_3_reg_293[0:0] === 1'b1) ? ch_cycle : tmp_5_reg_299);

assign exitcond_fu_259_p2 = ((k_reg_113 == ap_const_lv8_A0) ? 1'b1 : 1'b0);

assign grp_fu_152_p1 = ap_const_lv32_5;

assign k_1_fu_265_p2 = (k_reg_113 + ap_const_lv8_1);

assign muao_stream_V_data_V_TDATA = buf_V_q0;

assign output_flag_1_phi_fu_128_p4 = output_flag_1_reg_124;

assign p_ch_No_new_fu_202_p3 = ((tmp_9_fu_197_p2[0:0] === 1'b1) ? ap_const_lv32_0 : ch_No_new_fu_186_p3);

assign p_ch_cycle_flag_fu_231_p2 = (tmp_9_reg_325 | tmp_3_reg_293);

assign p_ch_cycle_new_fu_235_p3 = ((tmp_9_reg_325[0:0] === 1'b1) ? ap_const_lv32_0 : tmp_4_fu_216_p2);

assign p_output_load_fu_242_p2 = (output_r | tmp_9_reg_325);

assign p_tmp_8_fu_225_p3 = ((tmp_9_reg_325[0:0] === 1'b1) ? ap_const_lv32_0 : tmp_8_reg_304);

assign tmp_1_fu_158_p1 = tmp_2_reg_288[3:0];

assign tmp_3_fu_161_p2 = ((tmp_1_fu_158_p1 == ap_const_lv4_0) ? 1'b1 : 1'b0);

assign tmp_4_fu_216_p2 = (ap_const_lv32_1 + ch_cycle);

assign tmp_5_fu_171_p2 = (ap_const_lv32_20 + ch_No);

assign tmp_7_fu_192_p1 = $signed(ch_No_new_fu_186_p3);

assign tmp_8_fu_177_p2 = (ap_const_lv32_1 + ch_cnt);

assign tmp_9_fu_197_p2 = ((tmp_8_reg_304 == ap_const_lv32_A0) ? 1'b1 : 1'b0);

assign tmp_s_fu_271_p1 = k_reg_113;

endmodule //mua_reorder
