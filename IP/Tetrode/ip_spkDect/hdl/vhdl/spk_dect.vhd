-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.1
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity spk_dect is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    mua_stream_V_data_V_dout : IN STD_LOGIC_VECTOR (159 downto 0);
    mua_stream_V_data_V_empty_n : IN STD_LOGIC;
    mua_stream_V_data_V_read : OUT STD_LOGIC;
    muap_stream_TUSER : OUT STD_LOGIC_VECTOR (31 downto 0);
    muap_stream_TVALID : OUT STD_LOGIC;
    muap_stream_TREADY : IN STD_LOGIC;
    muap_stream_TID : OUT STD_LOGIC_VECTOR (7 downto 0);
    muap_stream_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    muap_stream_TDEST : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of spk_dect is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "spk_dect,hls_ip_2016_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k325tffg900-2,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.390000,HLS_SYN_LAT=18,HLS_SYN_TPT=none,HLS_SYN_MEM=5,HLS_SYN_DSP=0,HLS_SYN_FF=895,HLS_SYN_LUT=543}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (21 downto 0) := "0000000001000000000000";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (21 downto 0) := "0000000010000000000000";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (21 downto 0) := "0000000100000000000000";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (21 downto 0) := "0000001000000000000000";
    constant ap_ST_st17_fsm_16 : STD_LOGIC_VECTOR (21 downto 0) := "0000010000000000000000";
    constant ap_ST_st18_fsm_17 : STD_LOGIC_VECTOR (21 downto 0) := "0000100000000000000000";
    constant ap_ST_st19_fsm_18 : STD_LOGIC_VECTOR (21 downto 0) := "0001000000000000000000";
    constant ap_ST_st20_fsm_19 : STD_LOGIC_VECTOR (21 downto 0) := "0010000000000000000000";
    constant ap_ST_st21_fsm_20 : STD_LOGIC_VECTOR (21 downto 0) := "0100000000000000000000";
    constant ap_ST_st22_fsm_21 : STD_LOGIC_VECTOR (21 downto 0) := "1000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_true : BOOLEAN := true;
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_65 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100101";
    constant ap_const_lv32_67 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv9_A0 : STD_LOGIC_VECTOR (8 downto 0) := "010100000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_FB1E0000 : STD_LOGIC_VECTOR (31 downto 0) := "11111011000111100000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv8_9F : STD_LOGIC_VECTOR (7 downto 0) := "10011111";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_39 : BOOLEAN;
    signal muap_stream_V_user_V_1_vld_in : STD_LOGIC;
    signal muap_stream_V_user_V_1_ack_in : STD_LOGIC;
    signal muap_stream_V_user_V_1_ack_out : STD_LOGIC;
    signal muap_stream_V_user_V_1_data_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal muap_stream_V_user_V_1_sRdy : STD_LOGIC;
    signal muap_stream_V_user_V_1_mVld : STD_LOGIC := '0';
    signal muap_stream_V_user_V_1_areset_d : STD_LOGIC;
    signal muap_stream_V_id_V_1_vld_in : STD_LOGIC;
    signal muap_stream_V_id_V_1_ack_out : STD_LOGIC;
    signal muap_stream_V_id_V_1_data_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal muap_stream_V_id_V_1_sRdy : STD_LOGIC;
    signal muap_stream_V_id_V_1_mVld : STD_LOGIC := '0';
    signal muap_stream_V_id_V_1_areset_d : STD_LOGIC;
    signal muap_stream_V_data_V_1_vld_in : STD_LOGIC;
    signal muap_stream_V_data_V_1_ack_out : STD_LOGIC;
    signal muap_stream_V_data_V_1_data_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal muap_stream_V_data_V_1_sRdy : STD_LOGIC;
    signal muap_stream_V_data_V_1_mVld : STD_LOGIC := '0';
    signal muap_stream_V_data_V_1_areset_d : STD_LOGIC;
    signal muap_stream_V_dest_V_1_vld_in : STD_LOGIC;
    signal muap_stream_V_dest_V_1_ack_out : STD_LOGIC;
    signal muap_stream_V_dest_V_1_data_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal muap_stream_V_dest_V_1_sRdy : STD_LOGIC;
    signal muap_stream_V_dest_V_1_mVld : STD_LOGIC := '0';
    signal muap_stream_V_dest_V_1_areset_d : STD_LOGIC;
    signal buf_2d_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal buf_2d_V_ce0 : STD_LOGIC;
    signal buf_2d_V_we0 : STD_LOGIC;
    signal buf_2d_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_2d_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_2d_V_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal buf_2d_V_ce1 : STD_LOGIC;
    signal buf_2d_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal start_cnt_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal start_cnt_ce0 : STD_LOGIC;
    signal start_cnt_we0 : STD_LOGIC;
    signal start_cnt_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal start_cnt_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal start_cnt_ce1 : STD_LOGIC;
    signal start_cnt_we1 : STD_LOGIC;
    signal start_cnt_q1 : STD_LOGIC_VECTOR (0 downto 0);
    signal cnt_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal cnt_V_ce0 : STD_LOGIC;
    signal cnt_V_we0 : STD_LOGIC;
    signal cnt_V_d0 : STD_LOGIC_VECTOR (2 downto 0);
    signal cnt_V_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal syn_large_amp_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal syn_large_amp_ce0 : STD_LOGIC;
    signal syn_large_amp_we0 : STD_LOGIC;
    signal syn_large_amp_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal syn_large_amp_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Mn_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal Mn_V_ce0 : STD_LOGIC;
    signal Mn_V_we0 : STD_LOGIC;
    signal Mn_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Mn_V_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal Mn_V_ce1 : STD_LOGIC;
    signal Mn_V_we1 : STD_LOGIC;
    signal Mn_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal state_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal state_ce0 : STD_LOGIC;
    signal state_we0 : STD_LOGIC;
    signal state_d0 : STD_LOGIC_VECTOR (1 downto 0);
    signal state_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal mua_stream_V_data_V_blk_n : STD_LOGIC;
    signal muap_stream_TDATA_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_st21_fsm_20 : STD_LOGIC;
    signal ap_sig_219 : BOOLEAN;
    signal tmp_24_fu_1024_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st22_fsm_21 : STD_LOGIC;
    signal ap_sig_230 : BOOLEAN;
    signal tmp_24_reg_1441 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_468 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_242 : BOOLEAN;
    signal ap_sig_cseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_249 : BOOLEAN;
    signal reg_472 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st11_fsm_10 : STD_LOGIC;
    signal ap_sig_258 : BOOLEAN;
    signal ap_sig_cseq_ST_st12_fsm_11 : STD_LOGIC;
    signal ap_sig_266 : BOOLEAN;
    signal reg_476 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st16_fsm_15 : STD_LOGIC;
    signal ap_sig_275 : BOOLEAN;
    signal reg_480 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_V_1_reg_1045 : STD_LOGIC_VECTOR (159 downto 0);
    signal ap_sig_283 : BOOLEAN;
    signal t_V_reg_1051 : STD_LOGIC_VECTOR (31 downto 0);
    signal ch_V_fu_509_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ch_V_reg_1057 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_s_reg_1064 : STD_LOGIC_VECTOR (30 downto 0);
    signal loc_V_reg_1069 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Repl2_s_reg_1077 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_1_reg_1083 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_2_reg_1089 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Repl2_3_reg_1095 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_reg_1101 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_587_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_reg_1114 : STD_LOGIC_VECTOR (63 downto 0);
    signal start_cnt_addr_reg_1121 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_s_4_fu_592_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_4_reg_1127 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_315 : BOOLEAN;
    signal tmp_3_cast_fu_600_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_3_cast_reg_1136 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_25_cast_fu_621_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_25_cast_reg_1141 : STD_LOGIC_VECTOR (3 downto 0);
    signal start_cnt_load_reg_1146 : STD_LOGIC_VECTOR (0 downto 0);
    signal cnt_V_addr_reg_1150 : STD_LOGIC_VECTOR (7 downto 0);
    signal cnt_V_load_reg_1155 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_333 : BOOLEAN;
    signal tmp_6_fu_634_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_1160 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_342 : BOOLEAN;
    signal tmp_9_fu_650_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_1164 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_351 : BOOLEAN;
    signal syn_large_amp_addr_reg_1168 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_2_fu_670_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_reg_1173 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_365 : BOOLEAN;
    signal tmp_28_cast_fu_676_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_28_cast_reg_1178 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_374 : BOOLEAN;
    signal ap_sig_cseq_ST_st9_fsm_8 : STD_LOGIC;
    signal ap_sig_383 : BOOLEAN;
    signal buf_2d_V_load_reg_1222 : STD_LOGIC_VECTOR (31 downto 0);
    signal start_cnt_load_1_reg_1241 : STD_LOGIC_VECTOR (0 downto 0);
    signal start_cnt_load_2_reg_1251 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_776_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_28_reg_1271 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_10_fu_781_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_1286 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_demorgan_fu_803_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_demorgan_reg_1292 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_815_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_reg_1297 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_494_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_1_reg_1304 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_2d_V_load_2_reg_1309 : STD_LOGIC_VECTOR (31 downto 0);
    signal start_cnt_load_3_reg_1314 : STD_LOGIC_VECTOR (0 downto 0);
    signal start_cnt_load_4_reg_1324 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp2_fu_843_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp2_reg_1329 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_484_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_2_reg_1334 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_2_fu_870_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_2_reg_1339 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_3_reg_1344 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_885_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_1349 : STD_LOGIC_VECTOR (0 downto 0);
    signal state_addr_reg_1354 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp9_fu_947_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp9_reg_1359 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st13_fsm_12 : STD_LOGIC;
    signal ap_sig_445 : BOOLEAN;
    signal state_load_reg_1364 : STD_LOGIC_VECTOR (1 downto 0);
    signal syn_large_amp_addr_2_reg_1368 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_cseq_ST_st14_fsm_13 : STD_LOGIC;
    signal ap_sig_455 : BOOLEAN;
    signal syn_large_amp_addr_3_reg_1373 : STD_LOGIC_VECTOR (3 downto 0);
    signal syn_large_amp_addr_4_reg_1378 : STD_LOGIC_VECTOR (3 downto 0);
    signal syn_large_amp_addr_5_reg_1383 : STD_LOGIC_VECTOR (3 downto 0);
    signal syn_large_amp_addr_6_reg_1388 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_1_fu_997_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_446_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal if_pivotal_1_3_fu_993_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_reg_1419 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_1010_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_reg_1424 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st15_fsm_14 : STD_LOGIC;
    signal ap_sig_492 : BOOLEAN;
    signal Mn_V_addr_1_reg_1428 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_23_fu_1019_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_reg_1437 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st17_fsm_16 : STD_LOGIC;
    signal ap_sig_503 : BOOLEAN;
    signal tmp_user_V_fu_1029_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_V_reg_408 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_cast_fu_616_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_cast_fu_665_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_cast_fu_687_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_35_cast_fu_709_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_36_cast_fu_727_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_fu_714_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_14_1_fu_732_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_37_cast_fu_745_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_38_cast_fu_763_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_14_2_fu_750_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_14_3_fu_768_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_39_cast_fu_827_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_cast_fu_953_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_31_cast_fu_961_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_32_cast_fu_969_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_33_cast_fu_977_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_34_cast_fu_985_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_572 : BOOLEAN;
    signal tmp_5_fu_628_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_cseq_ST_st18_fsm_17 : STD_LOGIC;
    signal ap_sig_619 : BOOLEAN;
    signal ap_sig_cseq_ST_st19_fsm_18 : STD_LOGIC;
    signal ap_sig_628 : BOOLEAN;
    signal ap_sig_cseq_ST_st20_fsm_19 : STD_LOGIC;
    signal ap_sig_637 : BOOLEAN;
    signal tmp_22_fu_1014_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal storemerge_fu_1006_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_442_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_452_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_456_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_cast_fu_603_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_4_fu_610_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_8_cast_fu_647_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal r_V_fu_640_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_fu_429_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_cast_fu_656_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_660_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_1_fu_683_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_7_cast_fu_699_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_30_cast8_fu_692_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_20_fu_703_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_8_cast7_fu_719_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_25_fu_722_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_14_1_cast_fu_737_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_26_fu_740_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_14_2_cast_fu_755_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_27_fu_758_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_14_3_cast_fu_773_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_489_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_786_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_fu_809_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_fu_792_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_demorgan_fu_798_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_821_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp39_demorgan_fu_831_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_837_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond5_fu_849_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_859_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_sel_tmp_fu_864_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp3_fu_874_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_1_fu_854_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp4_fu_879_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond6_fu_890_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond7_fu_904_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_914_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_899_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp5_fu_925_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_2_fu_894_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_sel_tmp1_fu_919_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp7_fu_936_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_3_fu_909_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp8_fu_941_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp6_fu_930_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (21 downto 0);

    component spk_dect_buf_2d_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component spk_dect_start_cnt IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (0 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component spk_dect_cnt_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (2 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component spk_dect_syn_large_amp IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component spk_dect_Mn_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component spk_dect_state IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (1 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;



begin
    buf_2d_V_U : component spk_dect_buf_2d_V
    generic map (
        DataWidth => 32,
        AddressRange => 320,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => buf_2d_V_address0,
        ce0 => buf_2d_V_ce0,
        we0 => buf_2d_V_we0,
        d0 => buf_2d_V_d0,
        q0 => buf_2d_V_q0,
        address1 => buf_2d_V_address1,
        ce1 => buf_2d_V_ce1,
        q1 => buf_2d_V_q1);

    start_cnt_U : component spk_dect_start_cnt
    generic map (
        DataWidth => 1,
        AddressRange => 160,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => start_cnt_address0,
        ce0 => start_cnt_ce0,
        we0 => start_cnt_we0,
        d0 => ap_const_lv1_0,
        q0 => start_cnt_q0,
        address1 => start_cnt_address1,
        ce1 => start_cnt_ce1,
        we1 => start_cnt_we1,
        d1 => ap_const_lv1_1,
        q1 => start_cnt_q1);

    cnt_V_U : component spk_dect_cnt_V
    generic map (
        DataWidth => 3,
        AddressRange => 160,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => cnt_V_address0,
        ce0 => cnt_V_ce0,
        we0 => cnt_V_we0,
        d0 => cnt_V_d0,
        q0 => cnt_V_q0);

    syn_large_amp_U : component spk_dect_syn_large_amp
    generic map (
        DataWidth => 32,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => syn_large_amp_address0,
        ce0 => syn_large_amp_ce0,
        we0 => syn_large_amp_we0,
        d0 => syn_large_amp_d0,
        q0 => syn_large_amp_q0);

    Mn_V_U : component spk_dect_Mn_V
    generic map (
        DataWidth => 32,
        AddressRange => 160,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => Mn_V_address0,
        ce0 => Mn_V_ce0,
        we0 => Mn_V_we0,
        d0 => ap_const_lv32_0,
        q0 => Mn_V_q0,
        address1 => Mn_V_address1,
        ce1 => Mn_V_ce1,
        we1 => Mn_V_we1,
        d1 => p_Result_s_4_reg_1127,
        q1 => Mn_V_q1);

    state_U : component spk_dect_state
    generic map (
        DataWidth => 2,
        AddressRange => 160,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => state_address0,
        ce0 => state_ce0,
        we0 => state_we0,
        d0 => state_d0,
        q0 => state_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    muap_stream_V_data_V_1_mVld_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                muap_stream_V_data_V_1_mVld <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = muap_stream_V_data_V_1_vld_in)) then 
                    muap_stream_V_data_V_1_mVld <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = muap_stream_V_data_V_1_ack_out)) then 
                    muap_stream_V_data_V_1_mVld <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    muap_stream_V_dest_V_1_mVld_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                muap_stream_V_dest_V_1_mVld <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = muap_stream_V_dest_V_1_vld_in)) then 
                    muap_stream_V_dest_V_1_mVld <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = muap_stream_V_dest_V_1_ack_out)) then 
                    muap_stream_V_dest_V_1_mVld <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    muap_stream_V_id_V_1_mVld_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                muap_stream_V_id_V_1_mVld <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = muap_stream_V_id_V_1_vld_in)) then 
                    muap_stream_V_id_V_1_mVld <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = muap_stream_V_id_V_1_ack_out)) then 
                    muap_stream_V_id_V_1_mVld <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    muap_stream_V_user_V_1_mVld_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                muap_stream_V_user_V_1_mVld <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = muap_stream_V_user_V_1_vld_in)) then 
                    muap_stream_V_user_V_1_mVld <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = muap_stream_V_user_V_1_ack_out)) then 
                    muap_stream_V_user_V_1_mVld <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    tmp_data_V_reg_408_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (state_load_reg_1364 = ap_const_lv2_1) and (ap_const_lv1_0 = grp_fu_446_p2) and (ap_const_lv1_0 = grp_fu_462_p2) and not((ap_const_lv1_0 = if_pivotal_1_3_fu_993_p2)))) then 
                tmp_data_V_reg_408 <= p_Result_1_fu_997_p4;
            elsif ((((state_load_reg_1364 = ap_const_lv2_0) and (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (state_load_reg_1364 = ap_const_lv2_1) and not((ap_const_lv1_0 = grp_fu_446_p2))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (state_load_reg_1364 = ap_const_lv2_3)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (state_load_reg_1364 = ap_const_lv2_1) and (ap_const_lv1_0 = grp_fu_446_p2) and (ap_const_lv1_0 = grp_fu_462_p2) and (ap_const_lv1_0 = if_pivotal_1_3_fu_993_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (state_load_reg_1364 = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (state_load_reg_1364 = ap_const_lv2_1) and (ap_const_lv1_0 = grp_fu_446_p2) and not((ap_const_lv1_0 = grp_fu_462_p2))))) then 
                tmp_data_V_reg_408 <= buf_2d_V_load_reg_1222;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then
                Mn_V_addr_1_reg_1428 <= tmp_3_reg_1114(8 - 1 downto 0);
                tmp_21_reg_1424 <= tmp_21_fu_1010_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then
                buf_2d_V_load_2_reg_1309 <= buf_2d_V_q0;
                sel_tmp3_demorgan_reg_1292 <= sel_tmp3_demorgan_fu_803_p2;
                sel_tmp6_reg_1297 <= sel_tmp6_fu_815_p2;
                start_cnt_load_3_reg_1314 <= start_cnt_q1;
                start_cnt_load_4_reg_1324 <= start_cnt_q0;
                tmp2_reg_1329 <= tmp2_fu_843_p2;
                tmp_10_reg_1286 <= tmp_10_fu_781_p2;
                tmp_24_1_reg_1304 <= grp_fu_494_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then
                buf_2d_V_load_reg_1222 <= buf_2d_V_q0;
                start_cnt_load_1_reg_1241 <= start_cnt_q0;
                start_cnt_load_2_reg_1251 <= start_cnt_q1;
                tmp_28_reg_1271 <= tmp_28_fu_776_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_283))) then
                ch_V_reg_1057 <= mua_stream_V_data_V_dout(103 downto 96);
                j_reg_1101 <= mua_stream_V_data_V_dout(128 downto 128);
                loc_V_reg_1069 <= mua_stream_V_data_V_dout(63 downto 32);
                p_Repl2_1_reg_1083 <= mua_stream_V_data_V_dout(79 downto 72);
                p_Repl2_2_reg_1089 <= mua_stream_V_data_V_dout(87 downto 80);
                p_Repl2_3_reg_1095 <= mua_stream_V_data_V_dout(95 downto 88);
                p_Repl2_s_reg_1077 <= mua_stream_V_data_V_dout(71 downto 64);
                p_Result_s_reg_1064 <= mua_stream_V_data_V_dout(31 downto 1);
                start_cnt_addr_reg_1121 <= tmp_3_fu_587_p1(8 - 1 downto 0);
                t_V_reg_1051 <= mua_stream_V_data_V_dout(159 downto 128);
                    tmp_3_reg_1114(7 downto 0) <= tmp_3_fu_587_p1(7 downto 0);
                tmp_data_V_1_reg_1045 <= mua_stream_V_data_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((start_cnt_q0 = ap_const_lv1_0)))) then
                cnt_V_addr_reg_1150 <= tmp_3_reg_1114(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then
                cnt_V_load_reg_1155 <= cnt_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_const_logic_1)) then
                muap_stream_V_data_V_1_areset_d <= ap_rst_n_inv;
                muap_stream_V_dest_V_1_areset_d <= ap_rst_n_inv;
                muap_stream_V_id_V_1_areset_d <= ap_rst_n_inv;
                muap_stream_V_user_V_1_areset_d <= ap_rst_n_inv;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = muap_stream_V_data_V_1_vld_in) and (ap_const_logic_1 = muap_stream_V_data_V_1_sRdy))) then
                muap_stream_V_data_V_1_data_reg <= tmp_data_V_reg_408;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = muap_stream_V_dest_V_1_vld_in) and (ap_const_logic_1 = muap_stream_V_dest_V_1_sRdy))) then
                muap_stream_V_dest_V_1_data_reg <= tmp_data_V_1_reg_1045(95 downto 64);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = muap_stream_V_id_V_1_vld_in) and (ap_const_logic_1 = muap_stream_V_id_V_1_sRdy))) then
                muap_stream_V_id_V_1_data_reg <= ch_V_reg_1057;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = muap_stream_V_user_V_1_vld_in) and (ap_const_logic_1 = muap_stream_V_user_V_1_sRdy))) then
                muap_stream_V_user_V_1_data_reg <= tmp_user_V_fu_1029_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                    p_Result_s_4_reg_1127(31 downto 1) <= p_Result_s_4_fu_592_p3(31 downto 1);
                start_cnt_load_reg_1146 <= start_cnt_q0;
                    tmp_25_cast_reg_1141(0) <= tmp_25_cast_fu_621_p3(0);    tmp_25_cast_reg_1141(2) <= tmp_25_cast_fu_621_p3(2);
                    tmp_3_cast_reg_1136(7 downto 0) <= tmp_3_cast_fu_600_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then
                reg_468 <= syn_large_amp_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11))) then
                reg_472 <= buf_2d_V_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or (ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15))) then
                reg_476 <= Mn_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then
                reg_480 <= Mn_V_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then
                state_addr_reg_1354 <= tmp_3_reg_1114(8 - 1 downto 0);
                tmp_24_2_reg_1334 <= grp_fu_484_p2;
                tmp_24_3_reg_1344 <= grp_fu_494_p2;
                tmp_25_2_reg_1339 <= tmp_25_2_fu_870_p2;
                tmp_reg_1349 <= tmp_fu_885_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then
                state_load_reg_1364 <= state_q0;
                tmp9_reg_1359 <= tmp9_fu_947_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then
                    syn_large_amp_addr_2_reg_1368(0) <= tmp_30_cast_fu_953_p3(4 - 1 downto 0)(0);    syn_large_amp_addr_2_reg_1368(2) <= tmp_30_cast_fu_953_p3(4 - 1 downto 0)(2);
                    syn_large_amp_addr_3_reg_1373(2 downto 0) <= tmp_31_cast_fu_961_p3(4 - 1 downto 0)(2 downto 0);
                    syn_large_amp_addr_4_reg_1378(0) <= tmp_32_cast_fu_969_p3(4 - 1 downto 0)(0);    syn_large_amp_addr_4_reg_1378(2) <= tmp_32_cast_fu_969_p3(4 - 1 downto 0)(2);
                    syn_large_amp_addr_5_reg_1383(1 downto 0) <= tmp_33_cast_fu_977_p3(4 - 1 downto 0)(1 downto 0);    syn_large_amp_addr_5_reg_1383(3) <= tmp_33_cast_fu_977_p3(4 - 1 downto 0)(3);
                    syn_large_amp_addr_6_reg_1388(0) <= tmp_34_cast_fu_985_p3(4 - 1 downto 0)(0);    syn_large_amp_addr_6_reg_1388(3 downto 2) <= tmp_34_cast_fu_985_p3(4 - 1 downto 0)(3 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((ap_const_lv1_0 = tmp_9_fu_650_p2)))) then
                syn_large_amp_addr_reg_1168 <= tmp_27_cast_fu_665_p1(4 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (state_load_reg_1364 = ap_const_lv2_0))) then
                tmp_14_reg_1419 <= grp_fu_438_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then
                tmp_23_reg_1437 <= tmp_23_fu_1019_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) and not(((tmp_24_fu_1024_p2 = ap_const_lv1_0) and (ap_const_logic_0 = muap_stream_V_user_V_1_ack_in))))) then
                tmp_24_reg_1441 <= tmp_24_fu_1024_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then
                    tmp_28_cast_reg_1178(5) <= tmp_28_cast_fu_676_p3(5);    tmp_28_cast_reg_1178(7) <= tmp_28_cast_fu_676_p3(7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then
                tmp_2_reg_1173 <= tmp_2_fu_670_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then
                tmp_6_reg_1160 <= tmp_6_fu_634_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then
                tmp_9_reg_1164 <= tmp_9_fu_650_p2;
            end if;
        end if;
    end process;
    tmp_3_reg_1114(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    p_Result_s_4_reg_1127(0) <= '0';
    tmp_3_cast_reg_1136(8) <= '0';
    tmp_25_cast_reg_1141(1) <= '0';
    tmp_25_cast_reg_1141(3) <= '0';
    tmp_28_cast_reg_1178(4 downto 0) <= "00000";
    tmp_28_cast_reg_1178(6 downto 6) <= "0";
    tmp_28_cast_reg_1178(8) <= '0';
    syn_large_amp_addr_2_reg_1368(1) <= '0';
    syn_large_amp_addr_2_reg_1368(3) <= '0';
    syn_large_amp_addr_3_reg_1373(3) <= '0';
    syn_large_amp_addr_4_reg_1378(1) <= '1';
    syn_large_amp_addr_4_reg_1378(3) <= '0';
    syn_large_amp_addr_5_reg_1383(2) <= '0';
    syn_large_amp_addr_6_reg_1388(1) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, muap_stream_V_user_V_1_ack_in, start_cnt_q0, tmp_24_fu_1024_p2, tmp_24_reg_1441, ap_sig_283, tmp_9_fu_650_p2, state_load_reg_1364, tmp_21_fu_1010_p2, tmp_23_fu_1019_p2, ap_sig_572)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_283)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if ((start_cnt_q0 = ap_const_lv1_0)) then
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st5_fsm_4 => 
                if ((ap_const_lv1_0 = tmp_9_fu_650_p2)) then
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                else
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                end if;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when ap_ST_st7_fsm_6 => 
                ap_NS_fsm <= ap_ST_st8_fsm_7;
            when ap_ST_st8_fsm_7 => 
                ap_NS_fsm <= ap_ST_st9_fsm_8;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st11_fsm_10 => 
                ap_NS_fsm <= ap_ST_st12_fsm_11;
            when ap_ST_st12_fsm_11 => 
                ap_NS_fsm <= ap_ST_st13_fsm_12;
            when ap_ST_st13_fsm_12 => 
                ap_NS_fsm <= ap_ST_st14_fsm_13;
            when ap_ST_st14_fsm_13 => 
                ap_NS_fsm <= ap_ST_st15_fsm_14;
            when ap_ST_st15_fsm_14 => 
                if ((((state_load_reg_1364 = ap_const_lv2_0) and (ap_const_lv1_0 = tmp_21_fu_1010_p2)) or ((state_load_reg_1364 = ap_const_lv2_1) and (ap_const_lv1_0 = tmp_21_fu_1010_p2)) or ((state_load_reg_1364 = ap_const_lv2_2) and (ap_const_lv1_0 = tmp_21_fu_1010_p2)) or ((state_load_reg_1364 = ap_const_lv2_3) and (ap_const_lv1_0 = tmp_21_fu_1010_p2)))) then
                    ap_NS_fsm <= ap_ST_st17_fsm_16;
                else
                    ap_NS_fsm <= ap_ST_st16_fsm_15;
                end if;
            when ap_ST_st16_fsm_15 => 
                ap_NS_fsm <= ap_ST_st17_fsm_16;
            when ap_ST_st17_fsm_16 => 
                if ((ap_const_lv1_0 = tmp_23_fu_1019_p2)) then
                    ap_NS_fsm <= ap_ST_st21_fsm_20;
                else
                    ap_NS_fsm <= ap_ST_st18_fsm_17;
                end if;
            when ap_ST_st18_fsm_17 => 
                ap_NS_fsm <= ap_ST_st19_fsm_18;
            when ap_ST_st19_fsm_18 => 
                ap_NS_fsm <= ap_ST_st20_fsm_19;
            when ap_ST_st20_fsm_19 => 
                ap_NS_fsm <= ap_ST_st21_fsm_20;
            when ap_ST_st21_fsm_20 => 
                if (not(((tmp_24_fu_1024_p2 = ap_const_lv1_0) and (ap_const_logic_0 = muap_stream_V_user_V_1_ack_in)))) then
                    ap_NS_fsm <= ap_ST_st22_fsm_21;
                else
                    ap_NS_fsm <= ap_ST_st21_fsm_20;
                end if;
            when ap_ST_st22_fsm_21 => 
                if (not((ap_sig_572 or ((ap_const_lv1_0 = tmp_24_reg_1441) and (ap_const_logic_0 = muap_stream_V_user_V_1_ack_in))))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st22_fsm_21;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    Mn_V_address0_assign_proc : process(ap_sig_cseq_ST_st10_fsm_9, tmp_3_reg_1114, ap_sig_cseq_ST_st9_fsm_8, state_load_reg_1364, tmp_21_fu_1010_p2, ap_sig_cseq_ST_st15_fsm_14, tmp_8_fu_714_p1, tmp_14_2_fu_750_p1)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and (((state_load_reg_1364 = ap_const_lv2_0) and (ap_const_lv1_0 = tmp_21_fu_1010_p2)) or ((state_load_reg_1364 = ap_const_lv2_1) and (ap_const_lv1_0 = tmp_21_fu_1010_p2)) or ((state_load_reg_1364 = ap_const_lv2_2) and (ap_const_lv1_0 = tmp_21_fu_1010_p2)) or ((state_load_reg_1364 = ap_const_lv2_3) and (ap_const_lv1_0 = tmp_21_fu_1010_p2)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and (((state_load_reg_1364 = ap_const_lv2_0) and not((ap_const_lv1_0 = tmp_21_fu_1010_p2))) or ((state_load_reg_1364 = ap_const_lv2_1) and not((ap_const_lv1_0 = tmp_21_fu_1010_p2))) or ((state_load_reg_1364 = ap_const_lv2_2) and not((ap_const_lv1_0 = tmp_21_fu_1010_p2))) or ((state_load_reg_1364 = ap_const_lv2_3) and not((ap_const_lv1_0 = tmp_21_fu_1010_p2))))))) then 
            Mn_V_address0 <= tmp_3_reg_1114(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            Mn_V_address0 <= tmp_14_2_fu_750_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            Mn_V_address0 <= tmp_8_fu_714_p1(8 - 1 downto 0);
        else 
            Mn_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    Mn_V_address1_assign_proc : process(ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st9_fsm_8, Mn_V_addr_1_reg_1428, ap_sig_cseq_ST_st17_fsm_16, tmp_14_1_fu_732_p1, tmp_14_3_fu_768_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            Mn_V_address1 <= Mn_V_addr_1_reg_1428;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            Mn_V_address1 <= tmp_14_3_fu_768_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            Mn_V_address1 <= tmp_14_1_fu_732_p1(8 - 1 downto 0);
        else 
            Mn_V_address1 <= "XXXXXXXX";
        end if; 
    end process;


    Mn_V_ce0_assign_proc : process(ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st9_fsm_8, state_load_reg_1364, tmp_21_fu_1010_p2, ap_sig_cseq_ST_st15_fsm_14)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and (((state_load_reg_1364 = ap_const_lv2_0) and (ap_const_lv1_0 = tmp_21_fu_1010_p2)) or ((state_load_reg_1364 = ap_const_lv2_1) and (ap_const_lv1_0 = tmp_21_fu_1010_p2)) or ((state_load_reg_1364 = ap_const_lv2_2) and (ap_const_lv1_0 = tmp_21_fu_1010_p2)) or ((state_load_reg_1364 = ap_const_lv2_3) and (ap_const_lv1_0 = tmp_21_fu_1010_p2)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and (((state_load_reg_1364 = ap_const_lv2_0) and not((ap_const_lv1_0 = tmp_21_fu_1010_p2))) or ((state_load_reg_1364 = ap_const_lv2_1) and not((ap_const_lv1_0 = tmp_21_fu_1010_p2))) or ((state_load_reg_1364 = ap_const_lv2_2) and not((ap_const_lv1_0 = tmp_21_fu_1010_p2))) or ((state_load_reg_1364 = ap_const_lv2_3) and not((ap_const_lv1_0 = tmp_21_fu_1010_p2))))))) then 
            Mn_V_ce0 <= ap_const_logic_1;
        else 
            Mn_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Mn_V_ce1_assign_proc : process(ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st17_fsm_16)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16))) then 
            Mn_V_ce1 <= ap_const_logic_1;
        else 
            Mn_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    Mn_V_we0_assign_proc : process(state_load_reg_1364, tmp_21_fu_1010_p2, ap_sig_cseq_ST_st15_fsm_14)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and (((state_load_reg_1364 = ap_const_lv2_0) and (ap_const_lv1_0 = tmp_21_fu_1010_p2)) or ((state_load_reg_1364 = ap_const_lv2_1) and (ap_const_lv1_0 = tmp_21_fu_1010_p2)) or ((state_load_reg_1364 = ap_const_lv2_2) and (ap_const_lv1_0 = tmp_21_fu_1010_p2)) or ((state_load_reg_1364 = ap_const_lv2_3) and (ap_const_lv1_0 = tmp_21_fu_1010_p2)))))) then 
            Mn_V_we0 <= ap_const_logic_1;
        else 
            Mn_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Mn_V_we1_assign_proc : process(tmp_21_reg_1424, ap_sig_cseq_ST_st17_fsm_16, tmp_22_fu_1014_p2)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16) and not((ap_const_lv1_0 = tmp_21_reg_1424)) and not((ap_const_lv1_0 = tmp_22_fu_1014_p2))))) then 
            Mn_V_we1 <= ap_const_logic_1;
        else 
            Mn_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(muap_stream_V_user_V_1_ack_in, ap_sig_cseq_ST_st22_fsm_21, tmp_24_reg_1441, ap_sig_572)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21) and not((ap_sig_572 or ((ap_const_lv1_0 = tmp_24_reg_1441) and (ap_const_logic_0 = muap_stream_V_user_V_1_ack_in)))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(muap_stream_V_user_V_1_ack_in, ap_sig_cseq_ST_st22_fsm_21, tmp_24_reg_1441, ap_sig_572)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21) and not((ap_sig_572 or ((ap_const_lv1_0 = tmp_24_reg_1441) and (ap_const_logic_0 = muap_stream_V_user_V_1_ack_in)))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_219_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_219 <= (ap_const_lv1_1 = ap_CS_fsm(20 downto 20));
    end process;


    ap_sig_230_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_230 <= (ap_const_lv1_1 = ap_CS_fsm(21 downto 21));
    end process;


    ap_sig_242_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_242 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_249_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_249 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    ap_sig_258_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_258 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    ap_sig_266_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_266 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    ap_sig_275_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_275 <= (ap_const_lv1_1 = ap_CS_fsm(15 downto 15));
    end process;


    ap_sig_283_assign_proc : process(ap_start, mua_stream_V_data_V_empty_n)
    begin
                ap_sig_283 <= ((ap_start = ap_const_logic_0) or (mua_stream_V_data_V_empty_n = ap_const_logic_0));
    end process;


    ap_sig_315_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_315 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_333_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_333 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_342_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_342 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_351_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_351 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_365_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_365 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_374_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_374 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_383_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_383 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    ap_sig_39_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_39 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_445_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_445 <= (ap_const_lv1_1 = ap_CS_fsm(12 downto 12));
    end process;


    ap_sig_455_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_455 <= (ap_const_lv1_1 = ap_CS_fsm(13 downto 13));
    end process;


    ap_sig_492_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_492 <= (ap_const_lv1_1 = ap_CS_fsm(14 downto 14));
    end process;


    ap_sig_503_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_503 <= (ap_const_lv1_1 = ap_CS_fsm(16 downto 16));
    end process;


    ap_sig_572_assign_proc : process(muap_stream_V_user_V_1_sRdy, muap_stream_V_id_V_1_sRdy, muap_stream_V_data_V_1_sRdy, muap_stream_V_dest_V_1_sRdy)
    begin
                ap_sig_572 <= ((muap_stream_V_user_V_1_sRdy = ap_const_logic_0) or (muap_stream_V_id_V_1_sRdy = ap_const_logic_0) or (muap_stream_V_data_V_1_sRdy = ap_const_logic_0) or (muap_stream_V_dest_V_1_sRdy = ap_const_logic_0));
    end process;


    ap_sig_619_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_619 <= (ap_const_lv1_1 = ap_CS_fsm(17 downto 17));
    end process;


    ap_sig_628_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_628 <= (ap_const_lv1_1 = ap_CS_fsm(18 downto 18));
    end process;


    ap_sig_637_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_637 <= (ap_const_lv1_1 = ap_CS_fsm(19 downto 19));
    end process;


    ap_sig_cseq_ST_st10_fsm_9_assign_proc : process(ap_sig_249)
    begin
        if (ap_sig_249) then 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st11_fsm_10_assign_proc : process(ap_sig_258)
    begin
        if (ap_sig_258) then 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st12_fsm_11_assign_proc : process(ap_sig_266)
    begin
        if (ap_sig_266) then 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st13_fsm_12_assign_proc : process(ap_sig_445)
    begin
        if (ap_sig_445) then 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st14_fsm_13_assign_proc : process(ap_sig_455)
    begin
        if (ap_sig_455) then 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st15_fsm_14_assign_proc : process(ap_sig_492)
    begin
        if (ap_sig_492) then 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st16_fsm_15_assign_proc : process(ap_sig_275)
    begin
        if (ap_sig_275) then 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st17_fsm_16_assign_proc : process(ap_sig_503)
    begin
        if (ap_sig_503) then 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st18_fsm_17_assign_proc : process(ap_sig_619)
    begin
        if (ap_sig_619) then 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st19_fsm_18_assign_proc : process(ap_sig_628)
    begin
        if (ap_sig_628) then 
            ap_sig_cseq_ST_st19_fsm_18 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st19_fsm_18 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_39)
    begin
        if (ap_sig_39) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st20_fsm_19_assign_proc : process(ap_sig_637)
    begin
        if (ap_sig_637) then 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st21_fsm_20_assign_proc : process(ap_sig_219)
    begin
        if (ap_sig_219) then 
            ap_sig_cseq_ST_st21_fsm_20 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st21_fsm_20 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st22_fsm_21_assign_proc : process(ap_sig_230)
    begin
        if (ap_sig_230) then 
            ap_sig_cseq_ST_st22_fsm_21 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st22_fsm_21 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_315)
    begin
        if (ap_sig_315) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_333)
    begin
        if (ap_sig_333) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_342)
    begin
        if (ap_sig_342) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_351)
    begin
        if (ap_sig_351) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_242)
    begin
        if (ap_sig_242) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_365)
    begin
        if (ap_sig_365) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_374)
    begin
        if (ap_sig_374) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st9_fsm_8_assign_proc : process(ap_sig_383)
    begin
        if (ap_sig_383) then 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2d_V_address0_assign_proc : process(ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st9_fsm_8, tmp_4_cast_fu_616_p1, tmp_29_cast_fu_687_p1, tmp_38_cast_fu_763_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            buf_2d_V_address0 <= tmp_4_cast_fu_616_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            buf_2d_V_address0 <= tmp_38_cast_fu_763_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            buf_2d_V_address0 <= tmp_29_cast_fu_687_p1(9 - 1 downto 0);
        else 
            buf_2d_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    buf_2d_V_address1_assign_proc : process(ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st9_fsm_8, tmp_36_cast_fu_727_p1, tmp_37_cast_fu_745_p1, tmp_39_cast_fu_827_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
            buf_2d_V_address1 <= tmp_39_cast_fu_827_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            buf_2d_V_address1 <= tmp_37_cast_fu_745_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            buf_2d_V_address1 <= tmp_36_cast_fu_727_p1(9 - 1 downto 0);
        else 
            buf_2d_V_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    buf_2d_V_ce0_assign_proc : process(ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st9_fsm_8)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8))) then 
            buf_2d_V_ce0 <= ap_const_logic_1;
        else 
            buf_2d_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2d_V_ce1_assign_proc : process(ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st9_fsm_8)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8))) then 
            buf_2d_V_ce1 <= ap_const_logic_1;
        else 
            buf_2d_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_2d_V_d0 <= (p_Result_s_reg_1064 & ap_const_lv1_0);

    buf_2d_V_we0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1))) then 
            buf_2d_V_we0 <= ap_const_logic_1;
        else 
            buf_2d_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ch_V_fu_509_p4 <= mua_stream_V_data_V_dout(103 downto 96);

    cnt_V_address0_assign_proc : process(tmp_3_reg_1114, ap_sig_cseq_ST_st2_fsm_1, cnt_V_addr_reg_1150, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4))) then 
            cnt_V_address0 <= cnt_V_addr_reg_1150;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            cnt_V_address0 <= tmp_3_reg_1114(8 - 1 downto 0);
        else 
            cnt_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    cnt_V_ce0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4))) then 
            cnt_V_ce0 <= ap_const_logic_1;
        else 
            cnt_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cnt_V_d0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st5_fsm_4, tmp_5_fu_628_p2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            cnt_V_d0 <= ap_const_lv3_0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            cnt_V_d0 <= tmp_5_fu_628_p2;
        else 
            cnt_V_d0 <= "XXX";
        end if; 
    end process;


    cnt_V_we0_assign_proc : process(start_cnt_load_reg_1146, tmp_6_reg_1160, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((ap_const_lv1_0 = start_cnt_load_reg_1146)) and not((ap_const_lv1_0 = tmp_6_reg_1160))))) then 
            cnt_V_we0 <= ap_const_logic_1;
        else 
            cnt_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_429_p4 <= tmp_data_V_1_reg_1045(103 downto 101);
    grp_fu_438_p2 <= "1" when (signed(buf_2d_V_load_reg_1222) < signed(loc_V_reg_1069)) else "0";
    grp_fu_442_p2 <= "1" when (signed(buf_2d_V_load_reg_1222) > signed(p_Result_s_4_reg_1127)) else "0";
    grp_fu_446_p2 <= (grp_fu_438_p2 and grp_fu_442_p2);
    grp_fu_452_p2 <= "1" when (signed(buf_2d_V_load_reg_1222) < signed(loc_V_reg_1069)) else "0";
    grp_fu_456_p2 <= (grp_fu_452_p2 xor ap_const_lv1_1);
    grp_fu_462_p2 <= (grp_fu_456_p2 or grp_fu_442_p2);
    grp_fu_484_p2 <= "1" when (signed(buf_2d_V_load_reg_1222) > signed(reg_476)) else "0";
    grp_fu_489_p2 <= "1" when (signed(buf_2d_V_load_reg_1222) > signed(reg_472)) else "0";
    grp_fu_494_p2 <= "1" when (signed(buf_2d_V_load_reg_1222) > signed(reg_480)) else "0";
    if_pivotal_1_3_fu_993_p2 <= (tmp9_reg_1359 and tmp_reg_1349);

    mua_stream_V_data_V_blk_n_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, mua_stream_V_data_V_empty_n)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
            mua_stream_V_data_V_blk_n <= mua_stream_V_data_V_empty_n;
        else 
            mua_stream_V_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    mua_stream_V_data_V_read_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_283)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_283))) then 
            mua_stream_V_data_V_read <= ap_const_logic_1;
        else 
            mua_stream_V_data_V_read <= ap_const_logic_0;
        end if; 
    end process;

    muap_stream_TDATA <= muap_stream_V_data_V_1_data_reg;

    muap_stream_TDATA_blk_n_assign_proc : process(muap_stream_V_data_V_1_sRdy, ap_sig_cseq_ST_st21_fsm_20, tmp_24_fu_1024_p2, ap_sig_cseq_ST_st22_fsm_21, tmp_24_reg_1441)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) and (tmp_24_fu_1024_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21) and (ap_const_lv1_0 = tmp_24_reg_1441)))) then 
            muap_stream_TDATA_blk_n <= muap_stream_V_data_V_1_sRdy;
        else 
            muap_stream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    muap_stream_TDEST <= muap_stream_V_dest_V_1_data_reg;
    muap_stream_TID <= muap_stream_V_id_V_1_data_reg;
    muap_stream_TUSER <= muap_stream_V_user_V_1_data_reg;
    muap_stream_TVALID <= muap_stream_V_dest_V_1_mVld;
    muap_stream_V_data_V_1_ack_out <= muap_stream_TREADY;

    muap_stream_V_data_V_1_sRdy_assign_proc : process(muap_stream_TREADY, muap_stream_V_data_V_1_mVld, muap_stream_V_data_V_1_areset_d)
    begin
        muap_stream_V_data_V_1_sRdy <= (not(muap_stream_V_data_V_1_areset_d) and (muap_stream_TREADY or not(muap_stream_V_data_V_1_mVld)));
    end process;


    muap_stream_V_data_V_1_vld_in_assign_proc : process(muap_stream_V_user_V_1_ack_in, ap_sig_cseq_ST_st21_fsm_20, tmp_24_fu_1024_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) and (tmp_24_fu_1024_p2 = ap_const_lv1_0) and not(((tmp_24_fu_1024_p2 = ap_const_lv1_0) and (ap_const_logic_0 = muap_stream_V_user_V_1_ack_in))))) then 
            muap_stream_V_data_V_1_vld_in <= ap_const_logic_1;
        else 
            muap_stream_V_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    muap_stream_V_dest_V_1_ack_out <= muap_stream_TREADY;

    muap_stream_V_dest_V_1_sRdy_assign_proc : process(muap_stream_TREADY, muap_stream_V_dest_V_1_mVld, muap_stream_V_dest_V_1_areset_d)
    begin
        muap_stream_V_dest_V_1_sRdy <= (not(muap_stream_V_dest_V_1_areset_d) and (muap_stream_TREADY or not(muap_stream_V_dest_V_1_mVld)));
    end process;


    muap_stream_V_dest_V_1_vld_in_assign_proc : process(muap_stream_V_user_V_1_ack_in, ap_sig_cseq_ST_st21_fsm_20, tmp_24_fu_1024_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) and (tmp_24_fu_1024_p2 = ap_const_lv1_0) and not(((tmp_24_fu_1024_p2 = ap_const_lv1_0) and (ap_const_logic_0 = muap_stream_V_user_V_1_ack_in))))) then 
            muap_stream_V_dest_V_1_vld_in <= ap_const_logic_1;
        else 
            muap_stream_V_dest_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    muap_stream_V_id_V_1_ack_out <= muap_stream_TREADY;

    muap_stream_V_id_V_1_sRdy_assign_proc : process(muap_stream_TREADY, muap_stream_V_id_V_1_mVld, muap_stream_V_id_V_1_areset_d)
    begin
        muap_stream_V_id_V_1_sRdy <= (not(muap_stream_V_id_V_1_areset_d) and (muap_stream_TREADY or not(muap_stream_V_id_V_1_mVld)));
    end process;


    muap_stream_V_id_V_1_vld_in_assign_proc : process(muap_stream_V_user_V_1_ack_in, ap_sig_cseq_ST_st21_fsm_20, tmp_24_fu_1024_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) and (tmp_24_fu_1024_p2 = ap_const_lv1_0) and not(((tmp_24_fu_1024_p2 = ap_const_lv1_0) and (ap_const_logic_0 = muap_stream_V_user_V_1_ack_in))))) then 
            muap_stream_V_id_V_1_vld_in <= ap_const_logic_1;
        else 
            muap_stream_V_id_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;


    muap_stream_V_user_V_1_ack_in_assign_proc : process(muap_stream_TREADY, muap_stream_V_user_V_1_mVld, muap_stream_V_user_V_1_areset_d)
    begin
        muap_stream_V_user_V_1_ack_in <= (not(muap_stream_V_user_V_1_areset_d) and (muap_stream_TREADY or not(muap_stream_V_user_V_1_mVld)));
    end process;

    muap_stream_V_user_V_1_ack_out <= muap_stream_TREADY;

    muap_stream_V_user_V_1_sRdy_assign_proc : process(muap_stream_TREADY, muap_stream_V_user_V_1_mVld, muap_stream_V_user_V_1_areset_d)
    begin
        muap_stream_V_user_V_1_sRdy <= (not(muap_stream_V_user_V_1_areset_d) and (muap_stream_TREADY or not(muap_stream_V_user_V_1_mVld)));
    end process;


    muap_stream_V_user_V_1_vld_in_assign_proc : process(muap_stream_V_user_V_1_ack_in, ap_sig_cseq_ST_st21_fsm_20, tmp_24_fu_1024_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) and (tmp_24_fu_1024_p2 = ap_const_lv1_0) and not(((tmp_24_fu_1024_p2 = ap_const_lv1_0) and (ap_const_logic_0 = muap_stream_V_user_V_1_ack_in))))) then 
            muap_stream_V_user_V_1_vld_in <= ap_const_logic_1;
        else 
            muap_stream_V_user_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    not_1_fu_854_p2 <= (start_cnt_load_2_reg_1251 xor ap_const_lv1_1);
    not_2_fu_894_p2 <= (start_cnt_load_3_reg_1314 xor ap_const_lv1_1);
    not_3_fu_909_p2 <= (start_cnt_load_4_reg_1324 xor ap_const_lv1_1);
    not_sel_tmp1_fu_919_p2 <= (sel_tmp2_fu_914_p2 xor ap_const_lv1_1);
    not_sel_tmp_fu_864_p2 <= (sel_tmp_fu_859_p2 xor ap_const_lv1_1);
    or_cond4_fu_792_p2 <= (grp_fu_484_p2 or grp_fu_489_p2);
    or_cond5_fu_849_p2 <= (tmp_24_1_reg_1304 or grp_fu_489_p2);
    or_cond6_fu_890_p2 <= (tmp_24_2_reg_1334 or tmp_25_2_reg_1339);
    or_cond7_fu_904_p2 <= (tmp_24_3_reg_1344 or grp_fu_489_p2);
    
    p_Result_1_fu_997_p4_proc : process(buf_2d_V_load_reg_1222)
    begin
        p_Result_1_fu_997_p4 <= buf_2d_V_load_reg_1222;
        p_Result_1_fu_997_p4(0) <= ap_const_lv1_1(0);
    end process;

    p_Result_s_4_fu_592_p3 <= (p_Result_s_reg_1064 & ap_const_lv1_0);
    r_V_fu_640_p3 <= (loc_V_reg_1069 & ap_const_lv1_0);
    sel_tmp1_fu_899_p2 <= (sel_tmp6_reg_1297 and or_cond6_fu_890_p2);
    sel_tmp2_fu_914_p2 <= (sel_tmp6_reg_1297 and or_cond7_fu_904_p2);
    sel_tmp3_demorgan_fu_803_p2 <= (tmp_10_fu_781_p2 or tmp_11_fu_786_p2);
    sel_tmp5_fu_809_p2 <= (tmp_10_fu_781_p2 xor ap_const_lv1_1);
    sel_tmp6_fu_815_p2 <= (tmp_11_fu_786_p2 and sel_tmp5_fu_809_p2);
    sel_tmp7_fu_821_p2 <= (sel_tmp6_fu_815_p2 and or_cond4_fu_792_p2);
    sel_tmp_demorgan_fu_798_p2 <= (start_cnt_load_1_reg_1241 or tmp_10_fu_781_p2);
    sel_tmp_fu_859_p2 <= (sel_tmp6_reg_1297 and or_cond5_fu_849_p2);

    start_cnt_address0_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st10_fsm_9, tmp_3_fu_587_p1, start_cnt_addr_reg_1121, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st9_fsm_8, tmp_8_fu_714_p1, tmp_14_3_fu_768_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            start_cnt_address0 <= start_cnt_addr_reg_1121;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            start_cnt_address0 <= tmp_14_3_fu_768_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            start_cnt_address0 <= tmp_8_fu_714_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) then 
            start_cnt_address0 <= tmp_3_fu_587_p1(8 - 1 downto 0);
        else 
            start_cnt_address0 <= "XXXXXXXX";
        end if; 
    end process;


    start_cnt_address1_assign_proc : process(ap_sig_cseq_ST_st10_fsm_9, start_cnt_addr_reg_1121, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st14_fsm_13, tmp_14_1_fu_732_p1, tmp_14_2_fu_750_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            start_cnt_address1 <= start_cnt_addr_reg_1121;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            start_cnt_address1 <= tmp_14_2_fu_750_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            start_cnt_address1 <= tmp_14_1_fu_732_p1(8 - 1 downto 0);
        else 
            start_cnt_address1 <= "XXXXXXXX";
        end if; 
    end process;


    start_cnt_ce0_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st10_fsm_9, ap_sig_283, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st9_fsm_8)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_283)) or (ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8))) then 
            start_cnt_ce0 <= ap_const_logic_1;
        else 
            start_cnt_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    start_cnt_ce1_assign_proc : process(ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st14_fsm_13)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13))) then 
            start_cnt_ce1 <= ap_const_logic_1;
        else 
            start_cnt_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    start_cnt_we0_assign_proc : process(start_cnt_load_reg_1146, tmp_6_reg_1160, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((ap_const_lv1_0 = start_cnt_load_reg_1146)) and not((ap_const_lv1_0 = tmp_6_reg_1160))))) then 
            start_cnt_we0 <= ap_const_logic_1;
        else 
            start_cnt_we0 <= ap_const_logic_0;
        end if; 
    end process;


    start_cnt_we1_assign_proc : process(state_load_reg_1364, ap_sig_cseq_ST_st14_fsm_13, grp_fu_446_p2, grp_fu_462_p2, if_pivotal_1_3_fu_993_p2)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (state_load_reg_1364 = ap_const_lv2_1) and (ap_const_lv1_0 = grp_fu_446_p2) and (ap_const_lv1_0 = grp_fu_462_p2) and not((ap_const_lv1_0 = if_pivotal_1_3_fu_993_p2))))) then 
            start_cnt_we1 <= ap_const_logic_1;
        else 
            start_cnt_we1 <= ap_const_logic_0;
        end if; 
    end process;


    state_address0_assign_proc : process(ap_sig_cseq_ST_st12_fsm_11, tmp_3_reg_1114, state_addr_reg_1354, state_load_reg_1364, ap_sig_cseq_ST_st14_fsm_13, grp_fu_446_p2, grp_fu_462_p2, grp_fu_438_p2, ap_sig_cseq_ST_st15_fsm_14)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (state_load_reg_1364 = ap_const_lv2_1) and not((ap_const_lv1_0 = grp_fu_446_p2))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (ap_const_lv1_0 = grp_fu_446_p2) and (ap_const_lv1_0 = grp_fu_462_p2) and (state_load_reg_1364 = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (ap_const_lv1_0 = grp_fu_446_p2) and (state_load_reg_1364 = ap_const_lv2_2) and not((ap_const_lv1_0 = grp_fu_462_p2)) and (ap_const_lv1_0 = grp_fu_438_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and not((ap_const_lv1_0 = grp_fu_446_p2)) and (state_load_reg_1364 = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (state_load_reg_1364 = ap_const_lv2_1) and (ap_const_lv1_0 = grp_fu_446_p2) and (ap_const_lv1_0 = grp_fu_462_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (state_load_reg_1364 = ap_const_lv2_1) and (ap_const_lv1_0 = grp_fu_446_p2) and not((ap_const_lv1_0 = grp_fu_462_p2)) and (ap_const_lv1_0 = grp_fu_438_p2)))) then 
            state_address0 <= state_addr_reg_1354;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            state_address0 <= tmp_3_reg_1114(8 - 1 downto 0);
        else 
            state_address0 <= "XXXXXXXX";
        end if; 
    end process;


    state_ce0_assign_proc : process(ap_sig_cseq_ST_st12_fsm_11, state_load_reg_1364, ap_sig_cseq_ST_st14_fsm_13, grp_fu_446_p2, grp_fu_462_p2, grp_fu_438_p2, ap_sig_cseq_ST_st15_fsm_14)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (state_load_reg_1364 = ap_const_lv2_1) and not((ap_const_lv1_0 = grp_fu_446_p2))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (ap_const_lv1_0 = grp_fu_446_p2) and (ap_const_lv1_0 = grp_fu_462_p2) and (state_load_reg_1364 = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (ap_const_lv1_0 = grp_fu_446_p2) and (state_load_reg_1364 = ap_const_lv2_2) and not((ap_const_lv1_0 = grp_fu_462_p2)) and (ap_const_lv1_0 = grp_fu_438_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and not((ap_const_lv1_0 = grp_fu_446_p2)) and (state_load_reg_1364 = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (state_load_reg_1364 = ap_const_lv2_1) and (ap_const_lv1_0 = grp_fu_446_p2) and (ap_const_lv1_0 = grp_fu_462_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (state_load_reg_1364 = ap_const_lv2_1) and (ap_const_lv1_0 = grp_fu_446_p2) and not((ap_const_lv1_0 = grp_fu_462_p2)) and (ap_const_lv1_0 = grp_fu_438_p2)))) then 
            state_ce0 <= ap_const_logic_1;
        else 
            state_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    state_d0_assign_proc : process(state_load_reg_1364, ap_sig_cseq_ST_st14_fsm_13, grp_fu_446_p2, grp_fu_462_p2, grp_fu_438_p2, ap_sig_cseq_ST_st15_fsm_14, storemerge_fu_1006_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then 
            state_d0 <= storemerge_fu_1006_p1;
        elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (state_load_reg_1364 = ap_const_lv2_1) and not((ap_const_lv1_0 = grp_fu_446_p2))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and not((ap_const_lv1_0 = grp_fu_446_p2)) and (state_load_reg_1364 = ap_const_lv2_2)))) then 
            state_d0 <= ap_const_lv2_1;
        elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (ap_const_lv1_0 = grp_fu_446_p2) and (state_load_reg_1364 = ap_const_lv2_2) and not((ap_const_lv1_0 = grp_fu_462_p2)) and (ap_const_lv1_0 = grp_fu_438_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (state_load_reg_1364 = ap_const_lv2_1) and (ap_const_lv1_0 = grp_fu_446_p2) and not((ap_const_lv1_0 = grp_fu_462_p2)) and (ap_const_lv1_0 = grp_fu_438_p2)))) then 
            state_d0 <= ap_const_lv2_0;
        elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (ap_const_lv1_0 = grp_fu_446_p2) and (ap_const_lv1_0 = grp_fu_462_p2) and (state_load_reg_1364 = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (state_load_reg_1364 = ap_const_lv2_1) and (ap_const_lv1_0 = grp_fu_446_p2) and (ap_const_lv1_0 = grp_fu_462_p2)))) then 
            state_d0 <= ap_const_lv2_2;
        else 
            state_d0 <= "XX";
        end if; 
    end process;


    state_we0_assign_proc : process(state_load_reg_1364, ap_sig_cseq_ST_st14_fsm_13, grp_fu_446_p2, grp_fu_462_p2, grp_fu_438_p2, ap_sig_cseq_ST_st15_fsm_14)
    begin
        if ((((state_load_reg_1364 = ap_const_lv2_0) and (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (state_load_reg_1364 = ap_const_lv2_1) and not((ap_const_lv1_0 = grp_fu_446_p2))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (ap_const_lv1_0 = grp_fu_446_p2) and (ap_const_lv1_0 = grp_fu_462_p2) and (state_load_reg_1364 = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (ap_const_lv1_0 = grp_fu_446_p2) and (state_load_reg_1364 = ap_const_lv2_2) and not((ap_const_lv1_0 = grp_fu_462_p2)) and (ap_const_lv1_0 = grp_fu_438_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and not((ap_const_lv1_0 = grp_fu_446_p2)) and (state_load_reg_1364 = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (state_load_reg_1364 = ap_const_lv2_1) and (ap_const_lv1_0 = grp_fu_446_p2) and (ap_const_lv1_0 = grp_fu_462_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (state_load_reg_1364 = ap_const_lv2_1) and (ap_const_lv1_0 = grp_fu_446_p2) and not((ap_const_lv1_0 = grp_fu_462_p2)) and (ap_const_lv1_0 = grp_fu_438_p2)))) then 
            state_we0 <= ap_const_logic_1;
        else 
            state_we0 <= ap_const_logic_0;
        end if; 
    end process;

    storemerge_fu_1006_p1 <= std_logic_vector(resize(unsigned(tmp_14_reg_1419),2));

    syn_large_amp_address0_assign_proc : process(ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st5_fsm_4, syn_large_amp_addr_reg_1168, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st9_fsm_8, syn_large_amp_addr_2_reg_1368, syn_large_amp_addr_3_reg_1373, syn_large_amp_addr_4_reg_1378, syn_large_amp_addr_5_reg_1383, syn_large_amp_addr_6_reg_1388, ap_sig_cseq_ST_st17_fsm_16, tmp_27_cast_fu_665_p1, tmp_35_cast_fu_709_p1, ap_sig_cseq_ST_st18_fsm_17, ap_sig_cseq_ST_st19_fsm_18, ap_sig_cseq_ST_st20_fsm_19)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            syn_large_amp_address0 <= syn_large_amp_addr_6_reg_1388;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
            syn_large_amp_address0 <= syn_large_amp_addr_5_reg_1383;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
            syn_large_amp_address0 <= syn_large_amp_addr_4_reg_1378;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
            syn_large_amp_address0 <= syn_large_amp_addr_3_reg_1373;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            syn_large_amp_address0 <= syn_large_amp_addr_2_reg_1368;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            syn_large_amp_address0 <= syn_large_amp_addr_reg_1168;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            syn_large_amp_address0 <= tmp_35_cast_fu_709_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            syn_large_amp_address0 <= tmp_27_cast_fu_665_p1(4 - 1 downto 0);
        else 
            syn_large_amp_address0 <= "XXXX";
        end if; 
    end process;


    syn_large_amp_ce0_assign_proc : process(muap_stream_V_user_V_1_ack_in, ap_sig_cseq_ST_st21_fsm_20, tmp_24_fu_1024_p2, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st18_fsm_17, ap_sig_cseq_ST_st19_fsm_18, ap_sig_cseq_ST_st20_fsm_19)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16) or ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) and not(((tmp_24_fu_1024_p2 = ap_const_lv1_0) and (ap_const_logic_0 = muap_stream_V_user_V_1_ack_in)))) or (ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17) or (ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18) or (ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19))) then 
            syn_large_amp_ce0 <= ap_const_logic_1;
        else 
            syn_large_amp_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    syn_large_amp_d0_assign_proc : process(ap_sig_cseq_ST_st21_fsm_20, tmp_2_reg_1173, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st18_fsm_17, ap_sig_cseq_ST_st19_fsm_18, ap_sig_cseq_ST_st20_fsm_19)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16) or (ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17) or (ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18) or (ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19))) then 
            syn_large_amp_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            syn_large_amp_d0 <= tmp_2_reg_1173;
        else 
            syn_large_amp_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    syn_large_amp_we0_assign_proc : process(muap_stream_V_user_V_1_ack_in, ap_sig_cseq_ST_st21_fsm_20, tmp_24_fu_1024_p2, tmp_9_reg_1164, ap_sig_cseq_ST_st8_fsm_7, tmp_23_fu_1019_p2, tmp_23_reg_1437, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st18_fsm_17, ap_sig_cseq_ST_st19_fsm_18, ap_sig_cseq_ST_st20_fsm_19)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and not((ap_const_lv1_0 = tmp_9_reg_1164))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16) and not((ap_const_lv1_0 = tmp_23_fu_1019_p2))) or (ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17) or (ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18) or (ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) or ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) and not(((tmp_24_fu_1024_p2 = ap_const_lv1_0) and (ap_const_logic_0 = muap_stream_V_user_V_1_ack_in))) and not((ap_const_lv1_0 = tmp_23_reg_1437))))) then 
            syn_large_amp_we0 <= ap_const_logic_1;
        else 
            syn_large_amp_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp1_fu_837_p2 <= (tmp39_demorgan_fu_831_p2 xor ap_const_lv1_1);
    tmp2_fu_843_p2 <= (sel_tmp3_demorgan_fu_803_p2 and tmp1_fu_837_p2);
    tmp39_demorgan_fu_831_p2 <= (sel_tmp_demorgan_fu_798_p2 or sel_tmp7_fu_821_p2);
    tmp3_fu_874_p2 <= (tmp_10_reg_1286 xor not_sel_tmp_fu_864_p2);
    tmp4_fu_879_p2 <= (tmp3_fu_874_p2 and not_1_fu_854_p2);
    tmp5_fu_925_p2 <= (sel_tmp1_fu_899_p2 xor sel_tmp3_demorgan_reg_1292);
    tmp6_fu_930_p2 <= (tmp5_fu_925_p2 and not_2_fu_894_p2);
    tmp7_fu_936_p2 <= (tmp_10_reg_1286 xor not_sel_tmp1_fu_919_p2);
    tmp8_fu_941_p2 <= (tmp7_fu_936_p2 and not_3_fu_909_p2);
    tmp9_fu_947_p2 <= (tmp8_fu_941_p2 and tmp6_fu_930_p2);
    tmp_10_fu_781_p2 <= "1" when (signed(buf_2d_V_load_reg_1222) < signed(ap_const_lv32_FB1E0000)) else "0";
    tmp_11_fu_786_p2 <= "1" when (signed(reg_468) < signed(ap_const_lv32_A)) else "0";
    tmp_14_1_cast_fu_737_p1 <= std_logic_vector(resize(unsigned(p_Repl2_1_reg_1083),9));
    tmp_14_1_fu_732_p1 <= std_logic_vector(resize(unsigned(p_Repl2_1_reg_1083),64));
    tmp_14_2_cast_fu_755_p1 <= std_logic_vector(resize(unsigned(p_Repl2_2_reg_1089),9));
    tmp_14_2_fu_750_p1 <= std_logic_vector(resize(unsigned(p_Repl2_2_reg_1089),64));
    tmp_14_3_cast_fu_773_p1 <= std_logic_vector(resize(unsigned(p_Repl2_3_reg_1095),9));
    tmp_14_3_fu_768_p1 <= std_logic_vector(resize(unsigned(p_Repl2_3_reg_1095),64));
    tmp_1_cast_fu_603_p3 <= 
        ap_const_lv9_A0 when (j_reg_1101(0) = '1') else 
        ap_const_lv9_0;
    tmp_1_fu_683_p2 <= std_logic_vector(unsigned(tmp_3_cast_reg_1136) + unsigned(tmp_28_cast_reg_1178));
    tmp_20_fu_703_p2 <= std_logic_vector(unsigned(tmp_7_cast_fu_699_p1) + unsigned(tmp_30_cast8_fu_692_p3));
    tmp_21_fu_1010_p2 <= "1" when (signed(p_Result_s_4_reg_1127) < signed(loc_V_reg_1069)) else "0";
    tmp_22_fu_1014_p2 <= "1" when (signed(p_Result_s_4_reg_1127) < signed(reg_476)) else "0";
    tmp_23_fu_1019_p2 <= "1" when (ch_V_reg_1057 = ap_const_lv8_9F) else "0";
    tmp_24_fu_1024_p2 <= "1" when (t_V_reg_1051 = ap_const_lv32_0) else "0";
    tmp_25_2_fu_870_p2 <= "1" when (signed(buf_2d_V_load_reg_1222) > signed(buf_2d_V_load_2_reg_1309)) else "0";
    tmp_25_cast_fu_621_p3 <= 
        ap_const_lv4_5 when (j_reg_1101(0) = '1') else 
        ap_const_lv4_0;
    tmp_25_fu_722_p2 <= std_logic_vector(unsigned(tmp_8_cast7_fu_719_p1) + unsigned(tmp_28_cast_reg_1178));
    tmp_26_fu_740_p2 <= std_logic_vector(unsigned(tmp_14_1_cast_fu_737_p1) + unsigned(tmp_28_cast_reg_1178));
    tmp_27_cast_fu_665_p1 <= std_logic_vector(resize(unsigned(tmp_s_fu_660_p2),64));
    tmp_27_fu_758_p2 <= std_logic_vector(unsigned(tmp_14_2_cast_fu_755_p1) + unsigned(tmp_28_cast_reg_1178));
    tmp_28_cast_fu_676_p3 <= 
        ap_const_lv9_0 when (j_reg_1101(0) = '1') else 
        ap_const_lv9_A0;
    tmp_28_fu_776_p2 <= std_logic_vector(unsigned(tmp_14_3_cast_fu_773_p1) + unsigned(tmp_28_cast_reg_1178));
    tmp_29_cast_fu_687_p1 <= std_logic_vector(resize(unsigned(tmp_1_fu_683_p2),64));
    tmp_2_fu_670_p2 <= std_logic_vector(unsigned(reg_468) + unsigned(ap_const_lv32_1));
    tmp_30_cast8_fu_692_p3 <= 
        ap_const_lv4_0 when (j_reg_1101(0) = '1') else 
        ap_const_lv4_5;
    tmp_30_cast_fu_953_p3 <= 
        ap_const_lv64_0 when (j_reg_1101(0) = '1') else 
        ap_const_lv64_5;
    tmp_31_cast_fu_961_p3 <= 
        ap_const_lv64_1 when (j_reg_1101(0) = '1') else 
        ap_const_lv64_6;
    tmp_32_cast_fu_969_p3 <= 
        ap_const_lv64_2 when (j_reg_1101(0) = '1') else 
        ap_const_lv64_7;
    tmp_33_cast_fu_977_p3 <= 
        ap_const_lv64_3 when (j_reg_1101(0) = '1') else 
        ap_const_lv64_8;
    tmp_34_cast_fu_985_p3 <= 
        ap_const_lv64_4 when (j_reg_1101(0) = '1') else 
        ap_const_lv64_9;
    tmp_35_cast_fu_709_p1 <= std_logic_vector(resize(unsigned(tmp_20_fu_703_p2),64));
    tmp_36_cast_fu_727_p1 <= std_logic_vector(resize(unsigned(tmp_25_fu_722_p2),64));
    tmp_37_cast_fu_745_p1 <= std_logic_vector(resize(unsigned(tmp_26_fu_740_p2),64));
    tmp_38_cast_fu_763_p1 <= std_logic_vector(resize(unsigned(tmp_27_fu_758_p2),64));
    tmp_39_cast_fu_827_p1 <= std_logic_vector(resize(unsigned(tmp_28_reg_1271),64));
    tmp_3_cast_fu_600_p1 <= std_logic_vector(resize(unsigned(ch_V_reg_1057),9));
    tmp_3_fu_587_p1 <= std_logic_vector(resize(unsigned(ch_V_fu_509_p4),64));
    tmp_4_cast_fu_616_p1 <= std_logic_vector(resize(unsigned(tmp_4_fu_610_p2),64));
    tmp_4_fu_610_p2 <= std_logic_vector(unsigned(tmp_1_cast_fu_603_p3) + unsigned(tmp_3_cast_fu_600_p1));
    tmp_5_fu_628_p2 <= std_logic_vector(unsigned(cnt_V_load_reg_1155) + unsigned(ap_const_lv3_1));
    tmp_6_fu_634_p2 <= "1" when (tmp_5_fu_628_p2 = ap_const_lv3_4) else "0";
    tmp_7_cast_fu_699_p1 <= std_logic_vector(resize(unsigned(grp_fu_429_p4),4));
    tmp_8_cast7_fu_719_p1 <= std_logic_vector(resize(unsigned(p_Repl2_s_reg_1077),9));
        tmp_8_cast_fu_647_p1 <= std_logic_vector(resize(signed(p_Result_s_4_reg_1127),33));

    tmp_8_fu_714_p1 <= std_logic_vector(resize(unsigned(p_Repl2_s_reg_1077),64));
    tmp_9_fu_650_p2 <= "1" when (signed(tmp_8_cast_fu_647_p1) < signed(r_V_fu_640_p3)) else "0";
    tmp_cast_fu_656_p1 <= std_logic_vector(resize(unsigned(grp_fu_429_p4),4));
    tmp_fu_885_p2 <= (tmp4_fu_879_p2 and tmp2_reg_1329);
    tmp_s_fu_660_p2 <= std_logic_vector(unsigned(tmp_cast_fu_656_p1) + unsigned(tmp_25_cast_reg_1141));
    tmp_user_V_fu_1029_p2 <= std_logic_vector(unsigned(t_V_reg_1051) + unsigned(ap_const_lv32_FFFFFFFF));
end behav;
