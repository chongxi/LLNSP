-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.1
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity spk_dect is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    mua_stream_V_data_V_dout : IN STD_LOGIC_VECTOR (159 downto 0);
    mua_stream_V_data_V_empty_n : IN STD_LOGIC;
    mua_stream_V_data_V_read : OUT STD_LOGIC;
    muap_stream_TUSER : OUT STD_LOGIC_VECTOR (31 downto 0);
    muap_stream_TVALID : OUT STD_LOGIC;
    muap_stream_TREADY : IN STD_LOGIC;
    muap_stream_TID : OUT STD_LOGIC_VECTOR (7 downto 0);
    muap_stream_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    muap_stream_TDEST : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of spk_dect is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "spk_dect,hls_ip_2016_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k325tffg900-2,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.630000,HLS_SYN_LAT=19,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=672,HLS_SYN_LUT=345}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (14 downto 0) := "000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (14 downto 0) := "000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (14 downto 0) := "000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (14 downto 0) := "000000001000000";
    constant ap_ST_pp0_stg0_fsm_7 : STD_LOGIC_VECTOR (14 downto 0) := "000000010000000";
    constant ap_ST_st12_fsm_8 : STD_LOGIC_VECTOR (14 downto 0) := "000000100000000";
    constant ap_ST_st13_fsm_9 : STD_LOGIC_VECTOR (14 downto 0) := "000001000000000";
    constant ap_ST_st14_fsm_10 : STD_LOGIC_VECTOR (14 downto 0) := "000010000000000";
    constant ap_ST_st15_fsm_11 : STD_LOGIC_VECTOR (14 downto 0) := "000100000000000";
    constant ap_ST_st16_fsm_12 : STD_LOGIC_VECTOR (14 downto 0) := "001000000000000";
    constant ap_ST_st17_fsm_13 : STD_LOGIC_VECTOR (14 downto 0) := "010000000000000";
    constant ap_ST_st18_fsm_14 : STD_LOGIC_VECTOR (14 downto 0) := "100000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_true : BOOLEAN := true;
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_67 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100111";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv9_A0 : STD_LOGIC_VECTOR (8 downto 0) := "010100000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_32 : BOOLEAN;
    signal muap_stream_V_user_V_1_vld_in : STD_LOGIC;
    signal muap_stream_V_user_V_1_ack_in : STD_LOGIC;
    signal muap_stream_V_user_V_1_ack_out : STD_LOGIC;
    signal muap_stream_V_user_V_1_data_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal muap_stream_V_user_V_1_sRdy : STD_LOGIC;
    signal muap_stream_V_user_V_1_mVld : STD_LOGIC := '0';
    signal muap_stream_V_user_V_1_areset_d : STD_LOGIC;
    signal muap_stream_V_id_V_1_vld_in : STD_LOGIC;
    signal muap_stream_V_id_V_1_ack_out : STD_LOGIC;
    signal muap_stream_V_id_V_1_data_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal muap_stream_V_id_V_1_sRdy : STD_LOGIC;
    signal muap_stream_V_id_V_1_mVld : STD_LOGIC := '0';
    signal muap_stream_V_id_V_1_areset_d : STD_LOGIC;
    signal muap_stream_V_data_V_1_vld_in : STD_LOGIC;
    signal muap_stream_V_data_V_1_ack_out : STD_LOGIC;
    signal muap_stream_V_data_V_1_data_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal muap_stream_V_data_V_1_sRdy : STD_LOGIC;
    signal muap_stream_V_data_V_1_mVld : STD_LOGIC := '0';
    signal muap_stream_V_data_V_1_areset_d : STD_LOGIC;
    signal muap_stream_V_dest_V_1_vld_in : STD_LOGIC;
    signal muap_stream_V_dest_V_1_ack_out : STD_LOGIC;
    signal muap_stream_V_dest_V_1_data_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal muap_stream_V_dest_V_1_sRdy : STD_LOGIC;
    signal muap_stream_V_dest_V_1_mVld : STD_LOGIC := '0';
    signal muap_stream_V_dest_V_1_areset_d : STD_LOGIC;
    signal buf_2d_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal buf_2d_V_ce0 : STD_LOGIC;
    signal buf_2d_V_we0 : STD_LOGIC;
    signal buf_2d_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_2d_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal start_cnt_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal start_cnt_ce0 : STD_LOGIC;
    signal start_cnt_we0 : STD_LOGIC;
    signal start_cnt_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal start_cnt_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal cnt_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal cnt_V_ce0 : STD_LOGIC;
    signal cnt_V_we0 : STD_LOGIC;
    signal cnt_V_d0 : STD_LOGIC_VECTOR (2 downto 0);
    signal cnt_V_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal Mn_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal Mn_V_ce0 : STD_LOGIC;
    signal Mn_V_we0 : STD_LOGIC;
    signal Mn_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Mn_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal state_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal state_ce0 : STD_LOGIC;
    signal state_we0 : STD_LOGIC;
    signal state_d0 : STD_LOGIC_VECTOR (1 downto 0);
    signal state_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal mua_stream_V_data_V_blk_n : STD_LOGIC;
    signal muap_stream_TDATA_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_st17_fsm_13 : STD_LOGIC;
    signal ap_sig_189 : BOOLEAN;
    signal tmp_18_fu_588_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st18_fsm_14 : STD_LOGIC;
    signal ap_sig_200 : BOOLEAN;
    signal tmp_18_reg_829 : STD_LOGIC_VECTOR (0 downto 0);
    signal if_pivotal_reg_251 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_reg_263 : STD_LOGIC_VECTOR (2 downto 0);
    signal reg_325 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal exitcond1_reg_735 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_exitcond1_reg_735_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st16_fsm_12 : STD_LOGIC;
    signal ap_sig_228 : BOOLEAN;
    signal tmp_data_V_1_reg_609 : STD_LOGIC_VECTOR (159 downto 0);
    signal ap_sig_235 : BOOLEAN;
    signal t_V_reg_614 : STD_LOGIC_VECTOR (31 downto 0);
    signal ch_V_reg_620 : STD_LOGIC_VECTOR (7 downto 0);
    signal ch_nn_3_V_reg_627 : STD_LOGIC_VECTOR (7 downto 0);
    signal ch_nn_2_V_reg_632 : STD_LOGIC_VECTOR (7 downto 0);
    signal ch_nn_1_V_reg_637 : STD_LOGIC_VECTOR (7 downto 0);
    signal ch_nn_0_V_reg_642 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_reg_647 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_reg_654 : STD_LOGIC_VECTOR (30 downto 0);
    signal j_reg_659 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_4_fu_417_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_4_reg_665 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_263 : BOOLEAN;
    signal tmp_3_cast_fu_425_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_3_cast_reg_673 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_19_cast_fu_446_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_19_cast_reg_678 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_3_fu_453_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_reg_684 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_276 : BOOLEAN;
    signal start_cnt_addr_reg_696 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_val_V_1_reg_701 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_288 : BOOLEAN;
    signal start_cnt_load_reg_717 : STD_LOGIC_VECTOR (0 downto 0);
    signal cnt_V_addr_reg_721 : STD_LOGIC_VECTOR (7 downto 0);
    signal cnt_V_load_reg_726 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_302 : BOOLEAN;
    signal tmp_7_fu_472_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_731 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_311 : BOOLEAN;
    signal exitcond1_fu_478_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_7 : STD_LOGIC;
    signal ap_sig_319 : BOOLEAN;
    signal ap_reg_ppstg_exitcond1_reg_735_pp0_iter2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_484_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_2_fu_494_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_reg_744 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_2d_V_load_reg_765 : STD_LOGIC_VECTOR (31 downto 0);
    signal start_cnt_load_1_reg_770 : STD_LOGIC_VECTOR (0 downto 0);
    signal if_pivotal_1_fu_560_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal state_addr_reg_780 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st12_fsm_8 : STD_LOGIC;
    signal ap_sig_351 : BOOLEAN;
    signal state_load_reg_785 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_cseq_ST_st13_fsm_9 : STD_LOGIC;
    signal ap_sig_359 : BOOLEAN;
    signal p_Result_2_fu_566_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st14_fsm_10 : STD_LOGIC;
    signal ap_sig_368 : BOOLEAN;
    signal grp_fu_303_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_319_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_295_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_812 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_579_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_reg_817 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st15_fsm_11 : STD_LOGIC;
    signal ap_sig_394 : BOOLEAN;
    signal Mn_V_addr_1_reg_821 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_user_V_fu_593_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_412 : BOOLEAN;
    signal tmp_data_V_reg_274 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_cast_fu_441_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_cast_fu_461_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_cast_fu_517_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_504_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_468 : BOOLEAN;
    signal tmp_6_fu_466_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_17_fu_583_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal storemerge_fu_575_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_299_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_309_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_313_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_cast_fu_428_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_5_fu_435_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_4_fu_457_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_2_fu_494_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_cast_fu_509_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_15_fu_512_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal slt_fu_527_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal slt9_fu_538_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev8_fu_532_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_548_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_s_fu_522_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_554_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (14 downto 0);

    component spk_dect_mux_4to1_sel2_8_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (7 downto 0);
        din5 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component spk_dect_buf_2d_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component spk_dect_start_cnt IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component spk_dect_cnt_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (2 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component spk_dect_Mn_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component spk_dect_state IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (1 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;



begin
    buf_2d_V_U : component spk_dect_buf_2d_V
    generic map (
        DataWidth => 32,
        AddressRange => 320,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => buf_2d_V_address0,
        ce0 => buf_2d_V_ce0,
        we0 => buf_2d_V_we0,
        d0 => buf_2d_V_d0,
        q0 => buf_2d_V_q0);

    start_cnt_U : component spk_dect_start_cnt
    generic map (
        DataWidth => 1,
        AddressRange => 160,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => start_cnt_address0,
        ce0 => start_cnt_ce0,
        we0 => start_cnt_we0,
        d0 => start_cnt_d0,
        q0 => start_cnt_q0);

    cnt_V_U : component spk_dect_cnt_V
    generic map (
        DataWidth => 3,
        AddressRange => 160,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => cnt_V_address0,
        ce0 => cnt_V_ce0,
        we0 => cnt_V_we0,
        d0 => cnt_V_d0,
        q0 => cnt_V_q0);

    Mn_V_U : component spk_dect_Mn_V
    generic map (
        DataWidth => 32,
        AddressRange => 160,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => Mn_V_address0,
        ce0 => Mn_V_ce0,
        we0 => Mn_V_we0,
        d0 => Mn_V_d0,
        q0 => Mn_V_q0);

    state_U : component spk_dect_state
    generic map (
        DataWidth => 2,
        AddressRange => 160,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => state_address0,
        ce0 => state_ce0,
        we0 => state_we0,
        d0 => state_d0,
        q0 => state_q0);

    spk_dect_mux_4to1_sel2_8_1_U1 : component spk_dect_mux_4to1_sel2_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din1 => ch_nn_0_V_reg_642,
        din2 => ch_nn_1_V_reg_637,
        din3 => ch_nn_2_V_reg_632,
        din4 => ch_nn_3_V_reg_627,
        din5 => tmp_2_fu_494_p5,
        dout => tmp_2_fu_494_p6);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_7) and not((ap_const_lv1_0 = exitcond1_fu_478_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_7) and (ap_const_lv1_0 = exitcond1_fu_478_p2))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_7) and not((ap_const_lv1_0 = exitcond1_fu_478_p2))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
            end if;
        end if;
    end process;


    muap_stream_V_data_V_1_mVld_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                muap_stream_V_data_V_1_mVld <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = muap_stream_V_data_V_1_vld_in)) then 
                    muap_stream_V_data_V_1_mVld <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = muap_stream_V_data_V_1_ack_out)) then 
                    muap_stream_V_data_V_1_mVld <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    muap_stream_V_dest_V_1_mVld_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                muap_stream_V_dest_V_1_mVld <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = muap_stream_V_dest_V_1_vld_in)) then 
                    muap_stream_V_dest_V_1_mVld <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = muap_stream_V_dest_V_1_ack_out)) then 
                    muap_stream_V_dest_V_1_mVld <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    muap_stream_V_id_V_1_mVld_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                muap_stream_V_id_V_1_mVld <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = muap_stream_V_id_V_1_vld_in)) then 
                    muap_stream_V_id_V_1_mVld <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = muap_stream_V_id_V_1_ack_out)) then 
                    muap_stream_V_id_V_1_mVld <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    muap_stream_V_user_V_1_mVld_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                muap_stream_V_user_V_1_mVld <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = muap_stream_V_user_V_1_vld_in)) then 
                    muap_stream_V_user_V_1_mVld <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = muap_stream_V_user_V_1_ack_out)) then 
                    muap_stream_V_user_V_1_mVld <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_263_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_7) and (ap_const_lv1_0 = exitcond1_fu_478_p2))) then 
                i_reg_263 <= i_1_fu_484_p2;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
                i_reg_263 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    if_pivotal_reg_251_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_735_pp0_iter2))) then 
                if_pivotal_reg_251 <= if_pivotal_1_fu_560_p2;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
                if_pivotal_reg_251 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    tmp_data_V_reg_274_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_10) and (state_load_reg_785 = ap_const_lv2_1) and (ap_const_lv1_0 = grp_fu_303_p2) and (ap_const_lv1_0 = grp_fu_319_p2) and not((ap_const_lv1_0 = if_pivotal_reg_251)))) then 
                tmp_data_V_reg_274 <= p_Result_2_fu_566_p4;
            elsif ((((state_load_reg_785 = ap_const_lv2_0) and (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_11)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_10) and (state_load_reg_785 = ap_const_lv2_1) and not((ap_const_lv1_0 = grp_fu_303_p2))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_10) and (state_load_reg_785 = ap_const_lv2_3)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_10) and (state_load_reg_785 = ap_const_lv2_1) and (ap_const_lv1_0 = grp_fu_303_p2) and (ap_const_lv1_0 = grp_fu_319_p2) and (ap_const_lv1_0 = if_pivotal_reg_251)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_10) and (state_load_reg_785 = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_10) and (state_load_reg_785 = ap_const_lv2_1) and (ap_const_lv1_0 = grp_fu_303_p2) and not((ap_const_lv1_0 = grp_fu_319_p2))))) then 
                tmp_data_V_reg_274 <= p_val_V_1_reg_701;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_11)) then
                Mn_V_addr_1_reg_821 <= tmp_3_reg_684(8 - 1 downto 0);
                tmp_16_reg_817 <= tmp_16_fu_579_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_7)) then
                ap_reg_ppstg_exitcond1_reg_735_pp0_iter1 <= exitcond1_reg_735;
                exitcond1_reg_735 <= exitcond1_fu_478_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_true = ap_true)) then
                ap_reg_ppstg_exitcond1_reg_735_pp0_iter2 <= ap_reg_ppstg_exitcond1_reg_735_pp0_iter1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_735_pp0_iter1))) then
                buf_2d_V_load_reg_765 <= buf_2d_V_q0;
                start_cnt_load_1_reg_770 <= start_cnt_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_235))) then
                ch_V_reg_620 <= mua_stream_V_data_V_dout(103 downto 96);
                ch_nn_0_V_reg_642 <= mua_stream_V_data_V_dout(71 downto 64);
                ch_nn_1_V_reg_637 <= mua_stream_V_data_V_dout(79 downto 72);
                ch_nn_2_V_reg_632 <= mua_stream_V_data_V_dout(87 downto 80);
                ch_nn_3_V_reg_627 <= mua_stream_V_data_V_dout(95 downto 88);
                j_reg_659 <= mua_stream_V_data_V_dout(128 downto 128);
                loc_V_reg_647 <= mua_stream_V_data_V_dout(63 downto 32);
                p_Result_s_reg_654 <= mua_stream_V_data_V_dout(31 downto 1);
                t_V_reg_614 <= mua_stream_V_data_V_dout(159 downto 128);
                tmp_data_V_1_reg_609 <= mua_stream_V_data_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((start_cnt_q0 = ap_const_lv1_0)))) then
                cnt_V_addr_reg_721 <= tmp_3_reg_684(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then
                cnt_V_load_reg_726 <= cnt_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_const_logic_1)) then
                muap_stream_V_data_V_1_areset_d <= ap_rst_n_inv;
                muap_stream_V_dest_V_1_areset_d <= ap_rst_n_inv;
                muap_stream_V_id_V_1_areset_d <= ap_rst_n_inv;
                muap_stream_V_user_V_1_areset_d <= ap_rst_n_inv;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = muap_stream_V_data_V_1_vld_in) and (ap_const_logic_1 = muap_stream_V_data_V_1_sRdy))) then
                muap_stream_V_data_V_1_data_reg <= tmp_data_V_reg_274;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = muap_stream_V_dest_V_1_vld_in) and (ap_const_logic_1 = muap_stream_V_dest_V_1_sRdy))) then
                muap_stream_V_dest_V_1_data_reg <= tmp_data_V_1_reg_609(95 downto 64);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = muap_stream_V_id_V_1_vld_in) and (ap_const_logic_1 = muap_stream_V_id_V_1_sRdy))) then
                muap_stream_V_id_V_1_data_reg <= ch_V_reg_620;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = muap_stream_V_user_V_1_vld_in) and (ap_const_logic_1 = muap_stream_V_user_V_1_sRdy))) then
                muap_stream_V_user_V_1_data_reg <= tmp_user_V_fu_593_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                    p_Result_s_4_reg_665(31 downto 1) <= p_Result_s_4_fu_417_p3(31 downto 1);
                    tmp_19_cast_reg_678(5) <= tmp_19_cast_fu_446_p3(5);    tmp_19_cast_reg_678(7) <= tmp_19_cast_fu_446_p3(7);
                    tmp_3_cast_reg_673(7 downto 0) <= tmp_3_cast_fu_425_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then
                p_val_V_1_reg_701 <= buf_2d_V_q0;
                start_cnt_load_reg_717 <= start_cnt_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_735_pp0_iter1)) or (ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_12))) then
                reg_325 <= Mn_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then
                start_cnt_addr_reg_696 <= tmp_3_fu_453_p1(8 - 1 downto 0);
                    tmp_3_reg_684(7 downto 0) <= tmp_3_fu_453_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_8)) then
                state_addr_reg_780 <= tmp_3_reg_684(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_9)) then
                state_load_reg_785 <= state_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_13) and not(((tmp_18_fu_588_p2 = ap_const_lv1_0) and (ap_const_logic_0 = muap_stream_V_user_V_1_ack_in))))) then
                tmp_18_reg_829 <= tmp_18_fu_588_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_7) and (ap_const_lv1_0 = exitcond1_fu_478_p2))) then
                tmp_2_reg_744 <= tmp_2_fu_494_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then
                tmp_7_reg_731 <= tmp_7_fu_472_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_10) and (state_load_reg_785 = ap_const_lv2_0))) then
                tmp_9_reg_812 <= grp_fu_295_p2;
            end if;
        end if;
    end process;
    p_Result_s_4_reg_665(0) <= '0';
    tmp_3_cast_reg_673(8) <= '0';
    tmp_19_cast_reg_678(4 downto 0) <= "00000";
    tmp_19_cast_reg_678(6 downto 6) <= "0";
    tmp_19_cast_reg_678(8) <= '0';
    tmp_3_reg_684(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, muap_stream_V_user_V_1_ack_in, start_cnt_q0, tmp_18_fu_588_p2, tmp_18_reg_829, ap_reg_ppiten_pp0_it2, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_235, exitcond1_fu_478_p2, state_load_reg_785, tmp_16_fu_579_p2, ap_sig_468)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_235)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st4_fsm_3 => 
                if ((start_cnt_q0 = ap_const_lv1_0)) then
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                end if;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when ap_ST_st7_fsm_6 => 
                ap_NS_fsm <= ap_ST_pp0_stg0_fsm_7;
            when ap_ST_pp0_stg0_fsm_7 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_const_lv1_0 = exitcond1_fu_478_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_7;
                elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((ap_const_lv1_0 = exitcond1_fu_478_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) then
                    ap_NS_fsm <= ap_ST_st12_fsm_8;
                else
                    ap_NS_fsm <= ap_ST_st12_fsm_8;
                end if;
            when ap_ST_st12_fsm_8 => 
                ap_NS_fsm <= ap_ST_st13_fsm_9;
            when ap_ST_st13_fsm_9 => 
                ap_NS_fsm <= ap_ST_st14_fsm_10;
            when ap_ST_st14_fsm_10 => 
                ap_NS_fsm <= ap_ST_st15_fsm_11;
            when ap_ST_st15_fsm_11 => 
                if ((((state_load_reg_785 = ap_const_lv2_0) and (ap_const_lv1_0 = tmp_16_fu_579_p2)) or ((state_load_reg_785 = ap_const_lv2_1) and (ap_const_lv1_0 = tmp_16_fu_579_p2)) or ((state_load_reg_785 = ap_const_lv2_2) and (ap_const_lv1_0 = tmp_16_fu_579_p2)) or ((state_load_reg_785 = ap_const_lv2_3) and (ap_const_lv1_0 = tmp_16_fu_579_p2)))) then
                    ap_NS_fsm <= ap_ST_st17_fsm_13;
                else
                    ap_NS_fsm <= ap_ST_st16_fsm_12;
                end if;
            when ap_ST_st16_fsm_12 => 
                ap_NS_fsm <= ap_ST_st17_fsm_13;
            when ap_ST_st17_fsm_13 => 
                if (not(((tmp_18_fu_588_p2 = ap_const_lv1_0) and (ap_const_logic_0 = muap_stream_V_user_V_1_ack_in)))) then
                    ap_NS_fsm <= ap_ST_st18_fsm_14;
                else
                    ap_NS_fsm <= ap_ST_st17_fsm_13;
                end if;
            when ap_ST_st18_fsm_14 => 
                if (not((ap_sig_468 or ((ap_const_lv1_0 = tmp_18_reg_829) and (ap_const_logic_0 = muap_stream_V_user_V_1_ack_in))))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st18_fsm_14;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXX";
        end case;
    end process;

    Mn_V_address0_assign_proc : process(ap_sig_cseq_ST_st17_fsm_13, ap_reg_ppiten_pp0_it1, tmp_3_reg_684, ap_sig_cseq_ST_pp0_stg0_fsm_7, state_load_reg_785, tmp_16_fu_579_p2, ap_sig_cseq_ST_st15_fsm_11, Mn_V_addr_1_reg_821, tmp_s_fu_504_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_13)) then 
            Mn_V_address0 <= Mn_V_addr_1_reg_821;
        elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_11) and (((state_load_reg_785 = ap_const_lv2_0) and (ap_const_lv1_0 = tmp_16_fu_579_p2)) or ((state_load_reg_785 = ap_const_lv2_1) and (ap_const_lv1_0 = tmp_16_fu_579_p2)) or ((state_load_reg_785 = ap_const_lv2_2) and (ap_const_lv1_0 = tmp_16_fu_579_p2)) or ((state_load_reg_785 = ap_const_lv2_3) and (ap_const_lv1_0 = tmp_16_fu_579_p2)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_11) and (((state_load_reg_785 = ap_const_lv2_0) and not((ap_const_lv1_0 = tmp_16_fu_579_p2))) or ((state_load_reg_785 = ap_const_lv2_1) and not((ap_const_lv1_0 = tmp_16_fu_579_p2))) or ((state_load_reg_785 = ap_const_lv2_2) and not((ap_const_lv1_0 = tmp_16_fu_579_p2))) or ((state_load_reg_785 = ap_const_lv2_3) and not((ap_const_lv1_0 = tmp_16_fu_579_p2))))))) then 
            Mn_V_address0 <= tmp_3_reg_684(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_7))) then 
            Mn_V_address0 <= tmp_s_fu_504_p1(8 - 1 downto 0);
        else 
            Mn_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    Mn_V_ce0_assign_proc : process(muap_stream_V_user_V_1_ack_in, ap_sig_cseq_ST_st17_fsm_13, tmp_18_fu_588_p2, ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_pp0_stg0_fsm_7, state_load_reg_785, tmp_16_fu_579_p2, ap_sig_cseq_ST_st15_fsm_11)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_13) and not(((tmp_18_fu_588_p2 = ap_const_lv1_0) and (ap_const_logic_0 = muap_stream_V_user_V_1_ack_in)))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_7)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_11) and (((state_load_reg_785 = ap_const_lv2_0) and (ap_const_lv1_0 = tmp_16_fu_579_p2)) or ((state_load_reg_785 = ap_const_lv2_1) and (ap_const_lv1_0 = tmp_16_fu_579_p2)) or ((state_load_reg_785 = ap_const_lv2_2) and (ap_const_lv1_0 = tmp_16_fu_579_p2)) or ((state_load_reg_785 = ap_const_lv2_3) and (ap_const_lv1_0 = tmp_16_fu_579_p2)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_11) and (((state_load_reg_785 = ap_const_lv2_0) and not((ap_const_lv1_0 = tmp_16_fu_579_p2))) or ((state_load_reg_785 = ap_const_lv2_1) and not((ap_const_lv1_0 = tmp_16_fu_579_p2))) or ((state_load_reg_785 = ap_const_lv2_2) and not((ap_const_lv1_0 = tmp_16_fu_579_p2))) or ((state_load_reg_785 = ap_const_lv2_3) and not((ap_const_lv1_0 = tmp_16_fu_579_p2))))))) then 
            Mn_V_ce0 <= ap_const_logic_1;
        else 
            Mn_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Mn_V_d0_assign_proc : process(ap_sig_cseq_ST_st17_fsm_13, p_Result_s_4_reg_665, state_load_reg_785, tmp_16_fu_579_p2, ap_sig_cseq_ST_st15_fsm_11)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_13)) then 
            Mn_V_d0 <= p_Result_s_4_reg_665;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_11) and (((state_load_reg_785 = ap_const_lv2_0) and (ap_const_lv1_0 = tmp_16_fu_579_p2)) or ((state_load_reg_785 = ap_const_lv2_1) and (ap_const_lv1_0 = tmp_16_fu_579_p2)) or ((state_load_reg_785 = ap_const_lv2_2) and (ap_const_lv1_0 = tmp_16_fu_579_p2)) or ((state_load_reg_785 = ap_const_lv2_3) and (ap_const_lv1_0 = tmp_16_fu_579_p2))))) then 
            Mn_V_d0 <= ap_const_lv32_0;
        else 
            Mn_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    Mn_V_we0_assign_proc : process(muap_stream_V_user_V_1_ack_in, ap_sig_cseq_ST_st17_fsm_13, tmp_18_fu_588_p2, state_load_reg_785, tmp_16_fu_579_p2, tmp_16_reg_817, ap_sig_cseq_ST_st15_fsm_11, tmp_17_fu_583_p2)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_11) and (((state_load_reg_785 = ap_const_lv2_0) and (ap_const_lv1_0 = tmp_16_fu_579_p2)) or ((state_load_reg_785 = ap_const_lv2_1) and (ap_const_lv1_0 = tmp_16_fu_579_p2)) or ((state_load_reg_785 = ap_const_lv2_2) and (ap_const_lv1_0 = tmp_16_fu_579_p2)) or ((state_load_reg_785 = ap_const_lv2_3) and (ap_const_lv1_0 = tmp_16_fu_579_p2)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_13) and not(((tmp_18_fu_588_p2 = ap_const_lv1_0) and (ap_const_logic_0 = muap_stream_V_user_V_1_ack_in))) and not((ap_const_lv1_0 = tmp_16_reg_817)) and not((ap_const_lv1_0 = tmp_17_fu_583_p2))))) then 
            Mn_V_we0 <= ap_const_logic_1;
        else 
            Mn_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(muap_stream_V_user_V_1_ack_in, ap_sig_cseq_ST_st18_fsm_14, tmp_18_reg_829, ap_sig_468)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_14) and not((ap_sig_468 or ((ap_const_lv1_0 = tmp_18_reg_829) and (ap_const_logic_0 = muap_stream_V_user_V_1_ack_in)))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(muap_stream_V_user_V_1_ack_in, ap_sig_cseq_ST_st18_fsm_14, tmp_18_reg_829, ap_sig_468)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_14) and not((ap_sig_468 or ((ap_const_lv1_0 = tmp_18_reg_829) and (ap_const_logic_0 = muap_stream_V_user_V_1_ack_in)))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_189_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_189 <= (ap_const_lv1_1 = ap_CS_fsm(13 downto 13));
    end process;


    ap_sig_200_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_200 <= (ap_const_lv1_1 = ap_CS_fsm(14 downto 14));
    end process;


    ap_sig_228_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_228 <= (ap_const_lv1_1 = ap_CS_fsm(12 downto 12));
    end process;


    ap_sig_235_assign_proc : process(ap_start, mua_stream_V_data_V_empty_n)
    begin
                ap_sig_235 <= ((ap_start = ap_const_logic_0) or (mua_stream_V_data_V_empty_n = ap_const_logic_0));
    end process;


    ap_sig_263_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_263 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_276_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_276 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_288_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_288 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_302_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_302 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_311_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_311 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_319_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_319 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_32_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_32 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_351_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_351 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    ap_sig_359_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_359 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    ap_sig_368_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_368 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    ap_sig_394_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_394 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    ap_sig_412_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_412 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_468_assign_proc : process(muap_stream_V_user_V_1_sRdy, muap_stream_V_id_V_1_sRdy, muap_stream_V_data_V_1_sRdy, muap_stream_V_dest_V_1_sRdy)
    begin
                ap_sig_468 <= ((muap_stream_V_user_V_1_sRdy = ap_const_logic_0) or (muap_stream_V_id_V_1_sRdy = ap_const_logic_0) or (muap_stream_V_data_V_1_sRdy = ap_const_logic_0) or (muap_stream_V_dest_V_1_sRdy = ap_const_logic_0));
    end process;


    ap_sig_cseq_ST_pp0_stg0_fsm_7_assign_proc : process(ap_sig_319)
    begin
        if (ap_sig_319) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st12_fsm_8_assign_proc : process(ap_sig_351)
    begin
        if (ap_sig_351) then 
            ap_sig_cseq_ST_st12_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st12_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st13_fsm_9_assign_proc : process(ap_sig_359)
    begin
        if (ap_sig_359) then 
            ap_sig_cseq_ST_st13_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st13_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st14_fsm_10_assign_proc : process(ap_sig_368)
    begin
        if (ap_sig_368) then 
            ap_sig_cseq_ST_st14_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st14_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st15_fsm_11_assign_proc : process(ap_sig_394)
    begin
        if (ap_sig_394) then 
            ap_sig_cseq_ST_st15_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st15_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st16_fsm_12_assign_proc : process(ap_sig_228)
    begin
        if (ap_sig_228) then 
            ap_sig_cseq_ST_st16_fsm_12 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st16_fsm_12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st17_fsm_13_assign_proc : process(ap_sig_189)
    begin
        if (ap_sig_189) then 
            ap_sig_cseq_ST_st17_fsm_13 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st17_fsm_13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st18_fsm_14_assign_proc : process(ap_sig_200)
    begin
        if (ap_sig_200) then 
            ap_sig_cseq_ST_st18_fsm_14 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st18_fsm_14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_32)
    begin
        if (ap_sig_32) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_263)
    begin
        if (ap_sig_263) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_276)
    begin
        if (ap_sig_276) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_288)
    begin
        if (ap_sig_288) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_302)
    begin
        if (ap_sig_302) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_311)
    begin
        if (ap_sig_311) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_412)
    begin
        if (ap_sig_412) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2d_V_address0_assign_proc : process(ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_pp0_stg0_fsm_7, tmp_5_cast_fu_441_p1, tmp_20_cast_fu_461_p1, tmp_21_cast_fu_517_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            buf_2d_V_address0 <= tmp_5_cast_fu_441_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_7))) then 
            buf_2d_V_address0 <= tmp_21_cast_fu_517_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            buf_2d_V_address0 <= tmp_20_cast_fu_461_p1(9 - 1 downto 0);
        else 
            buf_2d_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    buf_2d_V_ce0_assign_proc : process(ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_pp0_stg0_fsm_7)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_7)))) then 
            buf_2d_V_ce0 <= ap_const_logic_1;
        else 
            buf_2d_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    buf_2d_V_d0 <= (p_Result_s_reg_654 & ap_const_lv1_0);

    buf_2d_V_we0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1))) then 
            buf_2d_V_we0 <= ap_const_logic_1;
        else 
            buf_2d_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cnt_V_address0_assign_proc : process(tmp_3_reg_684, ap_sig_cseq_ST_st4_fsm_3, cnt_V_addr_reg_721, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6))) then 
            cnt_V_address0 <= cnt_V_addr_reg_721;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            cnt_V_address0 <= tmp_3_reg_684(8 - 1 downto 0);
        else 
            cnt_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    cnt_V_ce0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6))) then 
            cnt_V_ce0 <= ap_const_logic_1;
        else 
            cnt_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cnt_V_d0_assign_proc : process(ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6, tmp_6_fu_466_p2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            cnt_V_d0 <= ap_const_lv3_0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            cnt_V_d0 <= tmp_6_fu_466_p2;
        else 
            cnt_V_d0 <= "XXX";
        end if; 
    end process;


    cnt_V_we0_assign_proc : process(start_cnt_load_reg_717, tmp_7_reg_731, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = start_cnt_load_reg_717)) and not((ap_const_lv1_0 = tmp_7_reg_731))))) then 
            cnt_V_we0 <= ap_const_logic_1;
        else 
            cnt_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_fu_478_p2 <= "1" when (i_reg_263 = ap_const_lv3_4) else "0";
    grp_fu_295_p2 <= "1" when (signed(p_val_V_1_reg_701) < signed(loc_V_reg_647)) else "0";
    grp_fu_299_p2 <= "1" when (signed(p_val_V_1_reg_701) > signed(p_Result_s_4_reg_665)) else "0";
    grp_fu_303_p2 <= (grp_fu_295_p2 and grp_fu_299_p2);
    grp_fu_309_p2 <= "1" when (signed(p_val_V_1_reg_701) < signed(loc_V_reg_647)) else "0";
    grp_fu_313_p2 <= (grp_fu_309_p2 xor ap_const_lv1_1);
    grp_fu_319_p2 <= (grp_fu_313_p2 or grp_fu_299_p2);
    i_1_fu_484_p2 <= std_logic_vector(unsigned(i_reg_263) + unsigned(ap_const_lv3_1));
    if_pivotal_1_fu_560_p2 <= (if_pivotal_reg_251 and tmp_8_fu_554_p2);

    mua_stream_V_data_V_blk_n_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, mua_stream_V_data_V_empty_n)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
            mua_stream_V_data_V_blk_n <= mua_stream_V_data_V_empty_n;
        else 
            mua_stream_V_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    mua_stream_V_data_V_read_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_235)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_235))) then 
            mua_stream_V_data_V_read <= ap_const_logic_1;
        else 
            mua_stream_V_data_V_read <= ap_const_logic_0;
        end if; 
    end process;

    muap_stream_TDATA <= muap_stream_V_data_V_1_data_reg;

    muap_stream_TDATA_blk_n_assign_proc : process(muap_stream_V_data_V_1_sRdy, ap_sig_cseq_ST_st17_fsm_13, tmp_18_fu_588_p2, ap_sig_cseq_ST_st18_fsm_14, tmp_18_reg_829)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_13) and (tmp_18_fu_588_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_14) and (ap_const_lv1_0 = tmp_18_reg_829)))) then 
            muap_stream_TDATA_blk_n <= muap_stream_V_data_V_1_sRdy;
        else 
            muap_stream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    muap_stream_TDEST <= muap_stream_V_dest_V_1_data_reg;
    muap_stream_TID <= muap_stream_V_id_V_1_data_reg;
    muap_stream_TUSER <= muap_stream_V_user_V_1_data_reg;
    muap_stream_TVALID <= muap_stream_V_dest_V_1_mVld;
    muap_stream_V_data_V_1_ack_out <= muap_stream_TREADY;

    muap_stream_V_data_V_1_sRdy_assign_proc : process(muap_stream_TREADY, muap_stream_V_data_V_1_mVld, muap_stream_V_data_V_1_areset_d)
    begin
        muap_stream_V_data_V_1_sRdy <= (not(muap_stream_V_data_V_1_areset_d) and (muap_stream_TREADY or not(muap_stream_V_data_V_1_mVld)));
    end process;


    muap_stream_V_data_V_1_vld_in_assign_proc : process(muap_stream_V_user_V_1_ack_in, ap_sig_cseq_ST_st17_fsm_13, tmp_18_fu_588_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_13) and (tmp_18_fu_588_p2 = ap_const_lv1_0) and not(((tmp_18_fu_588_p2 = ap_const_lv1_0) and (ap_const_logic_0 = muap_stream_V_user_V_1_ack_in))))) then 
            muap_stream_V_data_V_1_vld_in <= ap_const_logic_1;
        else 
            muap_stream_V_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    muap_stream_V_dest_V_1_ack_out <= muap_stream_TREADY;

    muap_stream_V_dest_V_1_sRdy_assign_proc : process(muap_stream_TREADY, muap_stream_V_dest_V_1_mVld, muap_stream_V_dest_V_1_areset_d)
    begin
        muap_stream_V_dest_V_1_sRdy <= (not(muap_stream_V_dest_V_1_areset_d) and (muap_stream_TREADY or not(muap_stream_V_dest_V_1_mVld)));
    end process;


    muap_stream_V_dest_V_1_vld_in_assign_proc : process(muap_stream_V_user_V_1_ack_in, ap_sig_cseq_ST_st17_fsm_13, tmp_18_fu_588_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_13) and (tmp_18_fu_588_p2 = ap_const_lv1_0) and not(((tmp_18_fu_588_p2 = ap_const_lv1_0) and (ap_const_logic_0 = muap_stream_V_user_V_1_ack_in))))) then 
            muap_stream_V_dest_V_1_vld_in <= ap_const_logic_1;
        else 
            muap_stream_V_dest_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    muap_stream_V_id_V_1_ack_out <= muap_stream_TREADY;

    muap_stream_V_id_V_1_sRdy_assign_proc : process(muap_stream_TREADY, muap_stream_V_id_V_1_mVld, muap_stream_V_id_V_1_areset_d)
    begin
        muap_stream_V_id_V_1_sRdy <= (not(muap_stream_V_id_V_1_areset_d) and (muap_stream_TREADY or not(muap_stream_V_id_V_1_mVld)));
    end process;


    muap_stream_V_id_V_1_vld_in_assign_proc : process(muap_stream_V_user_V_1_ack_in, ap_sig_cseq_ST_st17_fsm_13, tmp_18_fu_588_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_13) and (tmp_18_fu_588_p2 = ap_const_lv1_0) and not(((tmp_18_fu_588_p2 = ap_const_lv1_0) and (ap_const_logic_0 = muap_stream_V_user_V_1_ack_in))))) then 
            muap_stream_V_id_V_1_vld_in <= ap_const_logic_1;
        else 
            muap_stream_V_id_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;


    muap_stream_V_user_V_1_ack_in_assign_proc : process(muap_stream_TREADY, muap_stream_V_user_V_1_mVld, muap_stream_V_user_V_1_areset_d)
    begin
        muap_stream_V_user_V_1_ack_in <= (not(muap_stream_V_user_V_1_areset_d) and (muap_stream_TREADY or not(muap_stream_V_user_V_1_mVld)));
    end process;

    muap_stream_V_user_V_1_ack_out <= muap_stream_TREADY;

    muap_stream_V_user_V_1_sRdy_assign_proc : process(muap_stream_TREADY, muap_stream_V_user_V_1_mVld, muap_stream_V_user_V_1_areset_d)
    begin
        muap_stream_V_user_V_1_sRdy <= (not(muap_stream_V_user_V_1_areset_d) and (muap_stream_TREADY or not(muap_stream_V_user_V_1_mVld)));
    end process;


    muap_stream_V_user_V_1_vld_in_assign_proc : process(muap_stream_V_user_V_1_ack_in, ap_sig_cseq_ST_st17_fsm_13, tmp_18_fu_588_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_13) and (tmp_18_fu_588_p2 = ap_const_lv1_0) and not(((tmp_18_fu_588_p2 = ap_const_lv1_0) and (ap_const_logic_0 = muap_stream_V_user_V_1_ack_in))))) then 
            muap_stream_V_user_V_1_vld_in <= ap_const_logic_1;
        else 
            muap_stream_V_user_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    not_s_fu_522_p2 <= (start_cnt_load_1_reg_770 xor ap_const_lv1_1);
    
    p_Result_2_fu_566_p4_proc : process(p_val_V_1_reg_701)
    begin
        p_Result_2_fu_566_p4 <= p_val_V_1_reg_701;
        p_Result_2_fu_566_p4(0) <= ap_const_lv1_1(0);
    end process;

    p_Result_s_4_fu_417_p3 <= (p_Result_s_reg_654 & ap_const_lv1_0);
    rev8_fu_532_p2 <= (slt_fu_527_p2 xor ap_const_lv1_1);
    rev_fu_542_p2 <= (slt9_fu_538_p2 xor ap_const_lv1_1);
    slt9_fu_538_p2 <= "1" when (signed(buf_2d_V_load_reg_765) < signed(p_val_V_1_reg_701)) else "0";
    slt_fu_527_p2 <= "1" when (signed(reg_325) < signed(p_val_V_1_reg_701)) else "0";

    start_cnt_address0_assign_proc : process(ap_reg_ppiten_pp0_it1, tmp_3_fu_453_p1, ap_sig_cseq_ST_st3_fsm_2, start_cnt_addr_reg_696, ap_sig_cseq_ST_pp0_stg0_fsm_7, ap_sig_cseq_ST_st14_fsm_10, ap_sig_cseq_ST_st7_fsm_6, tmp_s_fu_504_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_10) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6))) then 
            start_cnt_address0 <= start_cnt_addr_reg_696;
        elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_7))) then 
            start_cnt_address0 <= tmp_s_fu_504_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            start_cnt_address0 <= tmp_3_fu_453_p1(8 - 1 downto 0);
        else 
            start_cnt_address0 <= "XXXXXXXX";
        end if; 
    end process;


    start_cnt_ce0_assign_proc : process(ap_reg_ppiten_pp0_it1, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_pp0_stg0_fsm_7, ap_sig_cseq_ST_st14_fsm_10, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_10) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_7)))) then 
            start_cnt_ce0 <= ap_const_logic_1;
        else 
            start_cnt_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    start_cnt_d0_assign_proc : process(ap_sig_cseq_ST_st14_fsm_10, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_10)) then 
            start_cnt_d0 <= ap_const_lv1_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            start_cnt_d0 <= ap_const_lv1_0;
        else 
            start_cnt_d0 <= "X";
        end if; 
    end process;


    start_cnt_we0_assign_proc : process(if_pivotal_reg_251, start_cnt_load_reg_717, tmp_7_reg_731, state_load_reg_785, ap_sig_cseq_ST_st14_fsm_10, grp_fu_303_p2, grp_fu_319_p2, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_10) and (state_load_reg_785 = ap_const_lv2_1) and (ap_const_lv1_0 = grp_fu_303_p2) and (ap_const_lv1_0 = grp_fu_319_p2) and not((ap_const_lv1_0 = if_pivotal_reg_251))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = start_cnt_load_reg_717)) and not((ap_const_lv1_0 = tmp_7_reg_731))))) then 
            start_cnt_we0 <= ap_const_logic_1;
        else 
            start_cnt_we0 <= ap_const_logic_0;
        end if; 
    end process;


    state_address0_assign_proc : process(tmp_3_reg_684, state_addr_reg_780, ap_sig_cseq_ST_st12_fsm_8, state_load_reg_785, ap_sig_cseq_ST_st14_fsm_10, grp_fu_303_p2, grp_fu_319_p2, grp_fu_295_p2, ap_sig_cseq_ST_st15_fsm_11)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_11) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_10) and (state_load_reg_785 = ap_const_lv2_1) and not((ap_const_lv1_0 = grp_fu_303_p2))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_10) and (ap_const_lv1_0 = grp_fu_303_p2) and (ap_const_lv1_0 = grp_fu_319_p2) and (state_load_reg_785 = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_10) and (ap_const_lv1_0 = grp_fu_303_p2) and (state_load_reg_785 = ap_const_lv2_2) and not((ap_const_lv1_0 = grp_fu_319_p2)) and (ap_const_lv1_0 = grp_fu_295_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_10) and not((ap_const_lv1_0 = grp_fu_303_p2)) and (state_load_reg_785 = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_10) and (state_load_reg_785 = ap_const_lv2_1) and (ap_const_lv1_0 = grp_fu_303_p2) and (ap_const_lv1_0 = grp_fu_319_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_10) and (state_load_reg_785 = ap_const_lv2_1) and (ap_const_lv1_0 = grp_fu_303_p2) and not((ap_const_lv1_0 = grp_fu_319_p2)) and (ap_const_lv1_0 = grp_fu_295_p2)))) then 
            state_address0 <= state_addr_reg_780;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_8)) then 
            state_address0 <= tmp_3_reg_684(8 - 1 downto 0);
        else 
            state_address0 <= "XXXXXXXX";
        end if; 
    end process;


    state_ce0_assign_proc : process(ap_sig_cseq_ST_st12_fsm_8, state_load_reg_785, ap_sig_cseq_ST_st14_fsm_10, grp_fu_303_p2, grp_fu_319_p2, grp_fu_295_p2, ap_sig_cseq_ST_st15_fsm_11)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_11) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_10) and (state_load_reg_785 = ap_const_lv2_1) and not((ap_const_lv1_0 = grp_fu_303_p2))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_10) and (ap_const_lv1_0 = grp_fu_303_p2) and (ap_const_lv1_0 = grp_fu_319_p2) and (state_load_reg_785 = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_10) and (ap_const_lv1_0 = grp_fu_303_p2) and (state_load_reg_785 = ap_const_lv2_2) and not((ap_const_lv1_0 = grp_fu_319_p2)) and (ap_const_lv1_0 = grp_fu_295_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_10) and not((ap_const_lv1_0 = grp_fu_303_p2)) and (state_load_reg_785 = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_10) and (state_load_reg_785 = ap_const_lv2_1) and (ap_const_lv1_0 = grp_fu_303_p2) and (ap_const_lv1_0 = grp_fu_319_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_10) and (state_load_reg_785 = ap_const_lv2_1) and (ap_const_lv1_0 = grp_fu_303_p2) and not((ap_const_lv1_0 = grp_fu_319_p2)) and (ap_const_lv1_0 = grp_fu_295_p2)))) then 
            state_ce0 <= ap_const_logic_1;
        else 
            state_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    state_d0_assign_proc : process(state_load_reg_785, ap_sig_cseq_ST_st14_fsm_10, grp_fu_303_p2, grp_fu_319_p2, grp_fu_295_p2, ap_sig_cseq_ST_st15_fsm_11, storemerge_fu_575_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_11)) then 
            state_d0 <= storemerge_fu_575_p1;
        elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_10) and (state_load_reg_785 = ap_const_lv2_1) and not((ap_const_lv1_0 = grp_fu_303_p2))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_10) and not((ap_const_lv1_0 = grp_fu_303_p2)) and (state_load_reg_785 = ap_const_lv2_2)))) then 
            state_d0 <= ap_const_lv2_1;
        elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_10) and (ap_const_lv1_0 = grp_fu_303_p2) and (state_load_reg_785 = ap_const_lv2_2) and not((ap_const_lv1_0 = grp_fu_319_p2)) and (ap_const_lv1_0 = grp_fu_295_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_10) and (state_load_reg_785 = ap_const_lv2_1) and (ap_const_lv1_0 = grp_fu_303_p2) and not((ap_const_lv1_0 = grp_fu_319_p2)) and (ap_const_lv1_0 = grp_fu_295_p2)))) then 
            state_d0 <= ap_const_lv2_0;
        elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_10) and (ap_const_lv1_0 = grp_fu_303_p2) and (ap_const_lv1_0 = grp_fu_319_p2) and (state_load_reg_785 = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_10) and (state_load_reg_785 = ap_const_lv2_1) and (ap_const_lv1_0 = grp_fu_303_p2) and (ap_const_lv1_0 = grp_fu_319_p2)))) then 
            state_d0 <= ap_const_lv2_2;
        else 
            state_d0 <= "XX";
        end if; 
    end process;


    state_we0_assign_proc : process(state_load_reg_785, ap_sig_cseq_ST_st14_fsm_10, grp_fu_303_p2, grp_fu_319_p2, grp_fu_295_p2, ap_sig_cseq_ST_st15_fsm_11)
    begin
        if ((((state_load_reg_785 = ap_const_lv2_0) and (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_11)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_10) and (state_load_reg_785 = ap_const_lv2_1) and not((ap_const_lv1_0 = grp_fu_303_p2))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_10) and (ap_const_lv1_0 = grp_fu_303_p2) and (ap_const_lv1_0 = grp_fu_319_p2) and (state_load_reg_785 = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_10) and (ap_const_lv1_0 = grp_fu_303_p2) and (state_load_reg_785 = ap_const_lv2_2) and not((ap_const_lv1_0 = grp_fu_319_p2)) and (ap_const_lv1_0 = grp_fu_295_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_10) and not((ap_const_lv1_0 = grp_fu_303_p2)) and (state_load_reg_785 = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_10) and (state_load_reg_785 = ap_const_lv2_1) and (ap_const_lv1_0 = grp_fu_303_p2) and (ap_const_lv1_0 = grp_fu_319_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_10) and (state_load_reg_785 = ap_const_lv2_1) and (ap_const_lv1_0 = grp_fu_303_p2) and not((ap_const_lv1_0 = grp_fu_319_p2)) and (ap_const_lv1_0 = grp_fu_295_p2)))) then 
            state_we0 <= ap_const_logic_1;
        else 
            state_we0 <= ap_const_logic_0;
        end if; 
    end process;

    storemerge_fu_575_p1 <= std_logic_vector(resize(unsigned(tmp_9_reg_812),2));
    tmp_15_fu_512_p2 <= std_logic_vector(unsigned(tmp_19_cast_reg_678) + unsigned(tmp_cast_fu_509_p1));
    tmp_16_fu_579_p2 <= "1" when (signed(p_Result_s_4_reg_665) < signed(loc_V_reg_647)) else "0";
    tmp_17_fu_583_p2 <= "1" when (signed(p_Result_s_4_reg_665) < signed(reg_325)) else "0";
    tmp_18_fu_588_p2 <= "1" when (t_V_reg_614 = ap_const_lv32_0) else "0";
    tmp_19_cast_fu_446_p3 <= 
        ap_const_lv9_0 when (j_reg_659(0) = '1') else 
        ap_const_lv9_A0;
    tmp_20_cast_fu_461_p1 <= std_logic_vector(resize(unsigned(tmp_4_fu_457_p2),64));
    tmp_21_cast_fu_517_p1 <= std_logic_vector(resize(unsigned(tmp_15_fu_512_p2),64));
    tmp_2_fu_494_p5 <= i_reg_263(2 - 1 downto 0);
    tmp_3_cast_fu_425_p1 <= std_logic_vector(resize(unsigned(ch_V_reg_620),9));
    tmp_3_fu_453_p1 <= std_logic_vector(resize(unsigned(ch_V_reg_620),64));
    tmp_4_cast_fu_428_p3 <= 
        ap_const_lv9_A0 when (j_reg_659(0) = '1') else 
        ap_const_lv9_0;
    tmp_4_fu_457_p2 <= std_logic_vector(unsigned(tmp_19_cast_reg_678) + unsigned(tmp_3_cast_reg_673));
    tmp_5_cast_fu_441_p1 <= std_logic_vector(resize(unsigned(tmp_5_fu_435_p2),64));
    tmp_5_fu_435_p2 <= std_logic_vector(unsigned(tmp_4_cast_fu_428_p3) + unsigned(tmp_3_cast_fu_425_p1));
    tmp_6_fu_466_p2 <= std_logic_vector(unsigned(cnt_V_load_reg_726) + unsigned(ap_const_lv3_1));
    tmp_7_fu_472_p2 <= "1" when (tmp_6_fu_466_p2 = ap_const_lv3_4) else "0";
    tmp_8_fu_554_p2 <= (tmp_fu_548_p2 and not_s_fu_522_p2);
    tmp_cast_fu_509_p1 <= std_logic_vector(resize(unsigned(tmp_2_reg_744),9));
    tmp_fu_548_p2 <= (rev8_fu_532_p2 and rev_fu_542_p2);
    tmp_s_fu_504_p1 <= std_logic_vector(resize(unsigned(tmp_2_reg_744),64));
    tmp_user_V_fu_593_p2 <= std_logic_vector(unsigned(t_V_reg_614) + unsigned(ap_const_lv32_FFFFFFFF));
end behav;
