// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="spk_dect,hls_ip_2016_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k325tffg900-2,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.630000,HLS_SYN_LAT=19,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=672,HLS_SYN_LUT=345}" *)

module spk_dect (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        mua_stream_V_data_V_dout,
        mua_stream_V_data_V_empty_n,
        mua_stream_V_data_V_read,
        muap_stream_TUSER,
        muap_stream_TVALID,
        muap_stream_TREADY,
        muap_stream_TID,
        muap_stream_TDATA,
        muap_stream_TDEST
);

parameter    ap_ST_st1_fsm_0 = 15'b1;
parameter    ap_ST_st2_fsm_1 = 15'b10;
parameter    ap_ST_st3_fsm_2 = 15'b100;
parameter    ap_ST_st4_fsm_3 = 15'b1000;
parameter    ap_ST_st5_fsm_4 = 15'b10000;
parameter    ap_ST_st6_fsm_5 = 15'b100000;
parameter    ap_ST_st7_fsm_6 = 15'b1000000;
parameter    ap_ST_pp0_stg0_fsm_7 = 15'b10000000;
parameter    ap_ST_st12_fsm_8 = 15'b100000000;
parameter    ap_ST_st13_fsm_9 = 15'b1000000000;
parameter    ap_ST_st14_fsm_10 = 15'b10000000000;
parameter    ap_ST_st15_fsm_11 = 15'b100000000000;
parameter    ap_ST_st16_fsm_12 = 15'b1000000000000;
parameter    ap_ST_st17_fsm_13 = 15'b10000000000000;
parameter    ap_ST_st18_fsm_14 = 15'b100000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv32_80 = 32'b10000000;
parameter    ap_const_lv32_9F = 32'b10011111;
parameter    ap_const_lv32_60 = 32'b1100000;
parameter    ap_const_lv32_67 = 32'b1100111;
parameter    ap_const_lv32_58 = 32'b1011000;
parameter    ap_const_lv32_5F = 32'b1011111;
parameter    ap_const_lv32_50 = 32'b1010000;
parameter    ap_const_lv32_57 = 32'b1010111;
parameter    ap_const_lv32_48 = 32'b1001000;
parameter    ap_const_lv32_4F = 32'b1001111;
parameter    ap_const_lv32_40 = 32'b1000000;
parameter    ap_const_lv32_47 = 32'b1000111;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv9_A0 = 9'b10100000;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv3_4 = 3'b100;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [159:0] mua_stream_V_data_V_dout;
input   mua_stream_V_data_V_empty_n;
output   mua_stream_V_data_V_read;
output  [31:0] muap_stream_TUSER;
output   muap_stream_TVALID;
input   muap_stream_TREADY;
output  [7:0] muap_stream_TID;
output  [31:0] muap_stream_TDATA;
output  [31:0] muap_stream_TDEST;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg mua_stream_V_data_V_read;

reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [14:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_32;
reg    muap_stream_V_user_V_1_vld_in;
reg    muap_stream_V_user_V_1_ack_in;
wire    muap_stream_V_user_V_1_ack_out;
reg   [31:0] muap_stream_V_user_V_1_data_reg;
reg    muap_stream_V_user_V_1_sRdy;
reg    muap_stream_V_user_V_1_mVld;
reg    muap_stream_V_user_V_1_areset_d;
reg    muap_stream_V_id_V_1_vld_in;
wire    muap_stream_V_id_V_1_ack_out;
reg   [7:0] muap_stream_V_id_V_1_data_reg;
reg    muap_stream_V_id_V_1_sRdy;
reg    muap_stream_V_id_V_1_mVld;
reg    muap_stream_V_id_V_1_areset_d;
reg    muap_stream_V_data_V_1_vld_in;
wire    muap_stream_V_data_V_1_ack_out;
reg   [31:0] muap_stream_V_data_V_1_data_reg;
reg    muap_stream_V_data_V_1_sRdy;
reg    muap_stream_V_data_V_1_mVld;
reg    muap_stream_V_data_V_1_areset_d;
reg    muap_stream_V_dest_V_1_vld_in;
wire    muap_stream_V_dest_V_1_ack_out;
reg   [31:0] muap_stream_V_dest_V_1_data_reg;
reg    muap_stream_V_dest_V_1_sRdy;
reg    muap_stream_V_dest_V_1_mVld;
reg    muap_stream_V_dest_V_1_areset_d;
reg   [8:0] buf_2d_V_address0;
reg    buf_2d_V_ce0;
reg    buf_2d_V_we0;
wire   [31:0] buf_2d_V_d0;
wire   [31:0] buf_2d_V_q0;
reg   [7:0] start_cnt_address0;
reg    start_cnt_ce0;
reg    start_cnt_we0;
reg   [0:0] start_cnt_d0;
wire   [0:0] start_cnt_q0;
reg   [7:0] cnt_V_address0;
reg    cnt_V_ce0;
reg    cnt_V_we0;
reg   [2:0] cnt_V_d0;
wire   [2:0] cnt_V_q0;
reg   [7:0] Mn_V_address0;
reg    Mn_V_ce0;
reg    Mn_V_we0;
reg   [31:0] Mn_V_d0;
wire   [31:0] Mn_V_q0;
reg   [7:0] state_address0;
reg    state_ce0;
reg    state_we0;
reg   [1:0] state_d0;
wire   [1:0] state_q0;
reg    mua_stream_V_data_V_blk_n;
reg    muap_stream_TDATA_blk_n;
reg    ap_sig_cseq_ST_st17_fsm_13;
reg    ap_sig_189;
wire   [0:0] tmp_18_fu_588_p2;
reg    ap_sig_cseq_ST_st18_fsm_14;
reg    ap_sig_200;
reg   [0:0] tmp_18_reg_829;
reg   [0:0] if_pivotal_reg_251;
reg   [2:0] i_reg_263;
reg   [31:0] reg_325;
reg    ap_reg_ppiten_pp0_it2;
reg    ap_reg_ppiten_pp0_it0;
reg    ap_reg_ppiten_pp0_it1;
reg    ap_reg_ppiten_pp0_it3;
reg   [0:0] exitcond1_reg_735;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_735_pp0_iter1;
reg    ap_sig_cseq_ST_st16_fsm_12;
reg    ap_sig_228;
reg   [159:0] tmp_data_V_1_reg_609;
reg    ap_sig_235;
reg   [31:0] t_V_reg_614;
reg   [7:0] ch_V_reg_620;
reg   [7:0] ch_nn_3_V_reg_627;
reg   [7:0] ch_nn_2_V_reg_632;
reg   [7:0] ch_nn_1_V_reg_637;
reg   [7:0] ch_nn_0_V_reg_642;
reg   [31:0] loc_V_reg_647;
reg   [30:0] p_Result_s_reg_654;
reg   [0:0] j_reg_659;
wire   [31:0] p_Result_s_4_fu_417_p3;
reg   [31:0] p_Result_s_4_reg_665;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_263;
wire   [8:0] tmp_3_cast_fu_425_p1;
reg   [8:0] tmp_3_cast_reg_673;
wire   [8:0] tmp_19_cast_fu_446_p3;
reg   [8:0] tmp_19_cast_reg_678;
wire   [63:0] tmp_3_fu_453_p1;
reg   [63:0] tmp_3_reg_684;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_276;
reg   [7:0] start_cnt_addr_reg_696;
reg   [31:0] p_val_V_1_reg_701;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_288;
reg   [0:0] start_cnt_load_reg_717;
reg   [7:0] cnt_V_addr_reg_721;
reg   [2:0] cnt_V_load_reg_726;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_302;
wire   [0:0] tmp_7_fu_472_p2;
reg   [0:0] tmp_7_reg_731;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_311;
wire   [0:0] exitcond1_fu_478_p2;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_7;
reg    ap_sig_319;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_735_pp0_iter2;
wire   [2:0] i_1_fu_484_p2;
wire   [7:0] tmp_2_fu_494_p6;
reg   [7:0] tmp_2_reg_744;
reg   [31:0] buf_2d_V_load_reg_765;
reg   [0:0] start_cnt_load_1_reg_770;
wire   [0:0] if_pivotal_1_fu_560_p2;
reg   [7:0] state_addr_reg_780;
reg    ap_sig_cseq_ST_st12_fsm_8;
reg    ap_sig_351;
reg   [1:0] state_load_reg_785;
reg    ap_sig_cseq_ST_st13_fsm_9;
reg    ap_sig_359;
reg   [31:0] p_Result_2_fu_566_p4;
reg    ap_sig_cseq_ST_st14_fsm_10;
reg    ap_sig_368;
wire   [0:0] grp_fu_303_p2;
wire   [0:0] grp_fu_319_p2;
wire   [0:0] grp_fu_295_p2;
reg   [0:0] tmp_9_reg_812;
wire   [0:0] tmp_16_fu_579_p2;
reg   [0:0] tmp_16_reg_817;
reg    ap_sig_cseq_ST_st15_fsm_11;
reg    ap_sig_394;
reg   [7:0] Mn_V_addr_1_reg_821;
wire   [31:0] tmp_user_V_fu_593_p2;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_412;
reg   [31:0] tmp_data_V_reg_274;
wire   [63:0] tmp_5_cast_fu_441_p1;
wire   [63:0] tmp_20_cast_fu_461_p1;
wire   [63:0] tmp_21_cast_fu_517_p1;
wire   [63:0] tmp_s_fu_504_p1;
reg    ap_sig_468;
wire   [2:0] tmp_6_fu_466_p2;
wire   [0:0] tmp_17_fu_583_p2;
wire   [1:0] storemerge_fu_575_p1;
wire   [0:0] grp_fu_299_p2;
wire   [0:0] grp_fu_309_p2;
wire   [0:0] grp_fu_313_p2;
wire   [8:0] tmp_4_cast_fu_428_p3;
wire   [8:0] tmp_5_fu_435_p2;
wire   [8:0] tmp_4_fu_457_p2;
wire   [1:0] tmp_2_fu_494_p5;
wire   [8:0] tmp_cast_fu_509_p1;
wire   [8:0] tmp_15_fu_512_p2;
wire   [0:0] slt_fu_527_p2;
wire   [0:0] slt9_fu_538_p2;
wire   [0:0] rev8_fu_532_p2;
wire   [0:0] rev_fu_542_p2;
wire   [0:0] tmp_fu_548_p2;
wire   [0:0] not_s_fu_522_p2;
wire   [0:0] tmp_8_fu_554_p2;
reg   [14:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 15'b1;
#0 muap_stream_V_user_V_1_mVld = 1'b0;
#0 muap_stream_V_id_V_1_mVld = 1'b0;
#0 muap_stream_V_data_V_1_mVld = 1'b0;
#0 muap_stream_V_dest_V_1_mVld = 1'b0;
#0 ap_reg_ppiten_pp0_it2 = 1'b0;
#0 ap_reg_ppiten_pp0_it0 = 1'b0;
#0 ap_reg_ppiten_pp0_it1 = 1'b0;
#0 ap_reg_ppiten_pp0_it3 = 1'b0;
end

spk_dect_buf_2d_V #(
    .DataWidth( 32 ),
    .AddressRange( 320 ),
    .AddressWidth( 9 ))
buf_2d_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(buf_2d_V_address0),
    .ce0(buf_2d_V_ce0),
    .we0(buf_2d_V_we0),
    .d0(buf_2d_V_d0),
    .q0(buf_2d_V_q0)
);

spk_dect_start_cnt #(
    .DataWidth( 1 ),
    .AddressRange( 160 ),
    .AddressWidth( 8 ))
start_cnt_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(start_cnt_address0),
    .ce0(start_cnt_ce0),
    .we0(start_cnt_we0),
    .d0(start_cnt_d0),
    .q0(start_cnt_q0)
);

spk_dect_cnt_V #(
    .DataWidth( 3 ),
    .AddressRange( 160 ),
    .AddressWidth( 8 ))
cnt_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(cnt_V_address0),
    .ce0(cnt_V_ce0),
    .we0(cnt_V_we0),
    .d0(cnt_V_d0),
    .q0(cnt_V_q0)
);

spk_dect_Mn_V #(
    .DataWidth( 32 ),
    .AddressRange( 160 ),
    .AddressWidth( 8 ))
Mn_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(Mn_V_address0),
    .ce0(Mn_V_ce0),
    .we0(Mn_V_we0),
    .d0(Mn_V_d0),
    .q0(Mn_V_q0)
);

spk_dect_state #(
    .DataWidth( 2 ),
    .AddressRange( 160 ),
    .AddressWidth( 8 ))
state_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(state_address0),
    .ce0(state_ce0),
    .we0(state_we0),
    .d0(state_d0),
    .q0(state_q0)
);

spk_dect_mux_4to1_sel2_8_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
spk_dect_mux_4to1_sel2_8_1_U1(
    .din1(ch_nn_0_V_reg_642),
    .din2(ch_nn_1_V_reg_637),
    .din3(ch_nn_2_V_reg_632),
    .din4(ch_nn_3_V_reg_627),
    .din5(tmp_2_fu_494_p5),
    .dout(tmp_2_fu_494_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_7) & ~(1'b0 == exitcond1_fu_478_p2))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b0;
        end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
            ap_reg_ppiten_pp0_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_7) & (1'b0 == exitcond1_fu_478_p2))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b1;
        end else if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) | ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_7) & ~(1'b0 == exitcond1_fu_478_p2)))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ppiten_pp0_it3 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        muap_stream_V_data_V_1_mVld <= 1'b0;
    end else begin
        if ((1'b1 == muap_stream_V_data_V_1_vld_in)) begin
            muap_stream_V_data_V_1_mVld <= 1'b1;
        end else if ((1'b1 == muap_stream_V_data_V_1_ack_out)) begin
            muap_stream_V_data_V_1_mVld <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        muap_stream_V_dest_V_1_mVld <= 1'b0;
    end else begin
        if ((1'b1 == muap_stream_V_dest_V_1_vld_in)) begin
            muap_stream_V_dest_V_1_mVld <= 1'b1;
        end else if ((1'b1 == muap_stream_V_dest_V_1_ack_out)) begin
            muap_stream_V_dest_V_1_mVld <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        muap_stream_V_id_V_1_mVld <= 1'b0;
    end else begin
        if ((1'b1 == muap_stream_V_id_V_1_vld_in)) begin
            muap_stream_V_id_V_1_mVld <= 1'b1;
        end else if ((1'b1 == muap_stream_V_id_V_1_ack_out)) begin
            muap_stream_V_id_V_1_mVld <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        muap_stream_V_user_V_1_mVld <= 1'b0;
    end else begin
        if ((1'b1 == muap_stream_V_user_V_1_vld_in)) begin
            muap_stream_V_user_V_1_mVld <= 1'b1;
        end else if ((1'b1 == muap_stream_V_user_V_1_ack_out)) begin
            muap_stream_V_user_V_1_mVld <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it0) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_7) & (1'b0 == exitcond1_fu_478_p2))) begin
        i_reg_263 <= i_1_fu_484_p2;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        i_reg_263 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it3) & (1'b0 == ap_reg_ppstg_exitcond1_reg_735_pp0_iter2))) begin
        if_pivotal_reg_251 <= if_pivotal_1_fu_560_p2;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        if_pivotal_reg_251 <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st14_fsm_10) & (state_load_reg_785 == ap_const_lv2_1) & (1'b0 == grp_fu_303_p2) & (1'b0 == grp_fu_319_p2) & ~(1'b0 == if_pivotal_reg_251))) begin
        tmp_data_V_reg_274 <= p_Result_2_fu_566_p4;
    end else if ((((state_load_reg_785 == ap_const_lv2_0) & (1'b1 == ap_sig_cseq_ST_st15_fsm_11)) | ((1'b1 == ap_sig_cseq_ST_st14_fsm_10) & (state_load_reg_785 == ap_const_lv2_1) & ~(1'b0 == grp_fu_303_p2)) | ((1'b1 == ap_sig_cseq_ST_st14_fsm_10) & (state_load_reg_785 == ap_const_lv2_3)) | ((1'b1 == ap_sig_cseq_ST_st14_fsm_10) & (state_load_reg_785 == ap_const_lv2_1) & (1'b0 == grp_fu_303_p2) & (1'b0 == grp_fu_319_p2) & (1'b0 == if_pivotal_reg_251)) | ((1'b1 == ap_sig_cseq_ST_st14_fsm_10) & (state_load_reg_785 == ap_const_lv2_2)) | ((1'b1 == ap_sig_cseq_ST_st14_fsm_10) & (state_load_reg_785 == ap_const_lv2_1) & (1'b0 == grp_fu_303_p2) & ~(1'b0 == grp_fu_319_p2)))) begin
        tmp_data_V_reg_274 <= p_val_V_1_reg_701;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st15_fsm_11)) begin
        Mn_V_addr_1_reg_821 <= tmp_3_reg_684;
        tmp_16_reg_817 <= tmp_16_fu_579_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_7)) begin
        ap_reg_ppstg_exitcond1_reg_735_pp0_iter1 <= exitcond1_reg_735;
        exitcond1_reg_735 <= exitcond1_fu_478_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == 1'b1)) begin
        ap_reg_ppstg_exitcond1_reg_735_pp0_iter2 <= ap_reg_ppstg_exitcond1_reg_735_pp0_iter1;
        muap_stream_V_data_V_1_areset_d <= ap_rst_n_inv;
        muap_stream_V_dest_V_1_areset_d <= ap_rst_n_inv;
        muap_stream_V_id_V_1_areset_d <= ap_rst_n_inv;
        muap_stream_V_user_V_1_areset_d <= ap_rst_n_inv;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond1_reg_735_pp0_iter1))) begin
        buf_2d_V_load_reg_765 <= buf_2d_V_q0;
        start_cnt_load_1_reg_770 <= start_cnt_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_235)) begin
        ch_V_reg_620 <= {{mua_stream_V_data_V_dout[ap_const_lv32_67 : ap_const_lv32_60]}};
        ch_nn_0_V_reg_642 <= {{mua_stream_V_data_V_dout[ap_const_lv32_47 : ap_const_lv32_40]}};
        ch_nn_1_V_reg_637 <= {{mua_stream_V_data_V_dout[ap_const_lv32_4F : ap_const_lv32_48]}};
        ch_nn_2_V_reg_632 <= {{mua_stream_V_data_V_dout[ap_const_lv32_57 : ap_const_lv32_50]}};
        ch_nn_3_V_reg_627 <= {{mua_stream_V_data_V_dout[ap_const_lv32_5F : ap_const_lv32_58]}};
        j_reg_659 <= mua_stream_V_data_V_dout[ap_const_lv32_80];
        loc_V_reg_647 <= {{mua_stream_V_data_V_dout[ap_const_lv32_3F : ap_const_lv32_20]}};
        p_Result_s_reg_654 <= {{mua_stream_V_data_V_dout[ap_const_lv32_1F : ap_const_lv32_1]}};
        t_V_reg_614 <= {{mua_stream_V_data_V_dout[ap_const_lv32_9F : ap_const_lv32_80]}};
        tmp_data_V_1_reg_609 <= mua_stream_V_data_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(start_cnt_q0 == 1'b0))) begin
        cnt_V_addr_reg_721 <= tmp_3_reg_684;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        cnt_V_load_reg_726 <= cnt_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == muap_stream_V_data_V_1_vld_in) & (1'b1 == muap_stream_V_data_V_1_sRdy))) begin
        muap_stream_V_data_V_1_data_reg <= tmp_data_V_reg_274;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == muap_stream_V_dest_V_1_vld_in) & (1'b1 == muap_stream_V_dest_V_1_sRdy))) begin
        muap_stream_V_dest_V_1_data_reg <= {{tmp_data_V_1_reg_609[ap_const_lv32_5F : ap_const_lv32_40]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == muap_stream_V_id_V_1_vld_in) & (1'b1 == muap_stream_V_id_V_1_sRdy))) begin
        muap_stream_V_id_V_1_data_reg <= ch_V_reg_620;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == muap_stream_V_user_V_1_vld_in) & (1'b1 == muap_stream_V_user_V_1_sRdy))) begin
        muap_stream_V_user_V_1_data_reg <= tmp_user_V_fu_593_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        p_Result_s_4_reg_665[31 : 1] <= p_Result_s_4_fu_417_p3[31 : 1];
        tmp_19_cast_reg_678[5] <= tmp_19_cast_fu_446_p3[5];
tmp_19_cast_reg_678[7] <= tmp_19_cast_fu_446_p3[7];
        tmp_3_cast_reg_673[7 : 0] <= tmp_3_cast_fu_425_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        p_val_V_1_reg_701 <= buf_2d_V_q0;
        start_cnt_load_reg_717 <= start_cnt_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_reg_ppiten_pp0_it2) & (1'b0 == ap_reg_ppstg_exitcond1_reg_735_pp0_iter1)) | (1'b1 == ap_sig_cseq_ST_st16_fsm_12))) begin
        reg_325 <= Mn_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        start_cnt_addr_reg_696 <= tmp_3_fu_453_p1;
        tmp_3_reg_684[7 : 0] <= tmp_3_fu_453_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_8)) begin
        state_addr_reg_780 <= tmp_3_reg_684;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st13_fsm_9)) begin
        state_load_reg_785 <= state_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st17_fsm_13) & ~((tmp_18_fu_588_p2 == 1'b0) & (1'b0 == muap_stream_V_user_V_1_ack_in)))) begin
        tmp_18_reg_829 <= tmp_18_fu_588_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_7) & (1'b0 == exitcond1_fu_478_p2))) begin
        tmp_2_reg_744 <= tmp_2_fu_494_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        tmp_7_reg_731 <= tmp_7_fu_472_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st14_fsm_10) & (state_load_reg_785 == ap_const_lv2_0))) begin
        tmp_9_reg_812 <= grp_fu_295_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st17_fsm_13)) begin
        Mn_V_address0 = Mn_V_addr_1_reg_821;
    end else if ((((1'b1 == ap_sig_cseq_ST_st15_fsm_11) & (((state_load_reg_785 == ap_const_lv2_0) & (1'b0 == tmp_16_fu_579_p2)) | ((state_load_reg_785 == ap_const_lv2_1) & (1'b0 == tmp_16_fu_579_p2)) | ((state_load_reg_785 == ap_const_lv2_2) & (1'b0 == tmp_16_fu_579_p2)) | ((state_load_reg_785 == ap_const_lv2_3) & (1'b0 == tmp_16_fu_579_p2)))) | ((1'b1 == ap_sig_cseq_ST_st15_fsm_11) & (((state_load_reg_785 == ap_const_lv2_0) & ~(1'b0 == tmp_16_fu_579_p2)) | ((state_load_reg_785 == ap_const_lv2_1) & ~(1'b0 == tmp_16_fu_579_p2)) | ((state_load_reg_785 == ap_const_lv2_2) & ~(1'b0 == tmp_16_fu_579_p2)) | ((state_load_reg_785 == ap_const_lv2_3) & ~(1'b0 == tmp_16_fu_579_p2)))))) begin
        Mn_V_address0 = tmp_3_reg_684;
    end else if (((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_7))) begin
        Mn_V_address0 = tmp_s_fu_504_p1;
    end else begin
        Mn_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st17_fsm_13) & ~((tmp_18_fu_588_p2 == 1'b0) & (1'b0 == muap_stream_V_user_V_1_ack_in))) | ((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_7)) | ((1'b1 == ap_sig_cseq_ST_st15_fsm_11) & (((state_load_reg_785 == ap_const_lv2_0) & (1'b0 == tmp_16_fu_579_p2)) | ((state_load_reg_785 == ap_const_lv2_1) & (1'b0 == tmp_16_fu_579_p2)) | ((state_load_reg_785 == ap_const_lv2_2) & (1'b0 == tmp_16_fu_579_p2)) | ((state_load_reg_785 == ap_const_lv2_3) & (1'b0 == tmp_16_fu_579_p2)))) | ((1'b1 == ap_sig_cseq_ST_st15_fsm_11) & (((state_load_reg_785 == ap_const_lv2_0) & ~(1'b0 == tmp_16_fu_579_p2)) | ((state_load_reg_785 == ap_const_lv2_1) & ~(1'b0 == tmp_16_fu_579_p2)) | ((state_load_reg_785 == ap_const_lv2_2) & ~(1'b0 == tmp_16_fu_579_p2)) | ((state_load_reg_785 == ap_const_lv2_3) & ~(1'b0 == tmp_16_fu_579_p2)))))) begin
        Mn_V_ce0 = 1'b1;
    end else begin
        Mn_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st17_fsm_13)) begin
        Mn_V_d0 = p_Result_s_4_reg_665;
    end else if (((1'b1 == ap_sig_cseq_ST_st15_fsm_11) & (((state_load_reg_785 == ap_const_lv2_0) & (1'b0 == tmp_16_fu_579_p2)) | ((state_load_reg_785 == ap_const_lv2_1) & (1'b0 == tmp_16_fu_579_p2)) | ((state_load_reg_785 == ap_const_lv2_2) & (1'b0 == tmp_16_fu_579_p2)) | ((state_load_reg_785 == ap_const_lv2_3) & (1'b0 == tmp_16_fu_579_p2))))) begin
        Mn_V_d0 = ap_const_lv32_0;
    end else begin
        Mn_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st15_fsm_11) & (((state_load_reg_785 == ap_const_lv2_0) & (1'b0 == tmp_16_fu_579_p2)) | ((state_load_reg_785 == ap_const_lv2_1) & (1'b0 == tmp_16_fu_579_p2)) | ((state_load_reg_785 == ap_const_lv2_2) & (1'b0 == tmp_16_fu_579_p2)) | ((state_load_reg_785 == ap_const_lv2_3) & (1'b0 == tmp_16_fu_579_p2)))) | ((1'b1 == ap_sig_cseq_ST_st17_fsm_13) & ~((tmp_18_fu_588_p2 == 1'b0) & (1'b0 == muap_stream_V_user_V_1_ack_in)) & ~(1'b0 == tmp_16_reg_817) & ~(1'b0 == tmp_17_fu_583_p2)))) begin
        Mn_V_we0 = 1'b1;
    end else begin
        Mn_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st18_fsm_14) & ~(ap_sig_468 | ((1'b0 == tmp_18_reg_829) & (1'b0 == muap_stream_V_user_V_1_ack_in))))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st18_fsm_14) & ~(ap_sig_468 | ((1'b0 == tmp_18_reg_829) & (1'b0 == muap_stream_V_user_V_1_ack_in))))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_319) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_351) begin
        ap_sig_cseq_ST_st12_fsm_8 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_8 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_359) begin
        ap_sig_cseq_ST_st13_fsm_9 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_9 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_368) begin
        ap_sig_cseq_ST_st14_fsm_10 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_10 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_394) begin
        ap_sig_cseq_ST_st15_fsm_11 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_11 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_228) begin
        ap_sig_cseq_ST_st16_fsm_12 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_12 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_189) begin
        ap_sig_cseq_ST_st17_fsm_13 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_13 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_200) begin
        ap_sig_cseq_ST_st18_fsm_14 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_14 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_32) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_263) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_276) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_288) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_302) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_311) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_412) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        buf_2d_V_address0 = tmp_5_cast_fu_441_p1;
    end else if (((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_7))) begin
        buf_2d_V_address0 = tmp_21_cast_fu_517_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        buf_2d_V_address0 = tmp_20_cast_fu_461_p1;
    end else begin
        buf_2d_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2) | ((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_7)))) begin
        buf_2d_V_ce0 = 1'b1;
    end else begin
        buf_2d_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        buf_2d_V_we0 = 1'b1;
    end else begin
        buf_2d_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6))) begin
        cnt_V_address0 = cnt_V_addr_reg_721;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        cnt_V_address0 = tmp_3_reg_684;
    end else begin
        cnt_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6))) begin
        cnt_V_ce0 = 1'b1;
    end else begin
        cnt_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        cnt_V_d0 = ap_const_lv3_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        cnt_V_d0 = tmp_6_fu_466_p2;
    end else begin
        cnt_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) | ((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(1'b0 == start_cnt_load_reg_717) & ~(1'b0 == tmp_7_reg_731)))) begin
        cnt_V_we0 = 1'b1;
    end else begin
        cnt_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        mua_stream_V_data_V_blk_n = mua_stream_V_data_V_empty_n;
    end else begin
        mua_stream_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_235)) begin
        mua_stream_V_data_V_read = 1'b1;
    end else begin
        mua_stream_V_data_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st17_fsm_13) & (tmp_18_fu_588_p2 == 1'b0)) | ((1'b1 == ap_sig_cseq_ST_st18_fsm_14) & (1'b0 == tmp_18_reg_829)))) begin
        muap_stream_TDATA_blk_n = muap_stream_V_data_V_1_sRdy;
    end else begin
        muap_stream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st17_fsm_13) & (tmp_18_fu_588_p2 == 1'b0) & ~((tmp_18_fu_588_p2 == 1'b0) & (1'b0 == muap_stream_V_user_V_1_ack_in)))) begin
        muap_stream_V_data_V_1_vld_in = 1'b1;
    end else begin
        muap_stream_V_data_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st17_fsm_13) & (tmp_18_fu_588_p2 == 1'b0) & ~((tmp_18_fu_588_p2 == 1'b0) & (1'b0 == muap_stream_V_user_V_1_ack_in)))) begin
        muap_stream_V_dest_V_1_vld_in = 1'b1;
    end else begin
        muap_stream_V_dest_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st17_fsm_13) & (tmp_18_fu_588_p2 == 1'b0) & ~((tmp_18_fu_588_p2 == 1'b0) & (1'b0 == muap_stream_V_user_V_1_ack_in)))) begin
        muap_stream_V_id_V_1_vld_in = 1'b1;
    end else begin
        muap_stream_V_id_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st17_fsm_13) & (tmp_18_fu_588_p2 == 1'b0) & ~((tmp_18_fu_588_p2 == 1'b0) & (1'b0 == muap_stream_V_user_V_1_ack_in)))) begin
        muap_stream_V_user_V_1_vld_in = 1'b1;
    end else begin
        muap_stream_V_user_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st14_fsm_10) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6))) begin
        start_cnt_address0 = start_cnt_addr_reg_696;
    end else if (((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_7))) begin
        start_cnt_address0 = tmp_s_fu_504_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        start_cnt_address0 = tmp_3_fu_453_p1;
    end else begin
        start_cnt_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st14_fsm_10) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6) | ((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_7)))) begin
        start_cnt_ce0 = 1'b1;
    end else begin
        start_cnt_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st14_fsm_10)) begin
        start_cnt_d0 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        start_cnt_d0 = 1'b0;
    end else begin
        start_cnt_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st14_fsm_10) & (state_load_reg_785 == ap_const_lv2_1) & (1'b0 == grp_fu_303_p2) & (1'b0 == grp_fu_319_p2) & ~(1'b0 == if_pivotal_reg_251)) | ((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(1'b0 == start_cnt_load_reg_717) & ~(1'b0 == tmp_7_reg_731)))) begin
        start_cnt_we0 = 1'b1;
    end else begin
        start_cnt_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st15_fsm_11) | ((1'b1 == ap_sig_cseq_ST_st14_fsm_10) & (state_load_reg_785 == ap_const_lv2_1) & ~(1'b0 == grp_fu_303_p2)) | ((1'b1 == ap_sig_cseq_ST_st14_fsm_10) & (1'b0 == grp_fu_303_p2) & (1'b0 == grp_fu_319_p2) & (state_load_reg_785 == ap_const_lv2_2)) | ((1'b1 == ap_sig_cseq_ST_st14_fsm_10) & (1'b0 == grp_fu_303_p2) & (state_load_reg_785 == ap_const_lv2_2) & ~(1'b0 == grp_fu_319_p2) & (1'b0 == grp_fu_295_p2)) | ((1'b1 == ap_sig_cseq_ST_st14_fsm_10) & ~(1'b0 == grp_fu_303_p2) & (state_load_reg_785 == ap_const_lv2_2)) | ((1'b1 == ap_sig_cseq_ST_st14_fsm_10) & (state_load_reg_785 == ap_const_lv2_1) & (1'b0 == grp_fu_303_p2) & (1'b0 == grp_fu_319_p2)) | ((1'b1 == ap_sig_cseq_ST_st14_fsm_10) & (state_load_reg_785 == ap_const_lv2_1) & (1'b0 == grp_fu_303_p2) & ~(1'b0 == grp_fu_319_p2) & (1'b0 == grp_fu_295_p2)))) begin
        state_address0 = state_addr_reg_780;
    end else if ((1'b1 == ap_sig_cseq_ST_st12_fsm_8)) begin
        state_address0 = tmp_3_reg_684;
    end else begin
        state_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st12_fsm_8) | (1'b1 == ap_sig_cseq_ST_st15_fsm_11) | ((1'b1 == ap_sig_cseq_ST_st14_fsm_10) & (state_load_reg_785 == ap_const_lv2_1) & ~(1'b0 == grp_fu_303_p2)) | ((1'b1 == ap_sig_cseq_ST_st14_fsm_10) & (1'b0 == grp_fu_303_p2) & (1'b0 == grp_fu_319_p2) & (state_load_reg_785 == ap_const_lv2_2)) | ((1'b1 == ap_sig_cseq_ST_st14_fsm_10) & (1'b0 == grp_fu_303_p2) & (state_load_reg_785 == ap_const_lv2_2) & ~(1'b0 == grp_fu_319_p2) & (1'b0 == grp_fu_295_p2)) | ((1'b1 == ap_sig_cseq_ST_st14_fsm_10) & ~(1'b0 == grp_fu_303_p2) & (state_load_reg_785 == ap_const_lv2_2)) | ((1'b1 == ap_sig_cseq_ST_st14_fsm_10) & (state_load_reg_785 == ap_const_lv2_1) & (1'b0 == grp_fu_303_p2) & (1'b0 == grp_fu_319_p2)) | ((1'b1 == ap_sig_cseq_ST_st14_fsm_10) & (state_load_reg_785 == ap_const_lv2_1) & (1'b0 == grp_fu_303_p2) & ~(1'b0 == grp_fu_319_p2) & (1'b0 == grp_fu_295_p2)))) begin
        state_ce0 = 1'b1;
    end else begin
        state_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st15_fsm_11)) begin
        state_d0 = storemerge_fu_575_p1;
    end else if ((((1'b1 == ap_sig_cseq_ST_st14_fsm_10) & (state_load_reg_785 == ap_const_lv2_1) & ~(1'b0 == grp_fu_303_p2)) | ((1'b1 == ap_sig_cseq_ST_st14_fsm_10) & ~(1'b0 == grp_fu_303_p2) & (state_load_reg_785 == ap_const_lv2_2)))) begin
        state_d0 = ap_const_lv2_1;
    end else if ((((1'b1 == ap_sig_cseq_ST_st14_fsm_10) & (1'b0 == grp_fu_303_p2) & (state_load_reg_785 == ap_const_lv2_2) & ~(1'b0 == grp_fu_319_p2) & (1'b0 == grp_fu_295_p2)) | ((1'b1 == ap_sig_cseq_ST_st14_fsm_10) & (state_load_reg_785 == ap_const_lv2_1) & (1'b0 == grp_fu_303_p2) & ~(1'b0 == grp_fu_319_p2) & (1'b0 == grp_fu_295_p2)))) begin
        state_d0 = ap_const_lv2_0;
    end else if ((((1'b1 == ap_sig_cseq_ST_st14_fsm_10) & (1'b0 == grp_fu_303_p2) & (1'b0 == grp_fu_319_p2) & (state_load_reg_785 == ap_const_lv2_2)) | ((1'b1 == ap_sig_cseq_ST_st14_fsm_10) & (state_load_reg_785 == ap_const_lv2_1) & (1'b0 == grp_fu_303_p2) & (1'b0 == grp_fu_319_p2)))) begin
        state_d0 = ap_const_lv2_2;
    end else begin
        state_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((state_load_reg_785 == ap_const_lv2_0) & (1'b1 == ap_sig_cseq_ST_st15_fsm_11)) | ((1'b1 == ap_sig_cseq_ST_st14_fsm_10) & (state_load_reg_785 == ap_const_lv2_1) & ~(1'b0 == grp_fu_303_p2)) | ((1'b1 == ap_sig_cseq_ST_st14_fsm_10) & (1'b0 == grp_fu_303_p2) & (1'b0 == grp_fu_319_p2) & (state_load_reg_785 == ap_const_lv2_2)) | ((1'b1 == ap_sig_cseq_ST_st14_fsm_10) & (1'b0 == grp_fu_303_p2) & (state_load_reg_785 == ap_const_lv2_2) & ~(1'b0 == grp_fu_319_p2) & (1'b0 == grp_fu_295_p2)) | ((1'b1 == ap_sig_cseq_ST_st14_fsm_10) & ~(1'b0 == grp_fu_303_p2) & (state_load_reg_785 == ap_const_lv2_2)) | ((1'b1 == ap_sig_cseq_ST_st14_fsm_10) & (state_load_reg_785 == ap_const_lv2_1) & (1'b0 == grp_fu_303_p2) & (1'b0 == grp_fu_319_p2)) | ((1'b1 == ap_sig_cseq_ST_st14_fsm_10) & (state_load_reg_785 == ap_const_lv2_1) & (1'b0 == grp_fu_303_p2) & ~(1'b0 == grp_fu_319_p2) & (1'b0 == grp_fu_295_p2)))) begin
        state_we0 = 1'b1;
    end else begin
        state_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~ap_sig_235) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : begin
            if ((start_cnt_q0 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st5_fsm_4 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_7;
        end
        ap_ST_pp0_stg0_fsm_7 : begin
            if ((~((1'b1 == ap_reg_ppiten_pp0_it3) & ~(1'b1 == ap_reg_ppiten_pp0_it2)) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & ~(1'b0 == exitcond1_fu_478_p2) & ~(1'b1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_7;
            end else if (((1'b1 == ap_reg_ppiten_pp0_it0) & ~(1'b0 == exitcond1_fu_478_p2) & ~(1'b1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_st12_fsm_8;
            end else begin
                ap_NS_fsm = ap_ST_st12_fsm_8;
            end
        end
        ap_ST_st12_fsm_8 : begin
            ap_NS_fsm = ap_ST_st13_fsm_9;
        end
        ap_ST_st13_fsm_9 : begin
            ap_NS_fsm = ap_ST_st14_fsm_10;
        end
        ap_ST_st14_fsm_10 : begin
            ap_NS_fsm = ap_ST_st15_fsm_11;
        end
        ap_ST_st15_fsm_11 : begin
            if ((((state_load_reg_785 == ap_const_lv2_0) & (1'b0 == tmp_16_fu_579_p2)) | ((state_load_reg_785 == ap_const_lv2_1) & (1'b0 == tmp_16_fu_579_p2)) | ((state_load_reg_785 == ap_const_lv2_2) & (1'b0 == tmp_16_fu_579_p2)) | ((state_load_reg_785 == ap_const_lv2_3) & (1'b0 == tmp_16_fu_579_p2)))) begin
                ap_NS_fsm = ap_ST_st17_fsm_13;
            end else begin
                ap_NS_fsm = ap_ST_st16_fsm_12;
            end
        end
        ap_ST_st16_fsm_12 : begin
            ap_NS_fsm = ap_ST_st17_fsm_13;
        end
        ap_ST_st17_fsm_13 : begin
            if (~((tmp_18_fu_588_p2 == 1'b0) & (1'b0 == muap_stream_V_user_V_1_ack_in))) begin
                ap_NS_fsm = ap_ST_st18_fsm_14;
            end else begin
                ap_NS_fsm = ap_ST_st17_fsm_13;
            end
        end
        ap_ST_st18_fsm_14 : begin
            if (~(ap_sig_468 | ((1'b0 == tmp_18_reg_829) & (1'b0 == muap_stream_V_user_V_1_ack_in)))) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st18_fsm_14;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

always @ (*) begin
    ap_sig_189 = (1'b1 == ap_CS_fsm[ap_const_lv32_D]);
end

always @ (*) begin
    ap_sig_200 = (1'b1 == ap_CS_fsm[ap_const_lv32_E]);
end

always @ (*) begin
    ap_sig_228 = (1'b1 == ap_CS_fsm[ap_const_lv32_C]);
end

always @ (*) begin
    ap_sig_235 = ((ap_start == 1'b0) | (mua_stream_V_data_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_sig_263 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_276 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_288 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_302 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_311 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_319 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_32 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_351 = (1'b1 == ap_CS_fsm[ap_const_lv32_8]);
end

always @ (*) begin
    ap_sig_359 = (1'b1 == ap_CS_fsm[ap_const_lv32_9]);
end

always @ (*) begin
    ap_sig_368 = (1'b1 == ap_CS_fsm[ap_const_lv32_A]);
end

always @ (*) begin
    ap_sig_394 = (1'b1 == ap_CS_fsm[ap_const_lv32_B]);
end

always @ (*) begin
    ap_sig_412 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_468 = ((muap_stream_V_user_V_1_sRdy == 1'b0) | (muap_stream_V_id_V_1_sRdy == 1'b0) | (muap_stream_V_data_V_1_sRdy == 1'b0) | (muap_stream_V_dest_V_1_sRdy == 1'b0));
end

assign buf_2d_V_d0 = {{p_Result_s_reg_654}, {1'b0}};

assign exitcond1_fu_478_p2 = ((i_reg_263 == ap_const_lv3_4) ? 1'b1 : 1'b0);

assign grp_fu_295_p2 = (($signed(p_val_V_1_reg_701) < $signed(loc_V_reg_647)) ? 1'b1 : 1'b0);

assign grp_fu_299_p2 = (($signed(p_val_V_1_reg_701) > $signed(p_Result_s_4_reg_665)) ? 1'b1 : 1'b0);

assign grp_fu_303_p2 = (grp_fu_295_p2 & grp_fu_299_p2);

assign grp_fu_309_p2 = (($signed(p_val_V_1_reg_701) < $signed(loc_V_reg_647)) ? 1'b1 : 1'b0);

assign grp_fu_313_p2 = (grp_fu_309_p2 ^ 1'b1);

assign grp_fu_319_p2 = (grp_fu_313_p2 | grp_fu_299_p2);

assign i_1_fu_484_p2 = (i_reg_263 + ap_const_lv3_1);

assign if_pivotal_1_fu_560_p2 = (if_pivotal_reg_251 & tmp_8_fu_554_p2);

assign muap_stream_TDATA = muap_stream_V_data_V_1_data_reg;

assign muap_stream_TDEST = muap_stream_V_dest_V_1_data_reg;

assign muap_stream_TID = muap_stream_V_id_V_1_data_reg;

assign muap_stream_TUSER = muap_stream_V_user_V_1_data_reg;

assign muap_stream_TVALID = muap_stream_V_dest_V_1_mVld;

assign muap_stream_V_data_V_1_ack_out = muap_stream_TREADY;

always @ (*) begin
    muap_stream_V_data_V_1_sRdy = (~muap_stream_V_data_V_1_areset_d & (muap_stream_TREADY | ~muap_stream_V_data_V_1_mVld));
end

assign muap_stream_V_dest_V_1_ack_out = muap_stream_TREADY;

always @ (*) begin
    muap_stream_V_dest_V_1_sRdy = (~muap_stream_V_dest_V_1_areset_d & (muap_stream_TREADY | ~muap_stream_V_dest_V_1_mVld));
end

assign muap_stream_V_id_V_1_ack_out = muap_stream_TREADY;

always @ (*) begin
    muap_stream_V_id_V_1_sRdy = (~muap_stream_V_id_V_1_areset_d & (muap_stream_TREADY | ~muap_stream_V_id_V_1_mVld));
end

always @ (*) begin
    muap_stream_V_user_V_1_ack_in = (~muap_stream_V_user_V_1_areset_d & (muap_stream_TREADY | ~muap_stream_V_user_V_1_mVld));
end

assign muap_stream_V_user_V_1_ack_out = muap_stream_TREADY;

always @ (*) begin
    muap_stream_V_user_V_1_sRdy = (~muap_stream_V_user_V_1_areset_d & (muap_stream_TREADY | ~muap_stream_V_user_V_1_mVld));
end

assign not_s_fu_522_p2 = (start_cnt_load_1_reg_770 ^ 1'b1);

always @ (*) begin
    p_Result_2_fu_566_p4 = p_val_V_1_reg_701;
    p_Result_2_fu_566_p4[ap_const_lv32_0] = |(1'b1);
end

assign p_Result_s_4_fu_417_p3 = {{p_Result_s_reg_654}, {1'b0}};

assign rev8_fu_532_p2 = (slt_fu_527_p2 ^ 1'b1);

assign rev_fu_542_p2 = (slt9_fu_538_p2 ^ 1'b1);

assign slt9_fu_538_p2 = (($signed(buf_2d_V_load_reg_765) < $signed(p_val_V_1_reg_701)) ? 1'b1 : 1'b0);

assign slt_fu_527_p2 = (($signed(reg_325) < $signed(p_val_V_1_reg_701)) ? 1'b1 : 1'b0);

assign storemerge_fu_575_p1 = tmp_9_reg_812;

assign tmp_15_fu_512_p2 = (tmp_19_cast_reg_678 + tmp_cast_fu_509_p1);

assign tmp_16_fu_579_p2 = (($signed(p_Result_s_4_reg_665) < $signed(loc_V_reg_647)) ? 1'b1 : 1'b0);

assign tmp_17_fu_583_p2 = (($signed(p_Result_s_4_reg_665) < $signed(reg_325)) ? 1'b1 : 1'b0);

assign tmp_18_fu_588_p2 = ((t_V_reg_614 == ap_const_lv32_0) ? 1'b1 : 1'b0);

assign tmp_19_cast_fu_446_p3 = ((j_reg_659[0:0] === 1'b1) ? ap_const_lv9_0 : ap_const_lv9_A0);

assign tmp_20_cast_fu_461_p1 = tmp_4_fu_457_p2;

assign tmp_21_cast_fu_517_p1 = tmp_15_fu_512_p2;

assign tmp_2_fu_494_p5 = i_reg_263[1:0];

assign tmp_3_cast_fu_425_p1 = ch_V_reg_620;

assign tmp_3_fu_453_p1 = ch_V_reg_620;

assign tmp_4_cast_fu_428_p3 = ((j_reg_659[0:0] === 1'b1) ? ap_const_lv9_A0 : ap_const_lv9_0);

assign tmp_4_fu_457_p2 = (tmp_19_cast_reg_678 + tmp_3_cast_reg_673);

assign tmp_5_cast_fu_441_p1 = tmp_5_fu_435_p2;

assign tmp_5_fu_435_p2 = (tmp_4_cast_fu_428_p3 + tmp_3_cast_fu_425_p1);

assign tmp_6_fu_466_p2 = (cnt_V_load_reg_726 + ap_const_lv3_1);

assign tmp_7_fu_472_p2 = ((tmp_6_fu_466_p2 == ap_const_lv3_4) ? 1'b1 : 1'b0);

assign tmp_8_fu_554_p2 = (tmp_fu_548_p2 & not_s_fu_522_p2);

assign tmp_cast_fu_509_p1 = tmp_2_reg_744;

assign tmp_fu_548_p2 = (rev8_fu_532_p2 & rev_fu_542_p2);

assign tmp_s_fu_504_p1 = tmp_2_reg_744;

assign tmp_user_V_fu_593_p2 = ($signed(t_V_reg_614) + $signed(ap_const_lv32_FFFFFFFF));

always @ (posedge ap_clk) begin
    p_Result_s_4_reg_665[0] <= 1'b0;
    tmp_3_cast_reg_673[8] <= 1'b0;
    tmp_19_cast_reg_678[4:0] <= 5'b00000;
    tmp_19_cast_reg_678[6:6] <= 1'b0;
    tmp_19_cast_reg_678[8] <= 1'b0;
    tmp_3_reg_684[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
end

endmodule //spk_dect
