// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="rt_feedback,hls_ip_2016_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7k325tffg900-2,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.210000,HLS_SYN_LAT=12508,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=48,HLS_SYN_LUT=66}" *)

module rt_feedback (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        target_unit_id_V,
        fet_packet_spk_id_V_dout,
        fet_packet_spk_id_V_empty_n,
        fet_packet_spk_id_V_read,
        stim_V,
        stim_V_ap_vld
);

parameter    ap_ST_st1_fsm_0 = 9'b1;
parameter    ap_ST_st2_fsm_1 = 9'b10;
parameter    ap_ST_st3_fsm_2 = 9'b100;
parameter    ap_ST_st4_fsm_3 = 9'b1000;
parameter    ap_ST_st5_fsm_4 = 9'b10000;
parameter    ap_ST_st6_fsm_5 = 9'b100000;
parameter    ap_ST_st7_fsm_6 = 9'b1000000;
parameter    ap_ST_st8_fsm_7 = 9'b10000000;
parameter    ap_ST_st9_fsm_8 = 9'b100000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv15_0 = 15'b000000000000000;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv15_61A8 = 15'b110000110101000;
parameter    ap_const_lv15_1 = 15'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] target_unit_id_V;
input  [31:0] fet_packet_spk_id_V_dout;
input   fet_packet_spk_id_V_empty_n;
output   fet_packet_spk_id_V_read;
output  [0:0] stim_V;
output   stim_V_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg fet_packet_spk_id_V_read;
reg stim_V_ap_vld;

(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_24;
wire    grp_rt_feedback_read_packet_fu_65_fet_packet_spk_id_V_blk_n;
reg    fet_packet_spk_id_V_blk_n;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_48;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_56;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_64;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_72;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_80;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_88;
reg    ap_sig_95;
wire   [0:0] grp_rt_feedback_read_packet_fu_65_ap_return;
reg   [0:0] condition_0_reg_90;
wire   [14:0] i_fu_79_p2;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_109;
reg    grp_rt_feedback_read_packet_fu_65_ap_start;
wire    grp_rt_feedback_read_packet_fu_65_ap_done;
wire    grp_rt_feedback_read_packet_fu_65_ap_idle;
wire    grp_rt_feedback_read_packet_fu_65_ap_ready;
wire    grp_rt_feedback_read_packet_fu_65_fet_packet_spk_id_V_read;
reg   [14:0] i_i_reg_54;
wire   [0:0] exitcond_i_fu_73_p2;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_137;
reg   [8:0] ap_NS_fsm;
reg    ap_sig_191;

// power-on initialization
initial begin
#0 ap_CS_fsm = 9'b1;
end

rt_feedback_read_packet grp_rt_feedback_read_packet_fu_65(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_rt_feedback_read_packet_fu_65_ap_start),
    .ap_done(grp_rt_feedback_read_packet_fu_65_ap_done),
    .ap_idle(grp_rt_feedback_read_packet_fu_65_ap_idle),
    .ap_ready(grp_rt_feedback_read_packet_fu_65_ap_ready),
    .fet_packet_spk_id_V_dout(fet_packet_spk_id_V_dout),
    .fet_packet_spk_id_V_empty_n(fet_packet_spk_id_V_empty_n),
    .fet_packet_spk_id_V_read(grp_rt_feedback_read_packet_fu_65_fet_packet_spk_id_V_read),
    .target_unit_id_V(target_unit_id_V),
    .ap_return(grp_rt_feedback_read_packet_fu_65_ap_return),
    .fet_packet_spk_id_V_blk_n(grp_rt_feedback_read_packet_fu_65_fet_packet_spk_id_V_blk_n)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (~(condition_0_reg_90 == 1'b0)) begin
        if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
            i_i_reg_54 <= ap_const_lv15_0;
        end else if (ap_sig_191) begin
            i_i_reg_54 <= i_fu_79_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(grp_rt_feedback_read_packet_fu_65_fet_packet_spk_id_V_blk_n == 1'b0))) begin
        condition_0_reg_90 <= grp_rt_feedback_read_packet_fu_65_ap_return;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & ((condition_0_reg_90 == 1'b0) | ~(1'b0 == exitcond_i_fu_73_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & ((condition_0_reg_90 == 1'b0) | ~(1'b0 == exitcond_i_fu_73_p2)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_24) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_48) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_56) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_64) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_72) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_80) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_88) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_137) begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_109) begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0)) | (1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6))) begin
        fet_packet_spk_id_V_blk_n = grp_rt_feedback_read_packet_fu_65_fet_packet_spk_id_V_blk_n;
    end else begin
        fet_packet_spk_id_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) | (1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6))) begin
        fet_packet_spk_id_V_read = grp_rt_feedback_read_packet_fu_65_fet_packet_spk_id_V_read;
    end else begin
        fet_packet_spk_id_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        grp_rt_feedback_read_packet_fu_65_ap_start = 1'b1;
    end else begin
        grp_rt_feedback_read_packet_fu_65_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & ~(condition_0_reg_90 == 1'b0) & (1'b0 == exitcond_i_fu_73_p2))) begin
        stim_V_ap_vld = 1'b1;
    end else begin
        stim_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~ap_sig_95) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~(grp_rt_feedback_read_packet_fu_65_fet_packet_spk_id_V_blk_n == 1'b0)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st3_fsm_2 : begin
            if (~(grp_rt_feedback_read_packet_fu_65_fet_packet_spk_id_V_blk_n == 1'b0)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st4_fsm_3 : begin
            if (~(grp_rt_feedback_read_packet_fu_65_fet_packet_spk_id_V_blk_n == 1'b0)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st5_fsm_4 : begin
            if (~(grp_rt_feedback_read_packet_fu_65_fet_packet_spk_id_V_blk_n == 1'b0)) begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st6_fsm_5 : begin
            if (~(grp_rt_feedback_read_packet_fu_65_fet_packet_spk_id_V_blk_n == 1'b0)) begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st7_fsm_6 : begin
            if (~(grp_rt_feedback_read_packet_fu_65_fet_packet_spk_id_V_blk_n == 1'b0)) begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : begin
            if (((condition_0_reg_90 == 1'b0) | ~(1'b0 == exitcond_i_fu_73_p2))) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_109 = (1'b1 == ap_CS_fsm[ap_const_lv32_8]);
end

always @ (*) begin
    ap_sig_137 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_191 = ((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & (1'b0 == exitcond_i_fu_73_p2));
end

always @ (*) begin
    ap_sig_24 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_48 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_56 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_64 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_72 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_80 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_88 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_95 = ((ap_start == 1'b0) | (grp_rt_feedback_read_packet_fu_65_fet_packet_spk_id_V_blk_n == 1'b0));
end

assign exitcond_i_fu_73_p2 = ((i_i_reg_54 == ap_const_lv15_61A8) ? 1'b1 : 1'b0);

assign i_fu_79_p2 = (i_i_reg_54 + ap_const_lv15_1);

assign stim_V = 1'b1;

endmodule //rt_feedback
