-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.1
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity rt_feedback is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    fet_packet_spk_id_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    fet_packet_spk_id_V_empty_n : IN STD_LOGIC;
    fet_packet_spk_id_V_read : OUT STD_LOGIC;
    spk_id_out_V_V_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    spk_id_out_V_V_TVALID : OUT STD_LOGIC;
    spk_id_out_V_V_TREADY : IN STD_LOGIC );
end;


architecture behav of rt_feedback is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "rt_feedback,hls_ip_2016_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7k325tffg900-2,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.392000,HLS_SYN_LAT=125017,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=68,HLS_SYN_LUT=108}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_pp0_stg0_fsm_1 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_pp0_stg1_fsm_2 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_st5_fsm_3 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_st6_fsm_4 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_378 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001101111000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv18_3D090 : STD_LOGIC_VECTOR (17 downto 0) := "111101000010010000";
    constant ap_const_lv18_1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_22 : BOOLEAN;
    signal fet_packet_spk_id_V_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_pp0_stg1_fsm_2 : STD_LOGIC;
    signal ap_sig_42 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal exitcond1_reg_162 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_171 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_1 : STD_LOGIC;
    signal ap_sig_60 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal tmp_2_reg_175 : STD_LOGIC_VECTOR (0 downto 0);
    signal spk_id_out_V_V_TDATA_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_st6_fsm_4 : STD_LOGIC;
    signal ap_sig_76 : BOOLEAN;
    signal tmp_reg_179 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_fu_143_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_reg_78 : STD_LOGIC_VECTOR (2 downto 0);
    signal exitcond1_fu_105_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_90 : BOOLEAN;
    signal i_1_fu_111_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_1_reg_166 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1_fu_117_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_123_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_137_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_3 : STD_LOGIC;
    signal ap_sig_108 : BOOLEAN;
    signal j_1_fu_149_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_sig_ioackin_spk_id_out_V_V_TREADY : STD_LOGIC;
    signal ap_sig_124 : BOOLEAN;
    signal i_phi_fu_82_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_reg_89 : STD_LOGIC_VECTOR (17 downto 0);
    signal val_assign_fu_60 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ioackin_spk_id_out_V_V_TREADY : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_85 : BOOLEAN;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_ioackin_spk_id_out_V_V_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_spk_id_out_V_V_TREADY <= ap_const_logic_0;
            else
                if (ap_sig_85) then
                    if (not((not((ap_const_lv1_0 = tmp_reg_179)) and (ap_const_lv1_0 = exitcond_fu_143_p2) and (ap_const_logic_0 = ap_sig_ioackin_spk_id_out_V_V_TREADY)))) then 
                        ap_reg_ioackin_spk_id_out_V_V_TREADY <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = spk_id_out_V_V_TREADY)) then 
                        ap_reg_ioackin_spk_id_out_V_V_TREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_90)) and not((ap_const_lv1_0 = exitcond1_fu_105_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (exitcond1_reg_162 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_124)))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_124)) and not((exitcond1_reg_162 = ap_const_lv1_0))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_78_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_reg_162 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_90)))) then 
                i_reg_78 <= i_1_reg_166;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_78 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    j_reg_89_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_3) and not((ap_const_lv1_0 = tmp_fu_137_p2)))) then 
                j_reg_89 <= ap_const_lv18_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_4) and not((ap_const_lv1_0 = tmp_reg_179)) and (ap_const_lv1_0 = exitcond_fu_143_p2) and not((not((ap_const_lv1_0 = tmp_reg_179)) and (ap_const_lv1_0 = exitcond_fu_143_p2) and (ap_const_logic_0 = ap_sig_ioackin_spk_id_out_V_V_TREADY))))) then 
                j_reg_89 <= j_1_fu_149_p2;
            end if; 
        end if;
    end process;

    val_assign_fu_60_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_const_lv1_0 = tmp_2_reg_175)) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_90)))) then 
                val_assign_fu_60 <= fet_packet_spk_id_V_dout;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                val_assign_fu_60 <= ap_const_lv32_FFFFFFFF;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_90)))) then
                exitcond1_reg_162 <= exitcond1_fu_105_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_90)))) then
                i_1_reg_166 <= i_1_fu_111_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_90)) and (ap_const_lv1_0 = exitcond1_fu_105_p2))) then
                tmp_1_reg_171 <= tmp_1_fu_117_p2;
                tmp_2_reg_175 <= tmp_2_fu_123_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_3)) then
                tmp_reg_179 <= tmp_fu_137_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, tmp_reg_179, exitcond_fu_143_p2, exitcond1_fu_105_p2, ap_sig_90, ap_sig_ioackin_spk_id_out_V_V_TREADY, ap_sig_124)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_pp0_stg0_fsm_1 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_90)) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_90)) and not((ap_const_lv1_0 = exitcond1_fu_105_p2)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg1_fsm_2;
                elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_90)) and not((ap_const_lv1_0 = exitcond1_fu_105_p2)))) then
                    ap_NS_fsm <= ap_ST_st5_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                end if;
            when ap_ST_pp0_stg1_fsm_2 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_124))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg1_fsm_2;
                end if;
            when ap_ST_st5_fsm_3 => 
                ap_NS_fsm <= ap_ST_st6_fsm_4;
            when ap_ST_st6_fsm_4 => 
                if ((not((not((ap_const_lv1_0 = tmp_reg_179)) and (ap_const_lv1_0 = exitcond_fu_143_p2) and (ap_const_logic_0 = ap_sig_ioackin_spk_id_out_V_V_TREADY))) and ((ap_const_lv1_0 = tmp_reg_179) or not((ap_const_lv1_0 = exitcond_fu_143_p2))))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                elsif ((not((ap_const_lv1_0 = tmp_reg_179)) and (ap_const_lv1_0 = exitcond_fu_143_p2) and not((not((ap_const_lv1_0 = tmp_reg_179)) and (ap_const_lv1_0 = exitcond_fu_143_p2) and (ap_const_logic_0 = ap_sig_ioackin_spk_id_out_V_V_TREADY))))) then
                    ap_NS_fsm <= ap_ST_st6_fsm_4;
                else
                    ap_NS_fsm <= ap_ST_st6_fsm_4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;

    ap_done_assign_proc : process(ap_sig_cseq_ST_st6_fsm_4, tmp_reg_179, exitcond_fu_143_p2, ap_sig_ioackin_spk_id_out_V_V_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_4) and not((not((ap_const_lv1_0 = tmp_reg_179)) and (ap_const_lv1_0 = exitcond_fu_143_p2) and (ap_const_logic_0 = ap_sig_ioackin_spk_id_out_V_V_TREADY))) and ((ap_const_lv1_0 = tmp_reg_179) or not((ap_const_lv1_0 = exitcond_fu_143_p2))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st6_fsm_4, tmp_reg_179, exitcond_fu_143_p2, ap_sig_ioackin_spk_id_out_V_V_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_4) and not((not((ap_const_lv1_0 = tmp_reg_179)) and (ap_const_lv1_0 = exitcond_fu_143_p2) and (ap_const_logic_0 = ap_sig_ioackin_spk_id_out_V_V_TREADY))) and ((ap_const_lv1_0 = tmp_reg_179) or not((ap_const_lv1_0 = exitcond_fu_143_p2))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_108_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_108 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_124_assign_proc : process(fet_packet_spk_id_V_empty_n, exitcond1_reg_162, tmp_1_reg_171)
    begin
                ap_sig_124 <= ((exitcond1_reg_162 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_1_reg_171)) and (fet_packet_spk_id_V_empty_n = ap_const_logic_0));
    end process;


    ap_sig_22_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_22 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_42_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_42 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_60_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_60 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_76_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_76 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_85_assign_proc : process(ap_sig_cseq_ST_st6_fsm_4, tmp_reg_179, exitcond_fu_143_p2)
    begin
                ap_sig_85 <= ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_4) and not((ap_const_lv1_0 = tmp_reg_179)) and (ap_const_lv1_0 = exitcond_fu_143_p2));
    end process;


    ap_sig_90_assign_proc : process(fet_packet_spk_id_V_empty_n, tmp_2_reg_175)
    begin
                ap_sig_90 <= (not((ap_const_lv1_0 = tmp_2_reg_175)) and (fet_packet_spk_id_V_empty_n = ap_const_logic_0));
    end process;


    ap_sig_cseq_ST_pp0_stg0_fsm_1_assign_proc : process(ap_sig_60)
    begin
        if (ap_sig_60) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_pp0_stg1_fsm_2_assign_proc : process(ap_sig_42)
    begin
        if (ap_sig_42) then 
            ap_sig_cseq_ST_pp0_stg1_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg1_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_22)
    begin
        if (ap_sig_22) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_3_assign_proc : process(ap_sig_108)
    begin
        if (ap_sig_108) then 
            ap_sig_cseq_ST_st5_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_4_assign_proc : process(ap_sig_76)
    begin
        if (ap_sig_76) then 
            ap_sig_cseq_ST_st6_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_ioackin_spk_id_out_V_V_TREADY_assign_proc : process(spk_id_out_V_V_TREADY, ap_reg_ioackin_spk_id_out_V_V_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_spk_id_out_V_V_TREADY)) then 
            ap_sig_ioackin_spk_id_out_V_V_TREADY <= spk_id_out_V_V_TREADY;
        else 
            ap_sig_ioackin_spk_id_out_V_V_TREADY <= ap_const_logic_1;
        end if; 
    end process;

    exitcond1_fu_105_p2 <= "1" when (i_phi_fu_82_p4 = ap_const_lv3_7) else "0";
    exitcond_fu_143_p2 <= "1" when (j_reg_89 = ap_const_lv18_3D090) else "0";

    fet_packet_spk_id_V_blk_n_assign_proc : process(fet_packet_spk_id_V_empty_n, ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, exitcond1_reg_162, tmp_1_reg_171, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, tmp_2_reg_175)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond1_reg_162 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_1_reg_171))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_const_lv1_0 = tmp_2_reg_175))))) then 
            fet_packet_spk_id_V_blk_n <= fet_packet_spk_id_V_empty_n;
        else 
            fet_packet_spk_id_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fet_packet_spk_id_V_read_assign_proc : process(ap_sig_cseq_ST_pp0_stg1_fsm_2, ap_reg_ppiten_pp0_it0, exitcond1_reg_162, tmp_1_reg_171, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, tmp_2_reg_175, ap_sig_90, ap_sig_124)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg1_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (exitcond1_reg_162 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_1_reg_171)) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_124))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((ap_const_lv1_0 = tmp_2_reg_175)) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_90))))) then 
            fet_packet_spk_id_V_read <= ap_const_logic_1;
        else 
            fet_packet_spk_id_V_read <= ap_const_logic_0;
        end if; 
    end process;

    i_1_fu_111_p2 <= std_logic_vector(unsigned(i_phi_fu_82_p4) + unsigned(ap_const_lv3_1));

    i_phi_fu_82_p4_assign_proc : process(exitcond1_reg_162, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, i_reg_78, i_1_reg_166)
    begin
        if (((exitcond1_reg_162 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))) then 
            i_phi_fu_82_p4 <= i_1_reg_166;
        else 
            i_phi_fu_82_p4 <= i_reg_78;
        end if; 
    end process;

    j_1_fu_149_p2 <= std_logic_vector(unsigned(j_reg_89) + unsigned(ap_const_lv18_1));
    spk_id_out_V_V_TDATA <= ap_const_lv32_378;

    spk_id_out_V_V_TDATA_blk_n_assign_proc : process(spk_id_out_V_V_TREADY, ap_sig_cseq_ST_st6_fsm_4, tmp_reg_179, exitcond_fu_143_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_4) and not((ap_const_lv1_0 = tmp_reg_179)) and (ap_const_lv1_0 = exitcond_fu_143_p2))) then 
            spk_id_out_V_V_TDATA_blk_n <= spk_id_out_V_V_TREADY;
        else 
            spk_id_out_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    spk_id_out_V_V_TVALID_assign_proc : process(ap_sig_cseq_ST_st6_fsm_4, tmp_reg_179, exitcond_fu_143_p2, ap_reg_ioackin_spk_id_out_V_V_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_4) and not((ap_const_lv1_0 = tmp_reg_179)) and (ap_const_lv1_0 = exitcond_fu_143_p2) and (ap_const_logic_0 = ap_reg_ioackin_spk_id_out_V_V_TREADY))) then 
            spk_id_out_V_V_TVALID <= ap_const_logic_1;
        else 
            spk_id_out_V_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    tmp_1_fu_117_p2 <= "1" when (i_phi_fu_82_p4 = ap_const_lv3_0) else "0";
    tmp_2_fu_123_p2 <= "1" when (i_phi_fu_82_p4 = ap_const_lv3_6) else "0";
    tmp_fu_137_p2 <= "1" when (val_assign_fu_60 = ap_const_lv32_378) else "0";
end behav;
