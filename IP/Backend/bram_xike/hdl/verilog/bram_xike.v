// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="bram_xike,hls_ip_2016_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7k325tffg900-2,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=3.410000,HLS_SYN_LAT=1,HLS_SYN_TPT=1,HLS_SYN_MEM=140,HLS_SYN_DSP=0,HLS_SYN_FF=12,HLS_SYN_LUT=318}" *)

module bram_xike (
        ap_clk,
        ap_rst,
        p_doWrite,
        din,
        p_addr_in_V,
        p_doRead,
        dout,
        dout_ap_vld,
        p_addr_V,
        p_scale_read,
        p_scale_addr_V,
        scale_out,
        scale_out_ap_vld,
        p_shift_read,
        p_shift_addr_V,
        shift_out,
        shift_out_ap_vld,
        p_pca_read,
        p_pca_addr_V,
        pca_out,
        pca_out_ap_vld,
        p_vq_read,
        p_vq_addr_V,
        vq_out,
        vq_out_ap_vld,
        p_label_read,
        p_label_addr_V,
        label_out,
        label_out_ap_vld
);

parameter    ap_ST_pp0_stg0_fsm_0 = 1'b1;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv3_4 = 3'b100;
parameter    ap_const_lv3_3 = 3'b11;
parameter    ap_const_lv3_2 = 3'b10;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv16_C8 = 16'b11001000;
parameter    ap_const_lv16_CA8 = 16'b110010101000;
parameter    ap_const_lv16_5AC8 = 16'b101101011001000;
parameter    ap_const_lv16_27 = 16'b100111;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv17_1A538 = 17'b11010010100111000;
parameter    ap_const_lv17_1F358 = 17'b11111001101011000;
parameter    ap_const_lv17_1FF38 = 17'b11111111100111000;
parameter    ap_const_lv17_1FFD8 = 17'b11111111111011000;

input   ap_clk;
input   ap_rst;
input   p_doWrite;
input  [31:0] din;
input  [15:0] p_addr_in_V;
input   p_doRead;
output  [31:0] dout;
output   dout_ap_vld;
input  [15:0] p_addr_V;
input   p_scale_read;
input  [7:0] p_scale_addr_V;
output  [31:0] scale_out;
output   scale_out_ap_vld;
input   p_shift_read;
input  [7:0] p_shift_addr_V;
output  [31:0] shift_out;
output   shift_out_ap_vld;
input   p_pca_read;
input  [15:0] p_pca_addr_V;
output  [31:0] pca_out;
output   pca_out_ap_vld;
input   p_vq_read;
input  [15:0] p_vq_addr_V;
output  [31:0] vq_out;
output   vq_out_ap_vld;
input   p_label_read;
input  [15:0] p_label_addr_V;
output  [31:0] label_out;
output   label_out_ap_vld;

reg[31:0] dout;
reg dout_ap_vld;
reg scale_out_ap_vld;
reg shift_out_ap_vld;
reg pca_out_ap_vld;
reg vq_out_ap_vld;
reg label_out_ap_vld;

wire   [5:0] scale_address0;
reg    scale_ce0;
wire   [31:0] scale_q0;
reg   [5:0] scale_address1;
reg    scale_ce1;
reg    scale_we1;
wire   [31:0] scale_q1;
wire   [7:0] shift_address0;
reg    shift_ce0;
wire   [31:0] shift_q0;
reg   [7:0] shift_address1;
reg    shift_ce1;
reg    shift_we1;
wire   [31:0] shift_q1;
wire   [11:0] pca_address0;
reg    pca_ce0;
wire   [31:0] pca_q0;
reg   [11:0] pca_address1;
reg    pca_ce1;
reg    pca_we1;
wire   [31:0] pca_q1;
wire   [14:0] vq_address0;
reg    vq_ce0;
wire   [31:0] vq_q0;
reg   [14:0] vq_address1;
reg    vq_ce1;
reg    vq_we1;
wire   [31:0] vq_q1;
wire   [14:0] label_r_address0;
reg    label_r_ce0;
wire   [31:0] label_r_q0;
reg   [14:0] label_r_address1;
reg    label_r_ce1;
reg    label_r_we1;
wire   [31:0] label_r_q1;
reg   [0:0] p_label_read_read_reg_765;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_0;
reg    ap_sig_108;
reg    ap_reg_ppiten_pp0_it1;
reg   [0:0] p_vq_read_read_reg_769;
reg   [0:0] p_pca_read_read_reg_773;
reg   [0:0] p_shift_read_read_reg_777;
reg   [0:0] p_scale_read_read_reg_781;
wire   [0:0] p_doRead_read_read_fu_194_p2;
reg   [0:0] p_doRead_read_reg_785;
wire   [0:0] p_doWrite_read_read_fu_212_p2;
reg   [0:0] p_doWrite_read_reg_789;
wire   [2:0] newSel2_fu_537_p3;
reg   [2:0] newSel2_reg_818;
wire   [2:0] newSel5_fu_627_p3;
wire   [63:0] tmp_7_fu_430_p1;
wire   [63:0] tmp_8_fu_435_p1;
wire   [63:0] tmp_9_fu_440_p1;
wire   [63:0] tmp_s_fu_445_p1;
wire   [63:0] tmp_1_fu_450_p1;
wire  signed [63:0] tmp_20_fu_645_p1;
wire  signed [63:0] tmp_19_fu_660_p1;
wire  signed [63:0] tmp_18_fu_675_p1;
wire  signed [63:0] tmp_17_fu_690_p1;
wire   [63:0] tmp_16_fu_695_p1;
wire  signed [63:0] tmp_15_fu_710_p1;
wire  signed [63:0] tmp_14_fu_725_p1;
wire  signed [63:0] tmp_13_fu_740_p1;
wire  signed [63:0] tmp_12_fu_755_p1;
wire   [63:0] tmp_11_fu_760_p1;
wire   [0:0] tmp_4_fu_455_p2;
wire   [0:0] sel_tmp1_fu_473_p2;
wire   [0:0] tmp_6_fu_461_p2;
wire   [0:0] sel_tmp6_fu_485_p2;
wire   [0:0] sel_tmp7_fu_491_p2;
wire   [0:0] sel_tmp2_fu_479_p2;
wire   [0:0] or_cond_fu_505_p2;
wire   [1:0] newSel_fu_497_p3;
wire   [1:0] newSel18_cast_fu_511_p3;
wire   [1:0] newSel1_fu_519_p3;
wire   [0:0] tmp_3_fu_467_p2;
wire   [0:0] or_cond1_fu_531_p2;
wire   [2:0] newSel20_cast_fu_527_p1;
wire   [0:0] tmp_2_fu_545_p2;
wire   [0:0] sel_tmp_fu_563_p2;
wire   [0:0] tmp_5_fu_551_p2;
wire   [0:0] sel_tmp4_fu_575_p2;
wire   [0:0] sel_tmp5_fu_581_p2;
wire   [0:0] sel_tmp3_fu_569_p2;
wire   [0:0] or_cond2_fu_595_p2;
wire   [1:0] newSel3_fu_587_p3;
wire   [1:0] newSel26_cast_fu_601_p3;
wire   [1:0] newSel4_fu_609_p3;
wire   [0:0] tmp_10_fu_557_p2;
wire   [0:0] or_cond3_fu_621_p2;
wire   [2:0] newSel28_cast_fu_617_p1;
wire   [16:0] lhs_V_7_cast_fu_635_p1;
wire   [16:0] r_V_7_fu_639_p2;
wire   [16:0] lhs_V_6_cast_fu_650_p1;
wire   [16:0] r_V_6_fu_654_p2;
wire   [16:0] lhs_V_5_cast_fu_665_p1;
wire   [16:0] r_V_5_fu_669_p2;
wire   [16:0] lhs_V_4_cast_fu_680_p1;
wire   [16:0] r_V_4_fu_684_p2;
wire   [16:0] lhs_V_3_cast_fu_700_p1;
wire   [16:0] r_V_3_fu_704_p2;
wire   [16:0] lhs_V_2_cast_fu_715_p1;
wire   [16:0] r_V_2_fu_719_p2;
wire   [16:0] lhs_V_1_cast_fu_730_p1;
wire   [16:0] r_V_1_fu_734_p2;
wire   [16:0] lhs_V_cast_fu_745_p1;
wire   [16:0] r_V_fu_749_p2;
reg   [0:0] ap_NS_fsm;
wire    ap_sig_pprstidle_pp0;
reg    ap_sig_525;
reg    ap_sig_165;
reg    ap_sig_216;
reg    ap_sig_192;
reg    ap_sig_177;
reg    ap_sig_226;
reg    ap_sig_189;
reg    ap_sig_236;
reg    ap_sig_183;
reg    ap_sig_231;
reg    ap_sig_171;
reg    ap_sig_221;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'b1;
#0 ap_reg_ppiten_pp0_it1 = 1'b0;
end

bram_xike_scale #(
    .DataWidth( 32 ),
    .AddressRange( 40 ),
    .AddressWidth( 6 ))
scale_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(scale_address0),
    .ce0(scale_ce0),
    .q0(scale_q0),
    .address1(scale_address1),
    .ce1(scale_ce1),
    .we1(scale_we1),
    .d1(din),
    .q1(scale_q1)
);

bram_xike_shift #(
    .DataWidth( 32 ),
    .AddressRange( 160 ),
    .AddressWidth( 8 ))
shift_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(shift_address0),
    .ce0(shift_ce0),
    .q0(shift_q0),
    .address1(shift_address1),
    .ce1(shift_ce1),
    .we1(shift_we1),
    .d1(din),
    .q1(shift_q1)
);

bram_xike_pca #(
    .DataWidth( 32 ),
    .AddressRange( 3040 ),
    .AddressWidth( 12 ))
pca_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pca_address0),
    .ce0(pca_ce0),
    .q0(pca_q0),
    .address1(pca_address1),
    .ce1(pca_ce1),
    .we1(pca_we1),
    .d1(din),
    .q1(pca_q1)
);

bram_xike_vq #(
    .DataWidth( 32 ),
    .AddressRange( 20000 ),
    .AddressWidth( 15 ))
vq_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(vq_address0),
    .ce0(vq_ce0),
    .q0(vq_q0),
    .address1(vq_address1),
    .ce1(vq_ce1),
    .we1(vq_we1),
    .d1(din),
    .q1(vq_q1)
);

bram_xike_vq #(
    .DataWidth( 32 ),
    .AddressRange( 20000 ),
    .AddressWidth( 15 ))
label_r_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(label_r_address0),
    .ce0(label_r_ce0),
    .q0(label_r_q0),
    .address1(label_r_address1),
    .ce1(label_r_ce1),
    .we1(label_r_we1),
    .d1(din),
    .q1(label_r_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_pp0_stg0_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0)) begin
            ap_reg_ppiten_pp0_it1 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0)) begin
        newSel2_reg_818 <= newSel2_fu_537_p3;
        p_doRead_read_reg_785 <= p_doRead;
        p_doWrite_read_reg_789 <= p_doWrite;
        p_label_read_read_reg_765 <= p_label_read;
        p_pca_read_read_reg_773 <= p_pca_read;
        p_scale_read_read_reg_781 <= p_scale_read;
        p_shift_read_read_reg_777 <= p_shift_read;
        p_vq_read_read_reg_769 <= p_vq_read;
    end
end

always @ (*) begin
    if (ap_sig_108) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_0 = 1'b0;
    end
end

assign ap_sig_pprstidle_pp0 = 1'b0;

always @ (*) begin
    if (ap_sig_525) begin
        if ((newSel2_reg_818 == ap_const_lv3_0)) begin
            dout = scale_q1;
        end else if ((newSel2_reg_818 == ap_const_lv3_1)) begin
            dout = shift_q1;
        end else if ((newSel2_reg_818 == ap_const_lv3_2)) begin
            dout = pca_q1;
        end else if ((newSel2_reg_818 == ap_const_lv3_3)) begin
            dout = vq_q1;
        end else if ((newSel2_reg_818 == ap_const_lv3_4)) begin
            dout = label_r_q1;
        end else begin
            dout = 'bx;
        end
    end else begin
        dout = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == ap_reg_ppiten_pp0_it1) & (p_doWrite_read_reg_789 == 1'b0) & ~(p_doRead_read_reg_785 == 1'b0) & (newSel2_reg_818 == ap_const_lv3_4)) | ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == ap_reg_ppiten_pp0_it1) & (p_doWrite_read_reg_789 == 1'b0) & ~(p_doRead_read_reg_785 == 1'b0) & (newSel2_reg_818 == ap_const_lv3_3)) | ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == ap_reg_ppiten_pp0_it1) & (p_doWrite_read_reg_789 == 1'b0) & ~(p_doRead_read_reg_785 == 1'b0) & (newSel2_reg_818 == ap_const_lv3_2)) | ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == ap_reg_ppiten_pp0_it1) & (p_doWrite_read_reg_789 == 1'b0) & ~(p_doRead_read_reg_785 == 1'b0) & (newSel2_reg_818 == ap_const_lv3_1)) | ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == ap_reg_ppiten_pp0_it1) & (p_doWrite_read_reg_789 == 1'b0) & ~(p_doRead_read_reg_785 == 1'b0) & (newSel2_reg_818 == ap_const_lv3_0)))) begin
        dout_ap_vld = 1'b1;
    end else begin
        dout_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == ap_reg_ppiten_pp0_it1) & ~(p_label_read_read_reg_765 == 1'b0))) begin
        label_out_ap_vld = 1'b1;
    end else begin
        label_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_192) begin
        if (ap_sig_216) begin
            label_r_address1 = tmp_15_fu_710_p1;
        end else if (ap_sig_165) begin
            label_r_address1 = tmp_20_fu_645_p1;
        end else begin
            label_r_address1 = 'bx;
        end
    end else begin
        label_r_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == 1'b1))) begin
        label_r_ce0 = 1'b1;
    end else begin
        label_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == 1'b1) & (p_doWrite_read_read_fu_212_p2 == 1'b0) & ~(p_doRead_read_read_fu_194_p2 == 1'b0) & (newSel2_fu_537_p3 == ap_const_lv3_4)) | ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == 1'b1) & ~(p_doWrite_read_read_fu_212_p2 == 1'b0) & (newSel5_fu_627_p3 == ap_const_lv3_4)))) begin
        label_r_ce1 = 1'b1;
    end else begin
        label_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == 1'b1) & ~(p_doWrite_read_read_fu_212_p2 == 1'b0) & (newSel5_fu_627_p3 == ap_const_lv3_4))) begin
        label_r_we1 = 1'b1;
    end else begin
        label_r_we1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_192) begin
        if (ap_sig_226) begin
            pca_address1 = tmp_13_fu_740_p1;
        end else if (ap_sig_177) begin
            pca_address1 = tmp_18_fu_675_p1;
        end else begin
            pca_address1 = 'bx;
        end
    end else begin
        pca_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == 1'b1))) begin
        pca_ce0 = 1'b1;
    end else begin
        pca_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == 1'b1) & (p_doWrite_read_read_fu_212_p2 == 1'b0) & ~(p_doRead_read_read_fu_194_p2 == 1'b0) & (newSel2_fu_537_p3 == ap_const_lv3_2)) | ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == 1'b1) & ~(p_doWrite_read_read_fu_212_p2 == 1'b0) & (newSel5_fu_627_p3 == ap_const_lv3_2)))) begin
        pca_ce1 = 1'b1;
    end else begin
        pca_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == ap_reg_ppiten_pp0_it1) & ~(p_pca_read_read_reg_773 == 1'b0))) begin
        pca_out_ap_vld = 1'b1;
    end else begin
        pca_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == 1'b1) & ~(p_doWrite_read_read_fu_212_p2 == 1'b0) & (newSel5_fu_627_p3 == ap_const_lv3_2))) begin
        pca_we1 = 1'b1;
    end else begin
        pca_we1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_192) begin
        if (ap_sig_236) begin
            scale_address1 = tmp_11_fu_760_p1;
        end else if (ap_sig_189) begin
            scale_address1 = tmp_16_fu_695_p1;
        end else begin
            scale_address1 = 'bx;
        end
    end else begin
        scale_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == 1'b1))) begin
        scale_ce0 = 1'b1;
    end else begin
        scale_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == 1'b1) & (p_doWrite_read_read_fu_212_p2 == 1'b0) & ~(p_doRead_read_read_fu_194_p2 == 1'b0) & (newSel2_fu_537_p3 == ap_const_lv3_0)) | ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == 1'b1) & ~(p_doWrite_read_read_fu_212_p2 == 1'b0) & (newSel5_fu_627_p3 == ap_const_lv3_0)))) begin
        scale_ce1 = 1'b1;
    end else begin
        scale_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == ap_reg_ppiten_pp0_it1) & ~(p_scale_read_read_reg_781 == 1'b0))) begin
        scale_out_ap_vld = 1'b1;
    end else begin
        scale_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == 1'b1) & ~(p_doWrite_read_read_fu_212_p2 == 1'b0) & (newSel5_fu_627_p3 == ap_const_lv3_0))) begin
        scale_we1 = 1'b1;
    end else begin
        scale_we1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_192) begin
        if (ap_sig_231) begin
            shift_address1 = tmp_12_fu_755_p1;
        end else if (ap_sig_183) begin
            shift_address1 = tmp_17_fu_690_p1;
        end else begin
            shift_address1 = 'bx;
        end
    end else begin
        shift_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == 1'b1))) begin
        shift_ce0 = 1'b1;
    end else begin
        shift_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == 1'b1) & (p_doWrite_read_read_fu_212_p2 == 1'b0) & ~(p_doRead_read_read_fu_194_p2 == 1'b0) & (newSel2_fu_537_p3 == ap_const_lv3_1)) | ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == 1'b1) & ~(p_doWrite_read_read_fu_212_p2 == 1'b0) & (newSel5_fu_627_p3 == ap_const_lv3_1)))) begin
        shift_ce1 = 1'b1;
    end else begin
        shift_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == ap_reg_ppiten_pp0_it1) & ~(p_shift_read_read_reg_777 == 1'b0))) begin
        shift_out_ap_vld = 1'b1;
    end else begin
        shift_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == 1'b1) & ~(p_doWrite_read_read_fu_212_p2 == 1'b0) & (newSel5_fu_627_p3 == ap_const_lv3_1))) begin
        shift_we1 = 1'b1;
    end else begin
        shift_we1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_192) begin
        if (ap_sig_221) begin
            vq_address1 = tmp_14_fu_725_p1;
        end else if (ap_sig_171) begin
            vq_address1 = tmp_19_fu_660_p1;
        end else begin
            vq_address1 = 'bx;
        end
    end else begin
        vq_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == 1'b1))) begin
        vq_ce0 = 1'b1;
    end else begin
        vq_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == 1'b1) & (p_doWrite_read_read_fu_212_p2 == 1'b0) & ~(p_doRead_read_read_fu_194_p2 == 1'b0) & (newSel2_fu_537_p3 == ap_const_lv3_3)) | ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == 1'b1) & ~(p_doWrite_read_read_fu_212_p2 == 1'b0) & (newSel5_fu_627_p3 == ap_const_lv3_3)))) begin
        vq_ce1 = 1'b1;
    end else begin
        vq_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == ap_reg_ppiten_pp0_it1) & ~(p_vq_read_read_reg_769 == 1'b0))) begin
        vq_out_ap_vld = 1'b1;
    end else begin
        vq_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == 1'b1) & ~(p_doWrite_read_read_fu_212_p2 == 1'b0) & (newSel5_fu_627_p3 == ap_const_lv3_3))) begin
        vq_we1 = 1'b1;
    end else begin
        vq_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_pp0_stg0_fsm_0 : begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_108 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_165 = ((p_doWrite_read_read_fu_212_p2 == 1'b0) & ~(p_doRead_read_read_fu_194_p2 == 1'b0) & (newSel2_fu_537_p3 == ap_const_lv3_4));
end

always @ (*) begin
    ap_sig_171 = ((p_doWrite_read_read_fu_212_p2 == 1'b0) & ~(p_doRead_read_read_fu_194_p2 == 1'b0) & (newSel2_fu_537_p3 == ap_const_lv3_3));
end

always @ (*) begin
    ap_sig_177 = ((p_doWrite_read_read_fu_212_p2 == 1'b0) & ~(p_doRead_read_read_fu_194_p2 == 1'b0) & (newSel2_fu_537_p3 == ap_const_lv3_2));
end

always @ (*) begin
    ap_sig_183 = ((p_doWrite_read_read_fu_212_p2 == 1'b0) & ~(p_doRead_read_read_fu_194_p2 == 1'b0) & (newSel2_fu_537_p3 == ap_const_lv3_1));
end

always @ (*) begin
    ap_sig_189 = ((p_doWrite_read_read_fu_212_p2 == 1'b0) & ~(p_doRead_read_read_fu_194_p2 == 1'b0) & (newSel2_fu_537_p3 == ap_const_lv3_0));
end

always @ (*) begin
    ap_sig_192 = ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == 1'b1));
end

always @ (*) begin
    ap_sig_216 = (~(p_doWrite_read_read_fu_212_p2 == 1'b0) & (newSel5_fu_627_p3 == ap_const_lv3_4));
end

always @ (*) begin
    ap_sig_221 = (~(p_doWrite_read_read_fu_212_p2 == 1'b0) & (newSel5_fu_627_p3 == ap_const_lv3_3));
end

always @ (*) begin
    ap_sig_226 = (~(p_doWrite_read_read_fu_212_p2 == 1'b0) & (newSel5_fu_627_p3 == ap_const_lv3_2));
end

always @ (*) begin
    ap_sig_231 = (~(p_doWrite_read_read_fu_212_p2 == 1'b0) & (newSel5_fu_627_p3 == ap_const_lv3_1));
end

always @ (*) begin
    ap_sig_236 = (~(p_doWrite_read_read_fu_212_p2 == 1'b0) & (newSel5_fu_627_p3 == ap_const_lv3_0));
end

always @ (*) begin
    ap_sig_525 = ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_0) & (1'b1 == ap_reg_ppiten_pp0_it1) & (p_doWrite_read_reg_789 == 1'b0) & ~(p_doRead_read_reg_785 == 1'b0));
end

assign label_out = label_r_q0;

assign label_r_address0 = tmp_1_fu_450_p1;

assign lhs_V_1_cast_fu_730_p1 = p_addr_in_V;

assign lhs_V_2_cast_fu_715_p1 = p_addr_in_V;

assign lhs_V_3_cast_fu_700_p1 = p_addr_in_V;

assign lhs_V_4_cast_fu_680_p1 = p_addr_V;

assign lhs_V_5_cast_fu_665_p1 = p_addr_V;

assign lhs_V_6_cast_fu_650_p1 = p_addr_V;

assign lhs_V_7_cast_fu_635_p1 = p_addr_V;

assign lhs_V_cast_fu_745_p1 = p_addr_in_V;

assign newSel18_cast_fu_511_p3 = ((sel_tmp1_fu_473_p2[0:0] === 1'b1) ? ap_const_lv2_3 : ap_const_lv2_0);

assign newSel1_fu_519_p3 = ((or_cond_fu_505_p2[0:0] === 1'b1) ? newSel_fu_497_p3 : newSel18_cast_fu_511_p3);

assign newSel20_cast_fu_527_p1 = newSel1_fu_519_p3;

assign newSel26_cast_fu_601_p3 = ((sel_tmp_fu_563_p2[0:0] === 1'b1) ? ap_const_lv2_3 : ap_const_lv2_0);

assign newSel28_cast_fu_617_p1 = newSel4_fu_609_p3;

assign newSel2_fu_537_p3 = ((or_cond1_fu_531_p2[0:0] === 1'b1) ? newSel20_cast_fu_527_p1 : ap_const_lv3_4);

assign newSel3_fu_587_p3 = ((sel_tmp5_fu_581_p2[0:0] === 1'b1) ? ap_const_lv2_2 : ap_const_lv2_1);

assign newSel4_fu_609_p3 = ((or_cond2_fu_595_p2[0:0] === 1'b1) ? newSel3_fu_587_p3 : newSel26_cast_fu_601_p3);

assign newSel5_fu_627_p3 = ((or_cond3_fu_621_p2[0:0] === 1'b1) ? newSel28_cast_fu_617_p1 : ap_const_lv3_4);

assign newSel_fu_497_p3 = ((sel_tmp7_fu_491_p2[0:0] === 1'b1) ? ap_const_lv2_2 : ap_const_lv2_1);

assign or_cond1_fu_531_p2 = (or_cond_fu_505_p2 | tmp_3_fu_467_p2);

assign or_cond2_fu_595_p2 = (sel_tmp5_fu_581_p2 | sel_tmp3_fu_569_p2);

assign or_cond3_fu_621_p2 = (or_cond2_fu_595_p2 | tmp_10_fu_557_p2);

assign or_cond_fu_505_p2 = (sel_tmp7_fu_491_p2 | sel_tmp2_fu_479_p2);

assign p_doRead_read_read_fu_194_p2 = p_doRead;

assign p_doWrite_read_read_fu_212_p2 = p_doWrite;

assign pca_address0 = tmp_9_fu_440_p1;

assign pca_out = pca_q0;

assign r_V_1_fu_734_p2 = ($signed(lhs_V_1_cast_fu_730_p1) + $signed(ap_const_lv17_1FF38));

assign r_V_2_fu_719_p2 = ($signed(lhs_V_2_cast_fu_715_p1) + $signed(ap_const_lv17_1F358));

assign r_V_3_fu_704_p2 = ($signed(lhs_V_3_cast_fu_700_p1) + $signed(ap_const_lv17_1A538));

assign r_V_4_fu_684_p2 = ($signed(lhs_V_4_cast_fu_680_p1) + $signed(ap_const_lv17_1FFD8));

assign r_V_5_fu_669_p2 = ($signed(lhs_V_5_cast_fu_665_p1) + $signed(ap_const_lv17_1FF38));

assign r_V_6_fu_654_p2 = ($signed(lhs_V_6_cast_fu_650_p1) + $signed(ap_const_lv17_1F358));

assign r_V_7_fu_639_p2 = ($signed(lhs_V_7_cast_fu_635_p1) + $signed(ap_const_lv17_1A538));

assign r_V_fu_749_p2 = ($signed(lhs_V_cast_fu_745_p1) + $signed(ap_const_lv17_1FFD8));

assign scale_address0 = tmp_7_fu_430_p1;

assign scale_out = scale_q0;

assign sel_tmp1_fu_473_p2 = ((p_addr_V > ap_const_lv16_27) ? 1'b1 : 1'b0);

assign sel_tmp2_fu_479_p2 = (tmp_4_fu_455_p2 & sel_tmp1_fu_473_p2);

assign sel_tmp3_fu_569_p2 = (tmp_2_fu_545_p2 & sel_tmp_fu_563_p2);

assign sel_tmp4_fu_575_p2 = (tmp_2_fu_545_p2 ^ 1'b1);

assign sel_tmp5_fu_581_p2 = (tmp_5_fu_551_p2 & sel_tmp4_fu_575_p2);

assign sel_tmp6_fu_485_p2 = (tmp_4_fu_455_p2 ^ 1'b1);

assign sel_tmp7_fu_491_p2 = (tmp_6_fu_461_p2 & sel_tmp6_fu_485_p2);

assign sel_tmp_fu_563_p2 = ((p_addr_in_V > ap_const_lv16_27) ? 1'b1 : 1'b0);

assign shift_address0 = tmp_8_fu_435_p1;

assign shift_out = shift_q0;

assign tmp_10_fu_557_p2 = ((p_addr_in_V < ap_const_lv16_5AC8) ? 1'b1 : 1'b0);

assign tmp_11_fu_760_p1 = p_addr_in_V;

assign tmp_12_fu_755_p1 = $signed(r_V_fu_749_p2);

assign tmp_13_fu_740_p1 = $signed(r_V_1_fu_734_p2);

assign tmp_14_fu_725_p1 = $signed(r_V_2_fu_719_p2);

assign tmp_15_fu_710_p1 = $signed(r_V_3_fu_704_p2);

assign tmp_16_fu_695_p1 = p_addr_V;

assign tmp_17_fu_690_p1 = $signed(r_V_4_fu_684_p2);

assign tmp_18_fu_675_p1 = $signed(r_V_5_fu_669_p2);

assign tmp_19_fu_660_p1 = $signed(r_V_6_fu_654_p2);

assign tmp_1_fu_450_p1 = p_label_addr_V;

assign tmp_20_fu_645_p1 = $signed(r_V_7_fu_639_p2);

assign tmp_2_fu_545_p2 = ((p_addr_in_V < ap_const_lv16_C8) ? 1'b1 : 1'b0);

assign tmp_3_fu_467_p2 = ((p_addr_V < ap_const_lv16_5AC8) ? 1'b1 : 1'b0);

assign tmp_4_fu_455_p2 = ((p_addr_V < ap_const_lv16_C8) ? 1'b1 : 1'b0);

assign tmp_5_fu_551_p2 = ((p_addr_in_V < ap_const_lv16_CA8) ? 1'b1 : 1'b0);

assign tmp_6_fu_461_p2 = ((p_addr_V < ap_const_lv16_CA8) ? 1'b1 : 1'b0);

assign tmp_7_fu_430_p1 = p_scale_addr_V;

assign tmp_8_fu_435_p1 = p_shift_addr_V;

assign tmp_9_fu_440_p1 = p_pca_addr_V;

assign tmp_s_fu_445_p1 = p_vq_addr_V;

assign vq_address0 = tmp_s_fu_445_p1;

assign vq_out = vq_q0;

endmodule //bram_xike
